//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimeLog.TransactionalAPI.SDK.OrganisationService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="APIBase", Namespace="http://www.timelog.com/api/tlp/v1_2")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.LegalEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.EmployeeHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Role))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ModuleType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfLegalEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Request))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.APIBaseExtended))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.CustomField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ExternalSystemContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Department))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Employee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfModuleType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken))]
    public partial class APIBase : object
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LegalEntity", Namespace="http://www.timelog.com/api/tlp/v1_7")]
    public partial class LegalEntity : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase
    {
        
        private System.Guid IDField;
        
        private int LegalEntityIDField;
        
        private string NameField;
        
        private int CurrencyIDField;
        
        private int DefaultCountryIDField;
        
        private bool IsActiveField;
        
        private bool IsSystemLegalEntityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LegalEntityID
        {
            get
            {
                return this.LegalEntityIDField;
            }
            set
            {
                this.LegalEntityIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public int CurrencyID
        {
            get
            {
                return this.CurrencyIDField;
            }
            set
            {
                this.CurrencyIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public int DefaultCountryID
        {
            get
            {
                return this.DefaultCountryIDField;
            }
            set
            {
                this.DefaultCountryIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public bool IsActive
        {
            get
            {
                return this.IsActiveField;
            }
            set
            {
                this.IsActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsSystemLegalEntity
        {
            get
            {
                return this.IsSystemLegalEntityField;
            }
            set
            {
                this.IsSystemLegalEntityField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmployeeHeader", Namespace="http://www.timelog.com/api/tlp/v1_7")]
    public partial class EmployeeHeader : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase
    {
        
        private System.Guid IDField;
        
        private int EmployeeIDField;
        
        private string InitialsField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string EmployeeNoField;
        
        private string FullnameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int EmployeeID
        {
            get
            {
                return this.EmployeeIDField;
            }
            set
            {
                this.EmployeeIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Initials
        {
            get
            {
                return this.InitialsField;
            }
            set
            {
                this.InitialsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string EmployeeNo
        {
            get
            {
                return this.EmployeeNoField;
            }
            set
            {
                this.EmployeeNoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Fullname
        {
            get
            {
                return this.FullnameField;
            }
            set
            {
                this.FullnameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Role", Namespace="http://www.timelog.com/api/tlp/v1_7")]
    public partial class Role : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase
    {
        
        private System.Guid IDField;
        
        private int RoleIDField;
        
        private string NameField;
        
        private string DescriptionField;
        
        private bool isActiveField;
        
        private int EmployeeIDField;
        
        private bool IsLockedSystemRoleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleID
        {
            get
            {
                return this.RoleIDField;
            }
            set
            {
                this.RoleIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public bool isActive
        {
            get
            {
                return this.isActiveField;
            }
            set
            {
                this.isActiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int EmployeeID
        {
            get
            {
                return this.EmployeeIDField;
            }
            set
            {
                this.EmployeeIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsLockedSystemRole
        {
            get
            {
                return this.IsLockedSystemRoleField;
            }
            set
            {
                this.IsLockedSystemRoleField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ModuleType", Namespace="http://www.timelog.com/api/tlp/v1_7")]
    public partial class ModuleType : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase
    {
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfLegalEntity", Namespace="http://api.timelog.com")]
    public partial class ResponseOfLegalEntity : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase
    {
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.LegalEntity[] ReturnField;
        
        private string ReturnTypeDescriptionField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.Request RequestField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.ExecutionStatus ResponseStateField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage[] MessagesField;
        
        private int ErrorCodeField;
        
        private bool IsReturnPagedField;
        
        private int TotalPageCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.LegalEntity[] Return
        {
            get
            {
                return this.ReturnField;
            }
            set
            {
                this.ReturnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription
        {
            get
            {
                return this.ReturnTypeDescriptionField;
            }
            set
            {
                this.ReturnTypeDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.Request Request
        {
            get
            {
                return this.RequestField;
            }
            set
            {
                this.RequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ExecutionStatus ResponseState
        {
            get
            {
                return this.ResponseStateField;
            }
            set
            {
                this.ResponseStateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage[] Messages
        {
            get
            {
                return this.MessagesField;
            }
            set
            {
                this.MessagesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsReturnPaged
        {
            get
            {
                return this.IsReturnPagedField;
            }
            set
            {
                this.IsReturnPagedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int TotalPageCount
        {
            get
            {
                return this.TotalPageCountField;
            }
            set
            {
                this.TotalPageCountField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Request", Namespace="http://api.timelog.com")]
    public partial class Request : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase
    {
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.RequestParameter[] ParametersField;
        
        private string ServiceClassField;
        
        private string MethodNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.RequestParameter[] Parameters
        {
            get
            {
                return this.ParametersField;
            }
            set
            {
                this.ParametersField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceClass
        {
            get
            {
                return this.ServiceClassField;
            }
            set
            {
                this.ServiceClassField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string MethodName
        {
            get
            {
                return this.MethodNameField;
            }
            set
            {
                this.MethodNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfEmployee", Namespace="http://api.timelog.com")]
    public partial class ResponseOfEmployee : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase
    {
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.Employee[] ReturnField;
        
        private string ReturnTypeDescriptionField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.Request RequestField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.ExecutionStatus ResponseStateField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage[] MessagesField;
        
        private int ErrorCodeField;
        
        private bool IsReturnPagedField;
        
        private int TotalPageCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.Employee[] Return
        {
            get
            {
                return this.ReturnField;
            }
            set
            {
                this.ReturnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription
        {
            get
            {
                return this.ReturnTypeDescriptionField;
            }
            set
            {
                this.ReturnTypeDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.Request Request
        {
            get
            {
                return this.RequestField;
            }
            set
            {
                this.RequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ExecutionStatus ResponseState
        {
            get
            {
                return this.ResponseStateField;
            }
            set
            {
                this.ResponseStateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage[] Messages
        {
            get
            {
                return this.MessagesField;
            }
            set
            {
                this.MessagesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsReturnPaged
        {
            get
            {
                return this.IsReturnPagedField;
            }
            set
            {
                this.IsReturnPagedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int TotalPageCount
        {
            get
            {
                return this.TotalPageCountField;
            }
            set
            {
                this.TotalPageCountField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="APIBaseExtended", Namespace="http://api.timelog.com")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ExternalSystemContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Department))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Employee))]
    public partial class APIBaseExtended : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase
    {
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.DataAction ActionField;
        
        private bool IsCustomFieldsLoadedField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.CustomField[] CustomFieldsField;
        
        private bool IsExternalKeysLoadedField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.ExternalSystemContext[] ExternalKeysField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.DataAction Action
        {
            get
            {
                return this.ActionField;
            }
            set
            {
                this.ActionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCustomFieldsLoaded
        {
            get
            {
                return this.IsCustomFieldsLoadedField;
            }
            set
            {
                this.IsCustomFieldsLoadedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.CustomField[] CustomFields
        {
            get
            {
                return this.CustomFieldsField;
            }
            set
            {
                this.CustomFieldsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public bool IsExternalKeysLoaded
        {
            get
            {
                return this.IsExternalKeysLoadedField;
            }
            set
            {
                this.IsExternalKeysLoadedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ExternalSystemContext[] ExternalKeys
        {
            get
            {
                return this.ExternalKeysField;
            }
            set
            {
                this.ExternalKeysField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomField", Namespace="http://api.timelog.com/services/customfield/1_0")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ExecutionStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.DomainType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.LegalEntity[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.LegalEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Employee[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Employee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.EmployeeHeader[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.EmployeeHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Department[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Department))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Role[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Role))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ModuleType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ModuleType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfLegalEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Request))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.RequestParameter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.RequestParameter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.APIBaseExtended))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ExternalSystemContext[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ExternalSystemContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfModuleType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessageSeverity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.DataAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.CustomField[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ValueOption[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ValueOption))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.DataTypeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ValidateModelEnum))]
    public partial class CustomField : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase
    {
        
        private string SectionLabelField;
        
        private string SectionIdentField;
        
        private string LabelField;
        
        private string IdentField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.DomainType DomainTypeField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.DataTypeEnum DataTypeField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.ValueOption[] DataValuesField;
        
        private object ValueField;
        
        private int SortOrderField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.ValidateModelEnum ValidationModelField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SectionLabel
        {
            get
            {
                return this.SectionLabelField;
            }
            set
            {
                this.SectionLabelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string SectionIdent
        {
            get
            {
                return this.SectionIdentField;
            }
            set
            {
                this.SectionIdentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Label
        {
            get
            {
                return this.LabelField;
            }
            set
            {
                this.LabelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string Ident
        {
            get
            {
                return this.IdentField;
            }
            set
            {
                this.IdentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.DomainType DomainType
        {
            get
            {
                return this.DomainTypeField;
            }
            set
            {
                this.DomainTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.DataTypeEnum DataType
        {
            get
            {
                return this.DataTypeField;
            }
            set
            {
                this.DataTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ValueOption[] DataValues
        {
            get
            {
                return this.DataValuesField;
            }
            set
            {
                this.DataValuesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public object Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public int SortOrder
        {
            get
            {
                return this.SortOrderField;
            }
            set
            {
                this.SortOrderField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ValidateModelEnum ValidationModel
        {
            get
            {
                return this.ValidationModelField;
            }
            set
            {
                this.ValidationModelField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalSystemContext", Namespace="http://api.timelog.com")]
    public partial class ExternalSystemContext : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBaseExtended
    {
        
        private string SystemNameField;
        
        private string ExternalIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemName
        {
            get
            {
                return this.SystemNameField;
            }
            set
            {
                this.SystemNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string ExternalID
        {
            get
            {
                return this.ExternalIDField;
            }
            set
            {
                this.ExternalIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Department", Namespace="http://www.timelog.com/api/tlp/v1_7")]
    public partial class Department : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBaseExtended
    {
        
        private System.Guid IDField;
        
        private string NameField;
        
        private string NoField;
        
        private System.Guid ParentDepartmentGuidField;
        
        private System.Guid DepartmentManagerGuidField;
        
        private int DepartmentIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string No
        {
            get
            {
                return this.NoField;
            }
            set
            {
                this.NoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ParentDepartmentGuid
        {
            get
            {
                return this.ParentDepartmentGuidField;
            }
            set
            {
                this.ParentDepartmentGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public System.Guid DepartmentManagerGuid
        {
            get
            {
                return this.DepartmentManagerGuidField;
            }
            set
            {
                this.DepartmentManagerGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int DepartmentID
        {
            get
            {
                return this.DepartmentIDField;
            }
            set
            {
                this.DepartmentIDField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://www.timelog.com/api/tlp/v1_7")]
    public partial class Employee : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBaseExtended
    {
        
        private System.Guid IDField;
        
        private int EmployeeIDField;
        
        private string InitialsField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private string FullnameField;
        
        private string EmployeeNoField;
        
        private string TitleField;
        
        private System.Guid DepartmentGuidField;
        
        private string DepartmentNameField;
        
        private string DepartmentNoField;
        
        private int InterfaceLanguageField;
        
        private string TelephoneField;
        
        private string MobileField;
        
        private string PrivateAddressField;
        
        private string PrivateZipField;
        
        private string PrivateCityField;
        
        private string PrivateTelephoneField;
        
        private string ExternalIdentifierField;
        
        private System.DateTime HiredDateField;
        
        private System.DateTime TerminationDateField;
        
        private bool IsHiredField;
        
        private bool IsLockedField;
        
        private System.Guid CostPriceGuidField;
        
        private double CostPriceField;
        
        private System.Guid HourlyRateGuidField;
        
        private double HourlyRateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int EmployeeID
        {
            get
            {
                return this.EmployeeIDField;
            }
            set
            {
                this.EmployeeIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Initials
        {
            get
            {
                return this.InitialsField;
            }
            set
            {
                this.InitialsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string FirstName
        {
            get
            {
                return this.FirstNameField;
            }
            set
            {
                this.FirstNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string LastName
        {
            get
            {
                return this.LastNameField;
            }
            set
            {
                this.LastNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Fullname
        {
            get
            {
                return this.FullnameField;
            }
            set
            {
                this.FullnameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string EmployeeNo
        {
            get
            {
                return this.EmployeeNoField;
            }
            set
            {
                this.EmployeeNoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public System.Guid DepartmentGuid
        {
            get
            {
                return this.DepartmentGuidField;
            }
            set
            {
                this.DepartmentGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public string DepartmentName
        {
            get
            {
                return this.DepartmentNameField;
            }
            set
            {
                this.DepartmentNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string DepartmentNo
        {
            get
            {
                return this.DepartmentNoField;
            }
            set
            {
                this.DepartmentNoField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public int InterfaceLanguage
        {
            get
            {
                return this.InterfaceLanguageField;
            }
            set
            {
                this.InterfaceLanguageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string Telephone
        {
            get
            {
                return this.TelephoneField;
            }
            set
            {
                this.TelephoneField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public string Mobile
        {
            get
            {
                return this.MobileField;
            }
            set
            {
                this.MobileField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public string PrivateAddress
        {
            get
            {
                return this.PrivateAddressField;
            }
            set
            {
                this.PrivateAddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public string PrivateZip
        {
            get
            {
                return this.PrivateZipField;
            }
            set
            {
                this.PrivateZipField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public string PrivateCity
        {
            get
            {
                return this.PrivateCityField;
            }
            set
            {
                this.PrivateCityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string PrivateTelephone
        {
            get
            {
                return this.PrivateTelephoneField;
            }
            set
            {
                this.PrivateTelephoneField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public string ExternalIdentifier
        {
            get
            {
                return this.ExternalIdentifierField;
            }
            set
            {
                this.ExternalIdentifierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public System.DateTime HiredDate
        {
            get
            {
                return this.HiredDateField;
            }
            set
            {
                this.HiredDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=20)]
        public System.DateTime TerminationDate
        {
            get
            {
                return this.TerminationDateField;
            }
            set
            {
                this.TerminationDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=21)]
        public bool IsHired
        {
            get
            {
                return this.IsHiredField;
            }
            set
            {
                this.IsHiredField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=22)]
        public bool IsLocked
        {
            get
            {
                return this.IsLockedField;
            }
            set
            {
                this.IsLockedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=23)]
        public System.Guid CostPriceGuid
        {
            get
            {
                return this.CostPriceGuidField;
            }
            set
            {
                this.CostPriceGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=24)]
        public double CostPrice
        {
            get
            {
                return this.CostPriceField;
            }
            set
            {
                this.CostPriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=25)]
        public System.Guid HourlyRateGuid
        {
            get
            {
                return this.HourlyRateGuidField;
            }
            set
            {
                this.HourlyRateGuidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=26)]
        public double HourlyRate
        {
            get
            {
                return this.HourlyRateField;
            }
            set
            {
                this.HourlyRateField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfEmployeeHeader", Namespace="http://api.timelog.com")]
    public partial class ResponseOfEmployeeHeader : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase
    {
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.EmployeeHeader[] ReturnField;
        
        private string ReturnTypeDescriptionField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.Request RequestField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.ExecutionStatus ResponseStateField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage[] MessagesField;
        
        private int ErrorCodeField;
        
        private bool IsReturnPagedField;
        
        private int TotalPageCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.EmployeeHeader[] Return
        {
            get
            {
                return this.ReturnField;
            }
            set
            {
                this.ReturnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription
        {
            get
            {
                return this.ReturnTypeDescriptionField;
            }
            set
            {
                this.ReturnTypeDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.Request Request
        {
            get
            {
                return this.RequestField;
            }
            set
            {
                this.RequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ExecutionStatus ResponseState
        {
            get
            {
                return this.ResponseStateField;
            }
            set
            {
                this.ResponseStateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage[] Messages
        {
            get
            {
                return this.MessagesField;
            }
            set
            {
                this.MessagesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsReturnPaged
        {
            get
            {
                return this.IsReturnPagedField;
            }
            set
            {
                this.IsReturnPagedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int TotalPageCount
        {
            get
            {
                return this.TotalPageCountField;
            }
            set
            {
                this.TotalPageCountField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfDepartment", Namespace="http://api.timelog.com")]
    public partial class ResponseOfDepartment : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase
    {
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.Department[] ReturnField;
        
        private string ReturnTypeDescriptionField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.Request RequestField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.ExecutionStatus ResponseStateField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage[] MessagesField;
        
        private int ErrorCodeField;
        
        private bool IsReturnPagedField;
        
        private int TotalPageCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.Department[] Return
        {
            get
            {
                return this.ReturnField;
            }
            set
            {
                this.ReturnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription
        {
            get
            {
                return this.ReturnTypeDescriptionField;
            }
            set
            {
                this.ReturnTypeDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.Request Request
        {
            get
            {
                return this.RequestField;
            }
            set
            {
                this.RequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ExecutionStatus ResponseState
        {
            get
            {
                return this.ResponseStateField;
            }
            set
            {
                this.ResponseStateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage[] Messages
        {
            get
            {
                return this.MessagesField;
            }
            set
            {
                this.MessagesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsReturnPaged
        {
            get
            {
                return this.IsReturnPagedField;
            }
            set
            {
                this.IsReturnPagedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int TotalPageCount
        {
            get
            {
                return this.TotalPageCountField;
            }
            set
            {
                this.TotalPageCountField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfRole", Namespace="http://api.timelog.com")]
    public partial class ResponseOfRole : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase
    {
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.Role[] ReturnField;
        
        private string ReturnTypeDescriptionField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.Request RequestField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.ExecutionStatus ResponseStateField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage[] MessagesField;
        
        private int ErrorCodeField;
        
        private bool IsReturnPagedField;
        
        private int TotalPageCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.Role[] Return
        {
            get
            {
                return this.ReturnField;
            }
            set
            {
                this.ReturnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription
        {
            get
            {
                return this.ReturnTypeDescriptionField;
            }
            set
            {
                this.ReturnTypeDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.Request Request
        {
            get
            {
                return this.RequestField;
            }
            set
            {
                this.RequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ExecutionStatus ResponseState
        {
            get
            {
                return this.ResponseStateField;
            }
            set
            {
                this.ResponseStateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage[] Messages
        {
            get
            {
                return this.MessagesField;
            }
            set
            {
                this.MessagesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsReturnPaged
        {
            get
            {
                return this.IsReturnPagedField;
            }
            set
            {
                this.IsReturnPagedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int TotalPageCount
        {
            get
            {
                return this.TotalPageCountField;
            }
            set
            {
                this.TotalPageCountField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfModuleType", Namespace="http://api.timelog.com")]
    public partial class ResponseOfModuleType : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase
    {
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.ModuleType[] ReturnField;
        
        private string ReturnTypeDescriptionField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.Request RequestField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.ExecutionStatus ResponseStateField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage[] MessagesField;
        
        private int ErrorCodeField;
        
        private bool IsReturnPagedField;
        
        private int TotalPageCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ModuleType[] Return
        {
            get
            {
                return this.ReturnField;
            }
            set
            {
                this.ReturnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription
        {
            get
            {
                return this.ReturnTypeDescriptionField;
            }
            set
            {
                this.ReturnTypeDescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.Request Request
        {
            get
            {
                return this.RequestField;
            }
            set
            {
                this.RequestField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ExecutionStatus ResponseState
        {
            get
            {
                return this.ResponseStateField;
            }
            set
            {
                this.ResponseStateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage[] Messages
        {
            get
            {
                return this.MessagesField;
            }
            set
            {
                this.MessagesField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsReturnPaged
        {
            get
            {
                return this.IsReturnPagedField;
            }
            set
            {
                this.IsReturnPagedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int TotalPageCount
        {
            get
            {
                return this.TotalPageCountField;
            }
            set
            {
                this.TotalPageCountField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityToken", Namespace="http://www.timelog.com/api/tlp/v1_3")]
    public partial class SecurityToken : TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase
    {
        
        private string InitialsField;
        
        private System.DateTime ExpiresField;
        
        private string HashField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Initials
        {
            get
            {
                return this.InitialsField;
            }
            set
            {
                this.InitialsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.DateTime Expires
        {
            get
            {
                return this.ExpiresField;
            }
            set
            {
                this.ExpiresField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string Hash
        {
            get
            {
                return this.HashField;
            }
            set
            {
                this.HashField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExecutionStatus", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.Common")]
    public enum ExecutionStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSet = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="APIMessage", Namespace="http://api.timelog.com")]
    public partial class APIMessage : object
    {
        
        private string MessageField;
        
        private TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessageSeverity SeverityField;
        
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessageSeverity Severity
        {
            get
            {
                return this.SeverityField;
            }
            set
            {
                this.SeverityField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestParameter", Namespace="http://api.timelog.com")]
    public partial class RequestParameter : object
    {
        
        private string NameField;
        
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="APIMessageSeverity", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.API.Proxy.Communication.V1_0")]
    public enum APIMessageSeverity : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Message = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataAction", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.Attributes")]
    public enum DataAction : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Original = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Created = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Updated = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Copied = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 99,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DomainType", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.Common")]
    public enum DomainType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Customer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Contact = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DescriptionType = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillingCode = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintTemplateElement = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Currency = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExternalSystem = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaskCategory = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Industry = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Country = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtractionTemplateElement = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkUnit = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HourlyRate = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntegrationContext = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PrintTemplate = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExchangeRate = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceableDisbursement = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaskType = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Voucher = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaskType2 = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invoice = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupportTicket = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceableWorkUnit = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceableSupportContract = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CreditNote = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProductNumber = 26,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExtractionTemplate = 27,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerStatus = 28,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerHeader = 29,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reminder = 30,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ETCEmployee = 31,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectTemplate = 32,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Event = 33,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceableTravelExpense = 34,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Payment = 35,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Employee = 36,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceableRaw = 37,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Milestone = 38,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Disbursement = 39,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntegrationEventContext = 40,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccountingPeriod = 41,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectResource = 42,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Allocation = 43,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLine = 44,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectResourceGroup = 45,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaskHeader = 46,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaymentTerm = 47,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceableSupportUnit = 48,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        File = 49,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BillingPlan = 50,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Project = 51,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeLogExchangeRate = 52,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectType = 53,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectCategory = 54,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Milleage = 55,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Allowances = 56,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Accomodation = 57,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DomainProductNoCarrier = 58,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectHeader = 59,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectOrderStatus = 60,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupportJournalPost = 61,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Department = 62,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeMachineMapping = 63,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HostingContract = 64,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExpenseType = 65,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectType2 = 66,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SupportType = 67,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeOff = 68,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LicenseType = 69,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LicenseTypeRange = 70,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractLicense = 71,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractLicenseRange = 72,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLineExport = 73,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DashboardWidget = 74,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DashboardItem = 75,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Notification = 76,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuditLog = 77,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceableCurrencyDifferent = 78,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeType = 79,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeCostRate = 80,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MileageRate = 81,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceList = 82,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyList = 83,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Service = 84,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceableRounding = 85,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaymentMethod = 86,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalaryCode = 87,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalaryCodeGroup = 88,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Process = 89,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FinancialIntegration = 94,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomFieldSection = 90,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomFieldDefinition = 91,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntegrationTransaction = 92,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntegrationTransactionLog = 93,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NormalWorkweek = 95,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowanceLegislation = 96,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HolidayCalendar = 97,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Task = 98,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Page = 99,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PersonalLink = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Menu = 101,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserPageFavorite = 102,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomHelp = 103,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        User = 104,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserProfile = 105,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PageSetting = 106,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Area = 107,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AreaPrivilege = 108,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventTypeGroup = 109,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Role = 110,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PageProperty = 111,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MainSearchResultItem = 113,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProcessStep = 114,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Barrier = 115,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpportunityType = 116,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Car = 117,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllowanceRate = 118,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventType = 119,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IndustryCode = 120,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Skills = 121,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceGroupingRuleTemplate = 122,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceGroupingRule = 123,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLineGroupingRule = 124,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceLineGroupingRuleDetail = 125,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoInvoiceDetailLog = 126,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoInvoiceDetail = 127,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AutoInvoiceMaster = 128,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceSettings = 129,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractModel = 130,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectSubContract = 131,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectSubContractHeader = 132,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Recurrence = 133,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DataImportTemplate = 134,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CRMGroup = 135,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CRMGroupRelationDetails = 136,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PageFilter = 137,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Product = 138,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntegrationHandler = 139,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeTrackingItem = 140,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeTrackingGroup = 141,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CustomerRelationer = 142,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnitType = 143,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectSubContractStatus = 144,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlatformPaymentMethod = 145,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MilestoneType = 146,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeRegistration = 147,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OpportunityStatus = 148,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AbsenceCode = 149,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalaryAccount = 150,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalaryGroup = 151,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkerRequest = 152,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkerItem = 153,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeProjection = 154,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NormalWorkingTime = 155,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DepartmentDimensionMapping = 156,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProductNumberDimensionMapping = 157,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        LegalEntity = 158,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalendarEvent = 159,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Comment = 160,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HardBooking = 161,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AggregationMaster = 162,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AggregationUnit = 163,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkflowTemplate = 164,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkflowTemplateStep = 165,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkflowTransitionTemplate = 166,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkflowTemplateRelation = 167,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Workflow = 168,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkflowToken = 169,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkflowTransitionItem = 170,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApprovalContextItem = 171,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AbsenceApprovalContextItem = 172,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeHeader = 173,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Platform = 174,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlatformLicenceOverview = 175,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PlatformInvoiceInformation = 176,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Holiday = 177,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalaryAccountType = 178,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeTrackingDetailGroup = 179,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkerItemLog = 180,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventHeader = 181,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeRegistrationFinancialData = 186,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AbsenceCodeType = 187,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NormalWorkingTimeDay = 188,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalaryAccountEmployeePosting = 189,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApprovalFlowItem = 190,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserChangeHistory = 191,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Favourite = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Dialogue = 192,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApprovalContextItemRemoveApprovedAbsence = 193,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CalendarEventAttendee = 194,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HardBookingDetail = 195,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommentActionLog = 196,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApprovalTimeTrackingItem = 197,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReportAdjustProjectPayment = 198,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        HardBookingItem = 199,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SystemAdminHourlyRate = 200,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalaryTime = 201,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectFinancialsContext = 202,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericBudgetValue = 204,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectPlanFinancialsContext = 203,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserAreaPrivilege = 205,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectSubContractDropdown = 206,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeRegistrationWorkflow = 207,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalaryPeriod = 208,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericBudget = 209,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectSubContractCustomer = 210,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PaymentBudgetPeriod = 211,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectForecastTotal = 212,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoicingPotential = 213,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PriceGroupBasic = 214,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractTeamMember = 215,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Agent = 216,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaskSearchDenormalized = 217,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllocationSearchDenormalized = 218,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimeTracker = 219,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeExpense = 220,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectExpense = 221,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UIExpandedDomain = 222,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceableFinancialPosting = 223,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InvoiceablePendingBookingDataRaw = 224,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TransferEmployeeExpense = 225,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecurringDomainPlan = 226,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecurringTaskAllocationBudgetInstance = 227,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecurringMilestoneInstance = 228,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntercompanyInvoice = 229,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesShare = 230,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesShareSalesPerson = 231,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaskPlanTemplate = 232,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MileageRatePeriod = 233,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MileageRegistration = 234,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ProjectProduct = 235,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RecurringProjectProductInstance = 236,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserPreviewFeatureValue = 237,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SiteFeatureValue = 238,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmployeeReimbursementPosting = 239,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MileageRegistrationFinancialData = 240,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractHourlyRate = 241,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractHourlyRateIndexationHistory = 242,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AnalyticsTrigger = 243,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalaryRule = 244,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContractType = 245,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntercompanyExchangeRatePeriod = 246,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IntercompanyExchangeRate = 247,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DomainServiceRequest = 248,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSpecified = 0,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValueOption", Namespace="http://api.timelog.com/services/customfield/1_0")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.APIBase))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ExecutionStatus))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.DomainType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.LegalEntity[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.LegalEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Employee[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Employee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.EmployeeHeader[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.EmployeeHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Department[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Department))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Role[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Role))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ModuleType[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ModuleType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfLegalEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.Request))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.RequestParameter[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.RequestParameter))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessage))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployee))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.APIBaseExtended))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ExternalSystemContext[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ExternalSystemContext))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfRole))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfModuleType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.APIMessageSeverity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.DataAction))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.CustomField[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.CustomField))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ValueOption[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.DataTypeEnum))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.OrganisationService.ValidateModelEnum))]
    public partial class ValueOption : object
    {
        
        private string LabelField;
        
        private int SortOrderField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Label
        {
            get
            {
                return this.LabelField;
            }
            set
            {
                this.LabelField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder
        {
            get
            {
                return this.SortOrderField;
            }
            set
            {
                this.SortOrderField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value
        {
            get
            {
                return this.ValueField;
            }
            set
            {
                this.ValueField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.CustomFields")]
    public enum DataTypeEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        String = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Integer = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Float = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Date = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        List = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CheckBox = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidateModelEnum", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.CustomFields")]
    public enum ValidateModelEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsNotEmptyOrWhiteSpace = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsPositiveNumber = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsNegativeNumber = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsEmail = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IsNotNull = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.timelog.com/api/tlp/v1_7", ConfigurationName="TimeLog.TransactionalAPI.SDK.OrganisationService.OrganisationService")]
    public interface OrganisationService
    {
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://www.timelog.com/api/tlp/v1_3) of message IsAliveRequest does not match the default value (http://www.timelog.com/api/tlp/v1_7)
        [System.ServiceModel.OperationContractAttribute(Action="IsAliveRequest", ReplyAction="IsAliveReponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.IsAliveResponse IsAlive(TimeLog.TransactionalAPI.SDK.OrganisationService.IsAliveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="IsAliveRequest", ReplyAction="IsAliveReponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.IsAliveResponse> IsAliveAsync(TimeLog.TransactionalAPI.SDK.OrganisationService.IsAliveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetLegalEntities", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetLegalEntitiesResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfLegalEntity GetLegalEntities(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetLegalEntities", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetLegalEntitiesResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfLegalEntity> GetLegalEntitiesAsync(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetLegalEntityByID", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetLegalEntityByIDRespons" +
            "e")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfLegalEntity GetLegalEntityByID(System.Guid legalEntityID, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetLegalEntityByID", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetLegalEntityByIDRespons" +
            "e")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfLegalEntity> GetLegalEntityByIDAsync(System.Guid legalEntityID, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeesPaged", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeesPagedResponse" +
            "")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployee GetEmployeesPaged(int page, int pageSize, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeesPaged", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeesPagedResponse" +
            "")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployee> GetEmployeesPagedAsync(int page, int pageSize, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeeByUsername", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeeByUsernameResp" +
            "onse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader GetEmployeeByUsername(string username, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeeByUsername", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeeByUsernameResp" +
            "onse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> GetEmployeeByUsernameAsync(string username, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/CreateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/CreateEmployeeResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader CreateEmployee(
                    System.Guid employeeGuid, 
                    string username, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    System.Guid departmentGuid, 
                    TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/CreateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/CreateEmployeeResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> CreateEmployeeAsync(
                    System.Guid employeeGuid, 
                    string username, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    System.Guid departmentGuid, 
                    TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/CreateEmployeeNotificatio" +
            "n", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/CreateEmployeeNotificatio" +
            "nResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader CreateEmployeeNotification(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/CreateEmployeeNotificatio" +
            "n", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/CreateEmployeeNotificatio" +
            "nResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> CreateEmployeeNotificationAsync(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/UpdateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/UpdateEmployeeResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader UpdateEmployee(
                    System.Guid employeeGuid, 
                    string username, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/UpdateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/UpdateEmployeeResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> UpdateEmployeeAsync(
                    System.Guid employeeGuid, 
                    string username, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/ActivateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/ActivateEmployeeResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader ActivateEmployee(System.Guid employeeGuid, System.DateTime hiredDate, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/ActivateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/ActivateEmployeeResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> ActivateEmployeeAsync(System.Guid employeeGuid, System.DateTime hiredDate, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/ChangeEmployeeDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/ChangeEmployeeDepartmentR" +
            "esponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader ChangeEmployeeDepartment(System.Guid employeeGuid, System.Guid departmentGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/ChangeEmployeeDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/ChangeEmployeeDepartmentR" +
            "esponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> ChangeEmployeeDepartmentAsync(System.Guid employeeGuid, System.Guid departmentGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/DeactivateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/DeactivateEmployeeRespons" +
            "e")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader DeactivateEmployee(System.Guid employeeGuid, System.DateTime terminationDate, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/DeactivateEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/DeactivateEmployeeRespons" +
            "e")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> DeactivateEmployeeAsync(System.Guid employeeGuid, System.DateTime terminationDate, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetDepartments", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetDepartmentsResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment GetDepartments(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetDepartments", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetDepartmentsResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment> GetDepartmentsAsync(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetDepartmentByNo", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetDepartmentByNoResponse" +
            "")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment GetDepartmentByNo(string departmentNo, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetDepartmentByNo", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetDepartmentByNoResponse" +
            "")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment> GetDepartmentByNoAsync(string departmentNo, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/CreateDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/CreateDepartmentResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment CreateDepartment(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/CreateDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/CreateDepartmentResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment> CreateDepartmentAsync(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/UpdateDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/UpdateDepartmentResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment UpdateDepartment(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/UpdateDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/UpdateDepartmentResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment> UpdateDepartmentAsync(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/DeactivateDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/DeactivateDepartmentRespo" +
            "nse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment DeactivateDepartment(System.Guid departmentGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/DeactivateDepartment", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/DeactivateDepartmentRespo" +
            "nse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment> DeactivateDepartmentAsync(System.Guid departmentGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AddRoleToEmployeeByName", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AddRoleToEmployeeByNameRe" +
            "sponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader AddRoleToEmployeeByName(System.Guid employeeGuid, string rolename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AddRoleToEmployeeByName", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AddRoleToEmployeeByNameRe" +
            "sponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> AddRoleToEmployeeByNameAsync(System.Guid employeeGuid, string rolename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/RemoveRoleFromEmployeeByN" +
            "ame", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/RemoveRoleFromEmployeeByN" +
            "ameResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader RemoveRoleFromEmployeeByName(System.Guid employeeGuid, string rolename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/RemoveRoleFromEmployeeByN" +
            "ame", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/RemoveRoleFromEmployeeByN" +
            "ameResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> RemoveRoleFromEmployeeByNameAsync(System.Guid employeeGuid, string rolename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AddRoleToEmployeeByGuid", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AddRoleToEmployeeByGuidRe" +
            "sponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader AddRoleToEmployeeByGuid(System.Guid employeeGuid, System.Guid roleGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AddRoleToEmployeeByGuid", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AddRoleToEmployeeByGuidRe" +
            "sponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> AddRoleToEmployeeByGuidAsync(System.Guid employeeGuid, System.Guid roleGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/RemoveRoleFromEmployeeByG" +
            "uid", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/RemoveRoleFromEmployeeByG" +
            "uidResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader RemoveRoleFromEmployeeByGuid(System.Guid employeeGuid, System.Guid roleGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/RemoveRoleFromEmployeeByG" +
            "uid", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/RemoveRoleFromEmployeeByG" +
            "uidResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> RemoveRoleFromEmployeeByGuidAsync(System.Guid employeeGuid, System.Guid roleGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetRoles", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetRolesResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfRole GetRoles(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetRoles", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetRolesResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfRole> GetRolesAsync(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetModules", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetModulesResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfModuleType GetModules(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetModules", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetModulesResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfModuleType> GetModulesAsync(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeeRoles", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeeRolesResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfRole GetEmployeeRoles(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeeRoles", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeeRolesResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfRole> GetEmployeeRolesAsync(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AddModuleToEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AddModuleToEmployeeRespon" +
            "se")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader AddModuleToEmployee(System.Guid employeeGuid, string modulename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AddModuleToEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AddModuleToEmployeeRespon" +
            "se")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> AddModuleToEmployeeAsync(System.Guid employeeGuid, string modulename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/RemoveModuleFromEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/RemoveModuleFromEmployeeR" +
            "esponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader RemoveModuleFromEmployee(System.Guid employeeGuid, string modulename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/RemoveModuleFromEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/RemoveModuleFromEmployeeR" +
            "esponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> RemoveModuleFromEmployeeAsync(System.Guid employeeGuid, string modulename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AssignExternalLicenseType" +
            "ToEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AssignExternalLicenseType" +
            "ToEmployeeResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader AssignExternalLicenseTypeToEmployee(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AssignExternalLicenseType" +
            "ToEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AssignExternalLicenseType" +
            "ToEmployeeResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> AssignExternalLicenseTypeToEmployeeAsync(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AssignStandardLicenseType" +
            "ToEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AssignStandardLicenseType" +
            "ToEmployeeResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader AssignStandardLicenseTypeToEmployee(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AssignStandardLicenseType" +
            "ToEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AssignStandardLicenseType" +
            "ToEmployeeResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> AssignStandardLicenseTypeToEmployeeAsync(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AssignAdvancedLicenseType" +
            "ToEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AssignAdvancedLicenseType" +
            "ToEmployeeResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader AssignAdvancedLicenseTypeToEmployee(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AssignAdvancedLicenseType" +
            "ToEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/AssignAdvancedLicenseType" +
            "ToEmployeeResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> AssignAdvancedLicenseTypeToEmployeeAsync(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeesModifiedInPer" +
            "iodPaged", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeesModifiedInPer" +
            "iodPagedResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployee GetEmployeesModifiedInPeriodPaged(System.DateTime startDate, System.DateTime endDate, int page, int pageSize, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeesModifiedInPer" +
            "iodPaged", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetEmployeesModifiedInPer" +
            "iodPagedResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployee> GetEmployeesModifiedInPeriodPagedAsync(System.DateTime startDate, System.DateTime endDate, int page, int pageSize, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetDepartmentsModifiedInP" +
            "eriodPaged", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetDepartmentsModifiedInP" +
            "eriodPagedResponse")]
        TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment GetDepartmentsModifiedInPeriodPaged(System.DateTime startDate, System.DateTime endDate, int page, int pageSize, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetDepartmentsModifiedInP" +
            "eriodPaged", ReplyAction="http://www.timelog.com/api/tlp/v1_7/OrganisationService/GetDepartmentsModifiedInP" +
            "eriodPagedResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment> GetDepartmentsModifiedInPeriodPagedAsync(System.DateTime startDate, System.DateTime endDate, int page, int pageSize, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsAlive", WrapperNamespace="http://www.timelog.com/api/tlp/v1_3", IsWrapped=true)]
    public partial class IsAliveRequest
    {
        
        public IsAliveRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsAliveResponse", WrapperNamespace="http://www.timelog.com/api/tlp/v1_3", IsWrapped=true)]
    public partial class IsAliveResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/api/tlp/v1_3", Order=0)]
        public bool IsAliveResult;
        
        public IsAliveResponse()
        {
        }
        
        public IsAliveResponse(bool IsAliveResult)
        {
            this.IsAliveResult = IsAliveResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface OrganisationServiceChannel : TimeLog.TransactionalAPI.SDK.OrganisationService.OrganisationService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class OrganisationServiceClient : System.ServiceModel.ClientBase<TimeLog.TransactionalAPI.SDK.OrganisationService.OrganisationService>, TimeLog.TransactionalAPI.SDK.OrganisationService.OrganisationService
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public OrganisationServiceClient() : 
                base(OrganisationServiceClient.GetDefaultBinding(), OrganisationServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_OrganisationService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OrganisationServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(OrganisationServiceClient.GetBindingForEndpoint(endpointConfiguration), OrganisationServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OrganisationServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(OrganisationServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OrganisationServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(OrganisationServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OrganisationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeLog.TransactionalAPI.SDK.OrganisationService.IsAliveResponse TimeLog.TransactionalAPI.SDK.OrganisationService.OrganisationService.IsAlive(TimeLog.TransactionalAPI.SDK.OrganisationService.IsAliveRequest request)
        {
            return base.Channel.IsAlive(request);
        }
        
        public bool IsAlive()
        {
            TimeLog.TransactionalAPI.SDK.OrganisationService.IsAliveRequest inValue = new TimeLog.TransactionalAPI.SDK.OrganisationService.IsAliveRequest();
            TimeLog.TransactionalAPI.SDK.OrganisationService.IsAliveResponse retVal = ((TimeLog.TransactionalAPI.SDK.OrganisationService.OrganisationService)(this)).IsAlive(inValue);
            return retVal.IsAliveResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.IsAliveResponse> TimeLog.TransactionalAPI.SDK.OrganisationService.OrganisationService.IsAliveAsync(TimeLog.TransactionalAPI.SDK.OrganisationService.IsAliveRequest request)
        {
            return base.Channel.IsAliveAsync(request);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.IsAliveResponse> IsAliveAsync()
        {
            TimeLog.TransactionalAPI.SDK.OrganisationService.IsAliveRequest inValue = new TimeLog.TransactionalAPI.SDK.OrganisationService.IsAliveRequest();
            return ((TimeLog.TransactionalAPI.SDK.OrganisationService.OrganisationService)(this)).IsAliveAsync(inValue);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfLegalEntity GetLegalEntities(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetLegalEntities(token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfLegalEntity> GetLegalEntitiesAsync(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetLegalEntitiesAsync(token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfLegalEntity GetLegalEntityByID(System.Guid legalEntityID, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetLegalEntityByID(legalEntityID, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfLegalEntity> GetLegalEntityByIDAsync(System.Guid legalEntityID, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetLegalEntityByIDAsync(legalEntityID, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployee GetEmployeesPaged(int page, int pageSize, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetEmployeesPaged(page, pageSize, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployee> GetEmployeesPagedAsync(int page, int pageSize, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetEmployeesPagedAsync(page, pageSize, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader GetEmployeeByUsername(string username, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetEmployeeByUsername(username, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> GetEmployeeByUsernameAsync(string username, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetEmployeeByUsernameAsync(username, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader CreateEmployee(
                    System.Guid employeeGuid, 
                    string username, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    System.Guid departmentGuid, 
                    TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.CreateEmployee(employeeGuid, username, initials, firstname, lastname, employeeNo, email, title, telephone, mobile, normalWorkingTimeName, holidayCalendarName, allowanceLegislationName, employeeTypeName, hourlyRateName, costPriceName, externalIdentifier, departmentGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> CreateEmployeeAsync(
                    System.Guid employeeGuid, 
                    string username, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    System.Guid departmentGuid, 
                    TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.CreateEmployeeAsync(employeeGuid, username, initials, firstname, lastname, employeeNo, email, title, telephone, mobile, normalWorkingTimeName, holidayCalendarName, allowanceLegislationName, employeeTypeName, hourlyRateName, costPriceName, externalIdentifier, departmentGuid, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader CreateEmployeeNotification(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.CreateEmployeeNotification(employeeGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> CreateEmployeeNotificationAsync(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.CreateEmployeeNotificationAsync(employeeGuid, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader UpdateEmployee(
                    System.Guid employeeGuid, 
                    string username, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.UpdateEmployee(employeeGuid, username, initials, firstname, lastname, employeeNo, email, title, telephone, mobile, normalWorkingTimeName, holidayCalendarName, allowanceLegislationName, employeeTypeName, hourlyRateName, costPriceName, externalIdentifier, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> UpdateEmployeeAsync(
                    System.Guid employeeGuid, 
                    string username, 
                    string initials, 
                    string firstname, 
                    string lastname, 
                    string employeeNo, 
                    string email, 
                    string title, 
                    string telephone, 
                    string mobile, 
                    string normalWorkingTimeName, 
                    string holidayCalendarName, 
                    string allowanceLegislationName, 
                    string employeeTypeName, 
                    string hourlyRateName, 
                    string costPriceName, 
                    string externalIdentifier, 
                    TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.UpdateEmployeeAsync(employeeGuid, username, initials, firstname, lastname, employeeNo, email, title, telephone, mobile, normalWorkingTimeName, holidayCalendarName, allowanceLegislationName, employeeTypeName, hourlyRateName, costPriceName, externalIdentifier, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader ActivateEmployee(System.Guid employeeGuid, System.DateTime hiredDate, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.ActivateEmployee(employeeGuid, hiredDate, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> ActivateEmployeeAsync(System.Guid employeeGuid, System.DateTime hiredDate, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.ActivateEmployeeAsync(employeeGuid, hiredDate, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader ChangeEmployeeDepartment(System.Guid employeeGuid, System.Guid departmentGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.ChangeEmployeeDepartment(employeeGuid, departmentGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> ChangeEmployeeDepartmentAsync(System.Guid employeeGuid, System.Guid departmentGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.ChangeEmployeeDepartmentAsync(employeeGuid, departmentGuid, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader DeactivateEmployee(System.Guid employeeGuid, System.DateTime terminationDate, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.DeactivateEmployee(employeeGuid, terminationDate, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> DeactivateEmployeeAsync(System.Guid employeeGuid, System.DateTime terminationDate, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.DeactivateEmployeeAsync(employeeGuid, terminationDate, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment GetDepartments(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetDepartments(token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment> GetDepartmentsAsync(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetDepartmentsAsync(token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment GetDepartmentByNo(string departmentNo, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetDepartmentByNo(departmentNo, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment> GetDepartmentByNoAsync(string departmentNo, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetDepartmentByNoAsync(departmentNo, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment CreateDepartment(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.CreateDepartment(departmentGuid, name, no, parentDepartmentGuid, departmentManagerGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment> CreateDepartmentAsync(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.CreateDepartmentAsync(departmentGuid, name, no, parentDepartmentGuid, departmentManagerGuid, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment UpdateDepartment(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.UpdateDepartment(departmentGuid, name, no, parentDepartmentGuid, departmentManagerGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment> UpdateDepartmentAsync(System.Guid departmentGuid, string name, string no, System.Guid parentDepartmentGuid, System.Guid departmentManagerGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.UpdateDepartmentAsync(departmentGuid, name, no, parentDepartmentGuid, departmentManagerGuid, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment DeactivateDepartment(System.Guid departmentGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.DeactivateDepartment(departmentGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment> DeactivateDepartmentAsync(System.Guid departmentGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.DeactivateDepartmentAsync(departmentGuid, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader AddRoleToEmployeeByName(System.Guid employeeGuid, string rolename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.AddRoleToEmployeeByName(employeeGuid, rolename, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> AddRoleToEmployeeByNameAsync(System.Guid employeeGuid, string rolename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.AddRoleToEmployeeByNameAsync(employeeGuid, rolename, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader RemoveRoleFromEmployeeByName(System.Guid employeeGuid, string rolename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.RemoveRoleFromEmployeeByName(employeeGuid, rolename, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> RemoveRoleFromEmployeeByNameAsync(System.Guid employeeGuid, string rolename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.RemoveRoleFromEmployeeByNameAsync(employeeGuid, rolename, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader AddRoleToEmployeeByGuid(System.Guid employeeGuid, System.Guid roleGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.AddRoleToEmployeeByGuid(employeeGuid, roleGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> AddRoleToEmployeeByGuidAsync(System.Guid employeeGuid, System.Guid roleGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.AddRoleToEmployeeByGuidAsync(employeeGuid, roleGuid, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader RemoveRoleFromEmployeeByGuid(System.Guid employeeGuid, System.Guid roleGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.RemoveRoleFromEmployeeByGuid(employeeGuid, roleGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> RemoveRoleFromEmployeeByGuidAsync(System.Guid employeeGuid, System.Guid roleGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.RemoveRoleFromEmployeeByGuidAsync(employeeGuid, roleGuid, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfRole GetRoles(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetRoles(token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfRole> GetRolesAsync(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetRolesAsync(token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfModuleType GetModules(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetModules(token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfModuleType> GetModulesAsync(TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetModulesAsync(token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfRole GetEmployeeRoles(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetEmployeeRoles(employeeGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfRole> GetEmployeeRolesAsync(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetEmployeeRolesAsync(employeeGuid, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader AddModuleToEmployee(System.Guid employeeGuid, string modulename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.AddModuleToEmployee(employeeGuid, modulename, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> AddModuleToEmployeeAsync(System.Guid employeeGuid, string modulename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.AddModuleToEmployeeAsync(employeeGuid, modulename, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader RemoveModuleFromEmployee(System.Guid employeeGuid, string modulename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.RemoveModuleFromEmployee(employeeGuid, modulename, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> RemoveModuleFromEmployeeAsync(System.Guid employeeGuid, string modulename, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.RemoveModuleFromEmployeeAsync(employeeGuid, modulename, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader AssignExternalLicenseTypeToEmployee(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.AssignExternalLicenseTypeToEmployee(employeeGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> AssignExternalLicenseTypeToEmployeeAsync(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.AssignExternalLicenseTypeToEmployeeAsync(employeeGuid, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader AssignStandardLicenseTypeToEmployee(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.AssignStandardLicenseTypeToEmployee(employeeGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> AssignStandardLicenseTypeToEmployeeAsync(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.AssignStandardLicenseTypeToEmployeeAsync(employeeGuid, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader AssignAdvancedLicenseTypeToEmployee(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.AssignAdvancedLicenseTypeToEmployee(employeeGuid, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployeeHeader> AssignAdvancedLicenseTypeToEmployeeAsync(System.Guid employeeGuid, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.AssignAdvancedLicenseTypeToEmployeeAsync(employeeGuid, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployee GetEmployeesModifiedInPeriodPaged(System.DateTime startDate, System.DateTime endDate, int page, int pageSize, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetEmployeesModifiedInPeriodPaged(startDate, endDate, page, pageSize, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfEmployee> GetEmployeesModifiedInPeriodPagedAsync(System.DateTime startDate, System.DateTime endDate, int page, int pageSize, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetEmployeesModifiedInPeriodPagedAsync(startDate, endDate, page, pageSize, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment GetDepartmentsModifiedInPeriodPaged(System.DateTime startDate, System.DateTime endDate, int page, int pageSize, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetDepartmentsModifiedInPeriodPaged(startDate, endDate, page, pageSize, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.OrganisationService.ResponseOfDepartment> GetDepartmentsModifiedInPeriodPagedAsync(System.DateTime startDate, System.DateTime endDate, int page, int pageSize, TimeLog.TransactionalAPI.SDK.OrganisationService.SecurityToken token)
        {
            return base.Channel.GetDepartmentsModifiedInPeriodPagedAsync(startDate, endDate, page, pageSize, token);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_OrganisationService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_OrganisationService))
            {
                return new System.ServiceModel.EndpointAddress("https://app8.timelog.com/610patchreference/WebServices/Organisation/V1_7/Organisa" +
                        "tionServiceSecure.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return OrganisationServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_OrganisationService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return OrganisationServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_OrganisationService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_OrganisationService,
        }
    }
}
