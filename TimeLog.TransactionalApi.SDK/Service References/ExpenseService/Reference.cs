//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TimeLog.TransactionalAPI.SDK.ExpenseService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="APIBase", Namespace="http://www.timelog.com/api/tlp/v1_2")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpense))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.ExpenseService.Expense))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.ExpenseService.Request))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfPaymentMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.ExpenseService.PaymentMethod))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpenseType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.ExpenseService.ExpenseType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken))]
    public partial class APIBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfExpense", Namespace="http://api.timelog.com")]
    [System.SerializableAttribute()]
    public partial class ResponseOfExpense : TimeLog.TransactionalAPI.SDK.ExpenseService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.Expense[] ReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.Request RequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.ExecutionStatus ResponseStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.APIMessage[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReturnPagedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPageCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.Expense[] Return {
            get {
                return this.ReturnField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnField, value) != true)) {
                    this.ReturnField = value;
                    this.RaisePropertyChanged("Return");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription {
            get {
                return this.ReturnTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnTypeDescriptionField, value) != true)) {
                    this.ReturnTypeDescriptionField = value;
                    this.RaisePropertyChanged("ReturnTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.Request Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.ExecutionStatus ResponseState {
            get {
                return this.ResponseStateField;
            }
            set {
                if ((this.ResponseStateField.Equals(value) != true)) {
                    this.ResponseStateField = value;
                    this.RaisePropertyChanged("ResponseState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.APIMessage[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsReturnPaged {
            get {
                return this.IsReturnPagedField;
            }
            set {
                if ((this.IsReturnPagedField.Equals(value) != true)) {
                    this.IsReturnPagedField = value;
                    this.RaisePropertyChanged("IsReturnPaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int TotalPageCount {
            get {
                return this.TotalPageCountField;
            }
            set {
                if ((this.TotalPageCountField.Equals(value) != true)) {
                    this.TotalPageCountField = value;
                    this.RaisePropertyChanged("TotalPageCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Expense", Namespace="http://api.timelog.com/services/expense/1_0")]
    [System.SerializableAttribute()]
    public partial class Expense : TimeLog.TransactionalAPI.SDK.ExpenseService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyISOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CurrencyRateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpenseNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeInitialsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ExpenseTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExternalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InvoiceNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PaymentMethodIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ProfitPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProjectNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PurchaseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double PurchasedAmountInCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NonBillableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VATAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmployeeNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.ExpenseCategories CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Uri[] ImageUrlListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string CurrencyISO {
            get {
                return this.CurrencyISOField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyISOField, value) != true)) {
                    this.CurrencyISOField = value;
                    this.RaisePropertyChanged("CurrencyISO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public double CurrencyRate {
            get {
                return this.CurrencyRateField;
            }
            set {
                if ((this.CurrencyRateField.Equals(value) != true)) {
                    this.CurrencyRateField = value;
                    this.RaisePropertyChanged("CurrencyRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string ExpenseNo {
            get {
                return this.ExpenseNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpenseNoField, value) != true)) {
                    this.ExpenseNoField = value;
                    this.RaisePropertyChanged("ExpenseNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string EmployeeInitials {
            get {
                return this.EmployeeInitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeInitialsField, value) != true)) {
                    this.EmployeeInitialsField = value;
                    this.RaisePropertyChanged("EmployeeInitials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public System.Guid ExpenseTypeID {
            get {
                return this.ExpenseTypeIDField;
            }
            set {
                if ((this.ExpenseTypeIDField.Equals(value) != true)) {
                    this.ExpenseTypeIDField = value;
                    this.RaisePropertyChanged("ExpenseTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public string ExternalID {
            get {
                return this.ExternalIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ExternalIDField, value) != true)) {
                    this.ExternalIDField = value;
                    this.RaisePropertyChanged("ExternalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=8)]
        public string InvoiceNo {
            get {
                return this.InvoiceNoField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoiceNoField, value) != true)) {
                    this.InvoiceNoField = value;
                    this.RaisePropertyChanged("InvoiceNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=9)]
        public int PaymentMethodID {
            get {
                return this.PaymentMethodIDField;
            }
            set {
                if ((this.PaymentMethodIDField.Equals(value) != true)) {
                    this.PaymentMethodIDField = value;
                    this.RaisePropertyChanged("PaymentMethodID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=10)]
        public string ProductNo {
            get {
                return this.ProductNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNoField, value) != true)) {
                    this.ProductNoField = value;
                    this.RaisePropertyChanged("ProductNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=11)]
        public double ProfitPercent {
            get {
                return this.ProfitPercentField;
            }
            set {
                if ((this.ProfitPercentField.Equals(value) != true)) {
                    this.ProfitPercentField = value;
                    this.RaisePropertyChanged("ProfitPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=12)]
        public string ProjectNo {
            get {
                return this.ProjectNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProjectNoField, value) != true)) {
                    this.ProjectNoField = value;
                    this.RaisePropertyChanged("ProjectNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=13)]
        public System.DateTime PurchaseDate {
            get {
                return this.PurchaseDateField;
            }
            set {
                if ((this.PurchaseDateField.Equals(value) != true)) {
                    this.PurchaseDateField = value;
                    this.RaisePropertyChanged("PurchaseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=14)]
        public double PurchasedAmountInCurrency {
            get {
                return this.PurchasedAmountInCurrencyField;
            }
            set {
                if ((this.PurchasedAmountInCurrencyField.Equals(value) != true)) {
                    this.PurchasedAmountInCurrencyField = value;
                    this.RaisePropertyChanged("PurchasedAmountInCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=15)]
        public bool NonBillable {
            get {
                return this.NonBillableField;
            }
            set {
                if ((this.NonBillableField.Equals(value) != true)) {
                    this.NonBillableField = value;
                    this.RaisePropertyChanged("NonBillable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=16)]
        public double VATAmount {
            get {
                return this.VATAmountField;
            }
            set {
                if ((this.VATAmountField.Equals(value) != true)) {
                    this.VATAmountField = value;
                    this.RaisePropertyChanged("VATAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=17)]
        public string EmployeeNo {
            get {
                return this.EmployeeNoField;
            }
            set {
                if ((object.ReferenceEquals(this.EmployeeNoField, value) != true)) {
                    this.EmployeeNoField = value;
                    this.RaisePropertyChanged("EmployeeNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=18)]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.ExpenseCategories Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((this.CategoryField.Equals(value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=19)]
        public System.Uri[] ImageUrlList {
            get {
                return this.ImageUrlListField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlListField, value) != true)) {
                    this.ImageUrlListField = value;
                    this.RaisePropertyChanged("ImageUrlList");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Request", Namespace="http://api.timelog.com")]
    [System.SerializableAttribute()]
    public partial class Request : TimeLog.TransactionalAPI.SDK.ExpenseService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.RequestParameter[] ParametersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServiceClassField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.RequestParameter[] Parameters {
            get {
                return this.ParametersField;
            }
            set {
                if ((object.ReferenceEquals(this.ParametersField, value) != true)) {
                    this.ParametersField = value;
                    this.RaisePropertyChanged("Parameters");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServiceClass {
            get {
                return this.ServiceClassField;
            }
            set {
                if ((object.ReferenceEquals(this.ServiceClassField, value) != true)) {
                    this.ServiceClassField = value;
                    this.RaisePropertyChanged("ServiceClass");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string MethodName {
            get {
                return this.MethodNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodNameField, value) != true)) {
                    this.MethodNameField = value;
                    this.RaisePropertyChanged("MethodName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfPaymentMethod", Namespace="http://api.timelog.com")]
    [System.SerializableAttribute()]
    public partial class ResponseOfPaymentMethod : TimeLog.TransactionalAPI.SDK.ExpenseService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.PaymentMethod[] ReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.Request RequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.ExecutionStatus ResponseStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.APIMessage[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReturnPagedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPageCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.PaymentMethod[] Return {
            get {
                return this.ReturnField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnField, value) != true)) {
                    this.ReturnField = value;
                    this.RaisePropertyChanged("Return");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription {
            get {
                return this.ReturnTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnTypeDescriptionField, value) != true)) {
                    this.ReturnTypeDescriptionField = value;
                    this.RaisePropertyChanged("ReturnTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.Request Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.ExecutionStatus ResponseState {
            get {
                return this.ResponseStateField;
            }
            set {
                if ((this.ResponseStateField.Equals(value) != true)) {
                    this.ResponseStateField = value;
                    this.RaisePropertyChanged("ResponseState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.APIMessage[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsReturnPaged {
            get {
                return this.IsReturnPagedField;
            }
            set {
                if ((this.IsReturnPagedField.Equals(value) != true)) {
                    this.IsReturnPagedField = value;
                    this.RaisePropertyChanged("IsReturnPaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int TotalPageCount {
            get {
                return this.TotalPageCountField;
            }
            set {
                if ((this.TotalPageCountField.Equals(value) != true)) {
                    this.TotalPageCountField = value;
                    this.RaisePropertyChanged("TotalPageCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PaymentMethod", Namespace="http://api.timelog.com/services/expense/1_0")]
    [System.SerializableAttribute()]
    public partial class PaymentMethod : TimeLog.TransactionalAPI.SDK.ExpenseService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResponseOfExpenseType", Namespace="http://api.timelog.com")]
    [System.SerializableAttribute()]
    public partial class ResponseOfExpenseType : TimeLog.TransactionalAPI.SDK.ExpenseService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.ExpenseType[] ReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReturnTypeDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.Request RequestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.ExecutionStatus ResponseStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.APIMessage[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReturnPagedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalPageCountField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.ExpenseType[] Return {
            get {
                return this.ReturnField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnField, value) != true)) {
                    this.ReturnField = value;
                    this.RaisePropertyChanged("Return");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReturnTypeDescription {
            get {
                return this.ReturnTypeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnTypeDescriptionField, value) != true)) {
                    this.ReturnTypeDescriptionField = value;
                    this.RaisePropertyChanged("ReturnTypeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.Request Request {
            get {
                return this.RequestField;
            }
            set {
                if ((object.ReferenceEquals(this.RequestField, value) != true)) {
                    this.RequestField = value;
                    this.RaisePropertyChanged("Request");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.ExecutionStatus ResponseState {
            get {
                return this.ResponseStateField;
            }
            set {
                if ((this.ResponseStateField.Equals(value) != true)) {
                    this.ResponseStateField = value;
                    this.RaisePropertyChanged("ResponseState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.APIMessage[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public bool IsReturnPaged {
            get {
                return this.IsReturnPagedField;
            }
            set {
                if ((this.IsReturnPagedField.Equals(value) != true)) {
                    this.IsReturnPagedField = value;
                    this.RaisePropertyChanged("IsReturnPaged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int TotalPageCount {
            get {
                return this.TotalPageCountField;
            }
            set {
                if ((this.TotalPageCountField.Equals(value) != true)) {
                    this.TotalPageCountField = value;
                    this.RaisePropertyChanged("TotalPageCount");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpenseType", Namespace="http://api.timelog.com/services/expense/1_0")]
    [System.SerializableAttribute()]
    public partial class ExpenseType : TimeLog.TransactionalAPI.SDK.ExpenseService.APIBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VatPercentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double VatPercent {
            get {
                return this.VatPercentField;
            }
            set {
                if ((this.VatPercentField.Equals(value) != true)) {
                    this.VatPercentField = value;
                    this.RaisePropertyChanged("VatPercent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string ProductNo {
            get {
                return this.ProductNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNoField, value) != true)) {
                    this.ProductNoField = value;
                    this.RaisePropertyChanged("ProductNo");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecurityToken", Namespace="http://www.timelog.com/api/tlp/v1_3")]
    [System.SerializableAttribute()]
    public partial class SecurityToken : TimeLog.TransactionalAPI.SDK.ExpenseService.APIBase {
        
        private string InitialsField;
        
        private System.DateTime ExpiresField;
        
        private string HashField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Initials {
            get {
                return this.InitialsField;
            }
            set {
                if ((object.ReferenceEquals(this.InitialsField, value) != true)) {
                    this.InitialsField = value;
                    this.RaisePropertyChanged("Initials");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=1)]
        public System.DateTime Expires {
            get {
                return this.ExpiresField;
            }
            set {
                if ((this.ExpiresField.Equals(value) != true)) {
                    this.ExpiresField = value;
                    this.RaisePropertyChanged("Expires");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExecutionStatus", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.Common")]
    public enum ExecutionStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotSet = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="APIMessage", Namespace="http://api.timelog.com")]
    [System.SerializableAttribute()]
    public partial class APIMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TimeLog.TransactionalAPI.SDK.ExpenseService.APIMessageSeverity SeverityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ErrorCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TimeLog.TransactionalAPI.SDK.ExpenseService.APIMessageSeverity Severity {
            get {
                return this.SeverityField;
            }
            set {
                if ((this.SeverityField.Equals(value) != true)) {
                    this.SeverityField = value;
                    this.RaisePropertyChanged("Severity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public int ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpenseCategories", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.Expenses")]
    public enum ExpenseCategories : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Employee = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Project = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RequestParameter", Namespace="http://api.timelog.com")]
    [System.SerializableAttribute()]
    public partial class RequestParameter : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="APIMessageSeverity", Namespace="http://schemas.datacontract.org/2004/07/TimeLog.TLP.API.Proxy.Communication.V1_0")]
    public enum APIMessageSeverity : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Invalid = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Message = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.timelog.com/api/tlp/v1_0", ConfigurationName="ExpenseService.ExpenseService")]
    public interface ExpenseService {
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://www.timelog.com/api/tlp/v1_3) of message IsAliveRequest does not match the default value (http://www.timelog.com/api/tlp/v1_0)
        [System.ServiceModel.OperationContractAttribute(Action="IsAliveRequest", ReplyAction="IsAliveReponse")]
        TimeLog.TransactionalAPI.SDK.ExpenseService.IsAliveResponse IsAlive(TimeLog.TransactionalAPI.SDK.ExpenseService.IsAliveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="IsAliveRequest", ReplyAction="IsAliveReponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.ExpenseService.IsAliveResponse> IsAliveAsync(TimeLog.TransactionalAPI.SDK.ExpenseService.IsAliveRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_0/ExpenseService/GetExpensesByEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_0/ExpenseService/GetExpensesByEmployeeResponse")]
        TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpense GetExpensesByEmployee(string initials, System.DateTime from, System.DateTime to, TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_0/ExpenseService/GetExpensesByEmployee", ReplyAction="http://www.timelog.com/api/tlp/v1_0/ExpenseService/GetExpensesByEmployeeResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpense> GetExpensesByEmployeeAsync(string initials, System.DateTime from, System.DateTime to, TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_0/ExpenseService/InsertExpense", ReplyAction="http://www.timelog.com/api/tlp/v1_0/ExpenseService/InsertExpenseResponse")]
        TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpense InsertExpense(TimeLog.TransactionalAPI.SDK.ExpenseService.Expense expense, TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_0/ExpenseService/InsertExpense", ReplyAction="http://www.timelog.com/api/tlp/v1_0/ExpenseService/InsertExpenseResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpense> InsertExpenseAsync(TimeLog.TransactionalAPI.SDK.ExpenseService.Expense expense, TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_0/ExpenseService/UpdateExpense", ReplyAction="http://www.timelog.com/api/tlp/v1_0/ExpenseService/UpdateExpenseResponse")]
        TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpense UpdateExpense(TimeLog.TransactionalAPI.SDK.ExpenseService.Expense expense, TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_0/ExpenseService/UpdateExpense", ReplyAction="http://www.timelog.com/api/tlp/v1_0/ExpenseService/UpdateExpenseResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpense> UpdateExpenseAsync(TimeLog.TransactionalAPI.SDK.ExpenseService.Expense expense, TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_0/ExpenseService/GetPaymentMethods", ReplyAction="http://www.timelog.com/api/tlp/v1_0/ExpenseService/GetPaymentMethodsResponse")]
        TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfPaymentMethod GetPaymentMethods(TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_0/ExpenseService/GetPaymentMethods", ReplyAction="http://www.timelog.com/api/tlp/v1_0/ExpenseService/GetPaymentMethodsResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfPaymentMethod> GetPaymentMethodsAsync(TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_0/ExpenseService/GetExpenseTypes", ReplyAction="http://www.timelog.com/api/tlp/v1_0/ExpenseService/GetExpenseTypesResponse")]
        TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpenseType GetExpenseTypes(TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.timelog.com/api/tlp/v1_0/ExpenseService/GetExpenseTypes", ReplyAction="http://www.timelog.com/api/tlp/v1_0/ExpenseService/GetExpenseTypesResponse")]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpenseType> GetExpenseTypesAsync(TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsAlive", WrapperNamespace="http://www.timelog.com/api/tlp/v1_3", IsWrapped=true)]
    public partial class IsAliveRequest {
        
        public IsAliveRequest() {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="IsAliveResponse", WrapperNamespace="http://www.timelog.com/api/tlp/v1_3", IsWrapped=true)]
    public partial class IsAliveResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.timelog.com/api/tlp/v1_3", Order=0)]
        public bool IsAliveResult;
        
        public IsAliveResponse() {
        }
        
        public IsAliveResponse(bool IsAliveResult) {
            this.IsAliveResult = IsAliveResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ExpenseServiceChannel : TimeLog.TransactionalAPI.SDK.ExpenseService.ExpenseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExpenseServiceClient : System.ServiceModel.ClientBase<TimeLog.TransactionalAPI.SDK.ExpenseService.ExpenseService>, TimeLog.TransactionalAPI.SDK.ExpenseService.ExpenseService {
        
        public ExpenseServiceClient() {
        }
        
        public ExpenseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExpenseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExpenseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExpenseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TimeLog.TransactionalAPI.SDK.ExpenseService.IsAliveResponse TimeLog.TransactionalAPI.SDK.ExpenseService.ExpenseService.IsAlive(TimeLog.TransactionalAPI.SDK.ExpenseService.IsAliveRequest request) {
            return base.Channel.IsAlive(request);
        }
        
        public bool IsAlive() {
            TimeLog.TransactionalAPI.SDK.ExpenseService.IsAliveRequest inValue = new TimeLog.TransactionalAPI.SDK.ExpenseService.IsAliveRequest();
            TimeLog.TransactionalAPI.SDK.ExpenseService.IsAliveResponse retVal = ((TimeLog.TransactionalAPI.SDK.ExpenseService.ExpenseService)(this)).IsAlive(inValue);
            return retVal.IsAliveResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.ExpenseService.IsAliveResponse> TimeLog.TransactionalAPI.SDK.ExpenseService.ExpenseService.IsAliveAsync(TimeLog.TransactionalAPI.SDK.ExpenseService.IsAliveRequest request) {
            return base.Channel.IsAliveAsync(request);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.ExpenseService.IsAliveResponse> IsAliveAsync() {
            TimeLog.TransactionalAPI.SDK.ExpenseService.IsAliveRequest inValue = new TimeLog.TransactionalAPI.SDK.ExpenseService.IsAliveRequest();
            return ((TimeLog.TransactionalAPI.SDK.ExpenseService.ExpenseService)(this)).IsAliveAsync(inValue);
        }
        
        public TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpense GetExpensesByEmployee(string initials, System.DateTime from, System.DateTime to, TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token) {
            return base.Channel.GetExpensesByEmployee(initials, from, to, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpense> GetExpensesByEmployeeAsync(string initials, System.DateTime from, System.DateTime to, TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token) {
            return base.Channel.GetExpensesByEmployeeAsync(initials, from, to, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpense InsertExpense(TimeLog.TransactionalAPI.SDK.ExpenseService.Expense expense, TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token) {
            return base.Channel.InsertExpense(expense, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpense> InsertExpenseAsync(TimeLog.TransactionalAPI.SDK.ExpenseService.Expense expense, TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token) {
            return base.Channel.InsertExpenseAsync(expense, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpense UpdateExpense(TimeLog.TransactionalAPI.SDK.ExpenseService.Expense expense, TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token) {
            return base.Channel.UpdateExpense(expense, token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpense> UpdateExpenseAsync(TimeLog.TransactionalAPI.SDK.ExpenseService.Expense expense, TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token) {
            return base.Channel.UpdateExpenseAsync(expense, token);
        }
        
        public TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfPaymentMethod GetPaymentMethods(TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token) {
            return base.Channel.GetPaymentMethods(token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfPaymentMethod> GetPaymentMethodsAsync(TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token) {
            return base.Channel.GetPaymentMethodsAsync(token);
        }
        
        public TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpenseType GetExpenseTypes(TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token) {
            return base.Channel.GetExpenseTypes(token);
        }
        
        public System.Threading.Tasks.Task<TimeLog.TransactionalAPI.SDK.ExpenseService.ResponseOfExpenseType> GetExpenseTypesAsync(TimeLog.TransactionalAPI.SDK.ExpenseService.SecurityToken token) {
            return base.Channel.GetExpenseTypesAsync(token);
        }
    }
}
