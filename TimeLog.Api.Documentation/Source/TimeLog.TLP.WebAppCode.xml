<?xml version="1.0"?>
<doc>
<assembly>
<name>
TimeLog.TLP.WebAppCode
</name>
</assembly>
<members>
<member name="T:TimeLog.TLP.WebAppCode.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:TimeLog.TLP.WebAppCode.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:TimeLog.TLP.WebAppCode.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="M:TimeLog.TLP.WebAppCode.clsGenral_Functions.DateAspToWeb(System.DateTime)">
 <summary>
 Returns a date formated after the applicationsetting "PageLCID"
 </summary>
 <param name="DateToFormat">The date to format</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.clsGenral_Functions.DateAspToWeb(System.DateTime,System.Boolean)">
 <summary>
 ''' Returns a date and optional a with time formated after the applicationsetting "PageLCID"
 </summary>
 <param name="DateToFormat">The date to format</param>
 <param name="ShowTime">Marks if time is to be printed as well</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.clsGenral_Functions.ConvertStringToNullableDate(System.String)">
 <summary>
 This function will return nullable type Date or nothing
 (InvalidCast will result in nothing)
 </summary>
 <param name="stringToCast"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.clsGenral_Functions.NumberAspToWebNoZero(System.Double,System.Int32)">
 <summary>
 returns a displayable double. Compared to NumberAspToWeb, it return empty string if the double is zero
 </summary>
 <param name="ldblNumber">The double value to display</param>
 <param name="lintDecimals">The number of decimals</param>
</member>
<member name="M:TimeLog.TLP.WebAppCode.clsGenral_Functions.NumberWebToAsp(System.String)">
 <summary>
 Convert String to Double
 </summary>
 <param name="lstrNumber">Input string</param>
 <returns>Double</returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.clsGenral_Functions.ShowSelected(System.Double,System.Double,System.Byte,System.String,System.String)">
 <summary>
 
 </summary>
 <param name="Key"></param>
 <param name="Condition"></param>
 <param name="lbteCompareType"></param>
 <param name="TrueReturnString"></param>
 <param name="FalseReturnString"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.clsGenral_Functions.AutonumberActiveCheck(TimeLog.tlp.Enums.AutoNumberType,System.Int32)">
 <summary>
 Function to check if autonumber is active for a specified department and autonumbertype
 </summary>
 <param name="AutonumberType">The autonumbertype you want to check</param>
 <param name="DepartmentID">The departments database ID</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.clsGenral_Functions.AutonumberActiveCheck(TimeLog.tlp.Enums.AutoNumberType)">
 <summary>
 Function to check if autonumber is active for the current users department
 </summary>
 <param name="AutonumberType">The autonumbertype you want to check</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:TimeLog.TLP.WebAppCode.clsGenral_Functions.Url">
 <summary>
 Url helper associate to current request
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.clsUtilities.Create_Currency_List(System.Int32)">
 <summary>
 Returns a list of all active Currency's. If CurrencyPeriodId is specified, this currency is also returned
 </summary>
 <param name="CurrencyPeriodID">Specifies an ID of a currency period that should be returned in the list even if is inactive</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:TimeLog.TLP.WebAppCode.Service">
 <summary>
 Reporting API Service class
 </summary>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetWorkUnitsRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)">
 <summary>
 Gets a list of work units.
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="workUnitID">ID of specific work unit. Set to 0 to get work units</param>
 <param name="employeeID">ID of specific employee. Set to 0 to get all work units</param>
 <param name="allocationID">ID of specific allocation. Set to 0 to get all work units</param>
 <param name="taskID">ID of specific task. Set to 0 to get all work units</param>
 <param name="projectID">ID of specific project. Set to 0 to get work units</param>
 <param name="departmentID">ID of specific department. Set to 0 to get work units</param>
 <param name="startDate">Limits result to all work units registred on or later than this date</param>
 <param name="endDate">Limits result to all work units registred on or prior to this date</param>
 <returns>A list of work unit objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetAllocationsRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 Gets a list of allocations
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="allocationID">ID of specific allocation. Set to 0 to get all allocations</param>
 <param name="taskID">taskID of specific task. Set to 0 to get all allocations</param>
 <param name="employeeID">ID of specific employee. Set to 0 to get all allocations</param>
 <param name="projectID">ID of specific project. Set to 0 to get all allocations</param>
 <returns>A list of allocation objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetEmployeesShortList(System.String,System.String,System.String,System.Int32,System.Int32)">
 <summary>
 Gets a list of employees with key information only
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="departmentID">ID of specific department. Set to 0 to get all employees</param>
 <param name="status">Set to 0 for inactive employees; 1 for active employees; -1 to get all employees</param>
 <returns>A list of employee objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetEmployeesRaw(System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32)">
 <summary>
 Gets a list of employees
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="employeeID">ID of specific employee. Set to 0 to get all employees</param>
 <param name="initials">Initials of specific employee. Set to empty string to get all employees</param>
 <param name="departmentID">ID of specific department. Set to 0 to get all employees</param>
 <param name="status">Set to 0 for inactive employees; 1 for active employees; -1 to get all employees</param>
 <returns>A list of employee objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetTimeOffRegistrationsRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.DateTime,System.DateTime)">
 <summary>
 Gets a list of time off registrations. Work units related to salary codes.
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="employeeID">ID of specific employee. Set to 0 to get all allocations</param>
 <param name="departmentID">ID of specific department. Set to 0 to get all allocations</param>
 <param name="fromDate">Limits result to registrations with registration date on or later than this date</param>
 <param name="toDate">Limits result to registrations with registration date on or prior to this date</param>
 <returns>A list of work unit objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetFlexTimeRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.DateTime,System.DateTime)">
 <summary>
 Gets a list of flex registrations and flex adjustments.
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="employeeUserID">ID of specific employeeUser. Set to 0 to get all flex registrations</param>
 <param name="departmentID">ID of specific department. Set to 0 to get all flex registrations</param>
 <param name="fromDate">Limits result to flex registrations with registration date on or later than this date</param>
 <param name="toDate">Limits result to flex registrations with registration date on or prior to this date</param>
 <returns>A list of flex registrations objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetCustomersShortList(System.String,System.String,System.String,System.Int32,System.Int32)">
 <summary>
 Gets a list of customers with key information only
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="customerStatusID">ID of specific Customer Status. Set to -1 to get all customers</param>
 <param name="accountManagerID">ID of an Employee. Set to 0 to get all customers</param>
 <returns>A list of customer objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetCustomersRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
 <summary>
 Gets a list of customers
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="customerID">ID of specific customer. Set to 0 to get all customers</param>
 <param name="customerStatusID">ID of specific Customer Status. Set to -1 to get all customers</param>
 <param name="accountManagerID">ID of an Employee. Set to 0 to get all customers</param>
 <returns>A list of customer objects in XML</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetCustomerCommentsRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)">
 <summary>
 Gets a list of comments associated to a particular customer
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="customerID">Customer ID of customer to list all associated comments or pass 0 to query from all customer</param>
 <param name="customerStatusID">Customer statusID, or 0 to list accross all customer status</param>
 <param name="accountManagerID">Account manager ID, or 0 to list accross all account managers</param>
 <param name="fromDate">Limits result to comments created on or later than this date</param>
 <param name="toDate">Limits result to comments created on or prior to this date</param>
 <returns>A list of customer comment objects in XML</returns>
 <remarks>The result comment is sort by customer name, then by newest comment first to oldest comment last</remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetCustomerStatusShortList(System.String,System.String,System.String)">
 <summary>
 Gets a list of customer statuses
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <returns>A list of customer status objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetContactsShortList(System.String,System.String,System.String,System.Int32)">
 <summary>
 Gets a list of contacts with key information only
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="customerID">ID of specific customer. Set to 0 to get all contacts</param>
 <returns>A list of contact objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetContactsRaw(System.String,System.String,System.String,System.Int32,System.Int32)">
 <summary>
 Gets a list of contacts
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="customerID">ID of specific customer. Set to 0 to get all contacts</param>
 <param name="contactID">ID of specific contact. Set to 0 to get all contacts</param>
 <returns>A list of contact objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetExpensesRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.DateTime,System.DateTime)">
 <summary>
 Gets a list of expenses
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="customerID">ID of specific customer. Set to 0 to get all expenses</param>
 <param name="projectID">ID of specific project. Set to 0 to get all expenses</param>
 <param name="supplierCustomerID">ID of specific supplier. Set to 0 to get all expenses</param>
 <param name="employeeID">ID of specific employee. Set to 0 to get all expenses</param>
 <param name="employeeDepartmentID">ID of specific employee department. Set to 0 to get all expenses</param>
 <param name="expenseTypeID">ID of specific expense type. Set to 0 to get all expenses</param>
 <param name="paymentMethodID">ID of specific payment method. Set to 0 to get all expenses</param>
 <param name="startDate">Limits result to expenses with purchase date on or later than this date</param>
 <param name="endDate">Limits result to expenses with purchase date on or prior to this date</param>
 <returns>A list of expense objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetProjectsRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 Gets a list of projects
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="projectID">ID of specific project. Set to 0 to get all projects</param>
 <param name="status">0 for inactive projects; 1 for active projects; -2 for all projects</param>
 <param name="customerID">ID of specific customer. Set to 0 to get all projects</param>
 <param name="projectManagerID">ID of specific employee. Set to 0 to get all projects</param>
 <returns>A list of project objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetProjectsShortList(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
 <summary>
 Gets a list of projects with key information only
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="status">0 for inactive projects; 1 for active projects; -2 for all projects</param>
 <param name="customerID">ID of specific customer. Set to 0 to get all projects</param>
 <param name="projectManagerID">ID of specific employee. Set to 0 to get all projects</param>
 <returns>A list of project objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetProjectTypesShortList(System.String,System.String,System.String)">
 <summary>
 Gets a list of project types
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <returns>A list of project type objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetProjectCategoriesShortList(System.String,System.String,System.String)">
 <summary>
 Gets a list of project categories
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <returns>A list of project category objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetInvoicesRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String)">
 <summary>
 Gets a list of invoices
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="invoiceID">ID of specific invoice. Set to 0 to get all invoices</param>
 <param name="customerID">ID of specific customer. Set to 0 to get all invoices</param>
 <param name="status">0 for draft invoice; 1 for booked, checked and overdue invoices; 2 for overdue invoices; 3 for checked invoices; -1 for all invoices</param>
 <param name="startDate">Limits result to invoices with invoice date on or later than this date</param>
 <param name="endDate">Limits result to invoices with invoice date on or prior to this date</param>
 <returns>A list of invoice objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetInvoiceLinesRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)">
 <summary>
 Gets a list of invoice lines
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="invoiceLineID">ID of specific invoiceline. Set to 0 to get all invoices</param>
 <param name="customerID">ID of specific customer. Set to 0 to get all customers</param>
 <param name="projectID">ID of specific project. Set to 0 to get all projects</param>
 <param name="invoiceID">ID of specific invoice. Set to 0 to get all invoices</param>
 <param name="startDate">Limits result to invoices with invoice date on or later than this date</param>
 <param name="endDate">Limits result to invoices with invoice date on or prior to this date</param>
 <returns>A list of invoice line objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetInvoiceLineDetailsRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)">
 <summary>
 Gets a list of invoice line details
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="invoiceLineDetailID">ID of specific invoicelinedetail. Set to 0 to get all invoices</param>
 <param name="customerID">ID of specific customer. Set to 0 to get all customers</param>
 <param name="projectID">ID of specific project. Set to 0 to get all projects</param>
 <param name="invoiceID">ID of specific invoice. Set to 0 to get all invoices</param>
 <param name="startDate">Limits result to invoices with invoice date on or later than this date</param>
 <param name="endDate">Limits result to invoices with invoice date on or prior to this date</param>
 <returns>A list of invoice line detail objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetDepartmentsShortList(System.String,System.String,System.String)">
 <summary>
 Gets a list of departments
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <returns>A list of department objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetTasksRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 Gets a list of tasks
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="taskID">ID of specific Task. Set to 0 to get all tasks</param>
 <param name="projectID">ID of specific Project. Set to 0 to get all tasks</param>
 <param name="status">0 for inactive tasks; 1 for active tasks; -1 for all tasks</param>
 <param name="taskTypeID">ID of specific Task type. Set to 0 to get all tasks</param>
 <returns>A list of task objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetTasksShortList(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
 <summary>
 Gets a list of tasks with key information only
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="projectID">ID of specific Project. Set to 0 to get all tasks</param>
 <param name="status">0 for inactive tasks; 1 for active tasks; -1 for all tasks</param>
 <param name="taskTypeID">ID of specific Task type. Set to 0 to get all tasks</param>
 <returns>A list of task objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetTaskTypesShortList(System.String,System.String,System.String)">
 <summary>
 Gets a list of task types
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <returns>A list of task type object in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetMilestonesRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
 <summary>
 Gets a list of milestones
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="milestoneID">ID of specific Milestone. Set to 0 to get all milestones</param>
 <param name="projectID">ID of specific Project. Set to 0 to get all milestones</param>
 <param name="status">0 for uncompleted milestones; 1 for completed milestones; -1 for all milestones</param>
 <returns>A list of milestones objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetMilestoneTypesRaw(System.String,System.String,System.String,System.Int32,System.Int32)">
 <summary>
 Gets a list of milestoneTypes
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="milestoneTypeID">ID of specific MilestoneType. Set to 0 to get all milestoneTypes</param>
 <param name="status">0 for uncompleted milestones; 1 for completed milestones; -1 for all milestones</param>
 <returns>A list of milestones objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetMileageRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Nullable{System.Boolean},System.Int32,System.Int32)">
 <summary>
 Gets a list of mileage
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="customerID">ID of specific customer. Set to 0 to get all.</param>
 <param name="projectID">ID of specific project. Set to 0 to get all.</param>
 <param name="employeeID">ID of specific employee. Set to 0 to get all.</param>
 <param name="departmentID">ID of specific department. Set to 0 to get all.</param>
 <param name="startDate">Limits result to all mileages registred on or later than this date</param>
 <param name="endDate">Limits result to all mileages registred on or prior to this date</param>
 <param name="selfPayment">set to 'true' to get selfpaid mileage. 'false' to get companypaid. 'null' to get both. </param>
 <param name="travelCarID">ID of specific car. Set to 0 to get all.</param>
 <param name="transportRateID">ID of specific transport rate. Set to 0 to get all.</param>
 <returns>A list of mileage objects in XML format</returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetOpportunitiesRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)">
 <summary>
 Gets a list of opportunities
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="opportunityID">ID of specific opportunity. Set to 0 to get all opportunities</param>
 <param name="customerID">ID of specific customer. Set to 0 to get all opportunities</param>
 <param name="ownerID">ID of the employee in charge of opportunity. Set to 0 to get all opportunities</param>
 <param name="opportunityTypeID">ID of specific opportunityType. Set to 0 to get all opportunities</param>
 <param name="barrierID">ID of specific barrier. Set to 0 to get all opportunities</param>    
 <param name="startDate">Limits result to opportunities with quotation date on or later than this date</param>
 <param name="endDate">Limits result to opportunities with quotation date on or prior to this date</param>
 <returns>A list of opportunity objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetSubOpportunitiesRaw(System.String,System.String,System.String,System.Int32)">
 <summary>
 Gets a list of sub-opportinities
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <Param name="opportunityID">ID of opportunity that contain sub-opportunities. Set to 0 to get all sub-opportunities</Param>
 <returns>A list of sub-opportunity objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetOpportunityTypesShortlist(System.String,System.String,System.String,System.Int32)">
 <summary>
 Gets a list of opportunityTypes
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="status">0 for inactive opportunityTypes; 1 for active opportunityTypes; -1 for all opportunityTypes</param>
 <returns>A list of opportunityType objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetOpportunityStatusShortlist(System.String,System.String,System.String)">
 <summary>
 Gets a list of opportunity status
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <returns>A list of opportunity status objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetBarriersShortlist(System.String,System.String,System.String,System.Int32)">
 <summary>
 Gets a list of barriers
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="status">0 for inactive barriers; 1 for active barriers; -1 for all barriers</param>
 <returns>A list of barrier objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetIndustriesShortList(System.String,System.String,System.String)">
 <summary>
 Gets a list of industries
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <returns>A list of industry objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetSupportTypesShortList(System.String,System.String,System.String)">
 <summary>
 Gets a list of support types with key information only
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <returns>A list of support type objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetSupportCaseRaw(System.String,System.String,System.String,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 Gets a list of support cases
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="supportCaseID">ID of specific support case. Set to 0 to get all</param>
 <param name="supportNo">Support case number. Set to empty string to get all</param>
 <param name="employeeID">ID of specific Employee. Set to 0 to get all</param>
 <param name="customerID">ID of an Customer. Set to 0 to get all</param>
 <param name="supportContractID">ID of an support contract. Set to 0 to get all</param>
 <param name="supportTypeID">ID of an support type. Set to 0 to get all</param>
 <param name="departmentID">ID of an department. Set to 0 to get all</param>
 <param name="status">ID of an Status. Set to 0 to get all. (1 = Open; 2 = Closed; 3 = Pending, 4 = Ready for Closure; 5 = Cancelled)</param>
 <returns>A list of support case objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetSupportContractRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 Gets a list of support contracts
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="supportContractID">ID of specific support contract. Set to 0 to get all</param>
 <param name="employeeID">ID of specific Employee. Set to 0 to get all</param>
 <param name="customerID">ID of an Customer. Set to 0 to get</param>
 <param name="supportContractTypeID">ID of an support contract type. Set to 0 to get all. (1 = Time and Material; 2 = Multiple Case Contract; 3 = Subscription)</param>
 <returns>A list of support contract objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetSupportJournalRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
 <summary>
 Gets a list of support journals
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="supportCaseID">ID of specific support case. Set to 0 to get all</param>
 <param name="employeeID">ID of specific Employee. Set to 0 to get all</param>
 <param name="customerID">ID of an Customer. Set to 0 to get</param>
 <param name="supportContractID">ID of an support contract. Set to 0 to get all</param>
 <returns>A list of support journal objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetCountriesShortList(System.String,System.String,System.String)">
 <summary>
 Gets a list of countries
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <returns>A list of countrie objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetEventsRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String)">
 <summary>
 Gets a list of events
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="eventID">ID of specific event. Set to 0 to get all events</param>
 <param name="eventTypeID">ID of specific eventType. Set to 0 to get all events</param>
 <param name="customerID">ID of specific customer. Set to 0 to get all events</param>
 <param name="employeeID">ID of the employee in charge of the event. Set to 0 to get all events</param>
 <param name="status">ID of the event status. Set to 0 to get all. Planned = 1, Postponed = 2, Finished = 3, Cancelled = 4</param>
 <param name="startDate">Limits result to events with date on or later than this date</param>
 <param name="endDate">Limits result to events with date on or prior to this date</param>
 <returns>A list of events objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetEventTypesShortlist(System.String,System.String,System.String,System.Int32)">
 <summary>
 Gets a list of eventTypes
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="status">0 for inactive eventTypes; 1 for active eventTypes; -1 for all eventTypes</param>
 <returns>A list of eventtype objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetWorkingHoursRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.String,System.String)">
 <summary>
 Gets a list of working hours
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="employeeID">ID of specific employee. Set to 0 to get all employees</param>
 <param name="departmentID">ID of specific department. Set to 0 to get all employees</param>
 <param name="status">Set to 0 for inactive employees; 1 for active employees; -1 to get all employees</param>
 <param name="startDate">Limits result to working hours with date on or later than this date</param>
 <param name="endDate">Limits result to working hours with date on or prior to this date</param>
 <returns>A list of working hour objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetEmployeeNormalWorkingHoursRaw(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32)">
 <summary>
 Gets a list of employee normal working hours
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="employeeID">ID of specific employee. Set to 0 to get all employees</param>
 <param name="departmentID">ID of specific department. Set to 0 to get all employees</param>
 <param name="status">Set to 0 for inactive employees; 1 for active employees; -1 to get all employees</param>
 <returns>A list of employee normal working hour objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.ValidateCredentials(System.String,System.String,System.String)">
 <summary>
 Validates a credentials set
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <returns>A message about the validation</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetContractsRaw(System.String,System.String,System.String,System.Int32,System.Int32)">
 <summary>
 Gets a list of contracts
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="projectID">ID of specific project. Set to 0 to get all contracts</param>
 <param name="contractModelType">Type of specific contract. Set to 0 to get all contracts; 1 for TimeMaterial; 2 for FixedPrice; 3 = TimeMaterialAccountEndBalancing; 4 = TimeMaterialAccountPeriodicBalancing; 5 for PrepaidServices; 6 for RevenueReqPerTask; 7 for ContinuousService; 8 for ContinuousItemInvoicing</param>
 <returns>A list of contract objects in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Service.GetHardBookingsRaw(System.String,System.String,System.String,System.Int32,System.DateTime,System.DateTime,System.Int32)">
 <summary>
 Get a list of hardbookings
 </summary>
 <param name="siteCode">Unique identification for your TimeLog account</param>
 <param name="apiID">The API ID</param>
 <param name="apiPassword">The API password</param>
 <param name="employeeUserId">User ID of specific employee. Set to 0 to get all</param>
 <param name="startDate">Limits result to all hard bookings on or later than this date</param>
 <param name="endDate">Limits result to all hard bookings on or prior to this date</param>
 <param name="hardbookingType">Set to 0 for manual bookings; 1 for calendar bookings; -1 for all</param>
 <returns>A list of hardbookings in XML format</returns>
</member>
<member name="M:TimeLog.TLP.WebAppCode.ServiceBase.ValidateRetreivalAttempt(System.String,System.String,System.String)">
 <summary>
 Private method which returns true if the retrieveal of data is requested by a legit user
 </summary>
 <param name="siteCode"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.ServiceBase.ValidateLoginCredentials(System.String,System.String)">
 <summary>
 Returns true if the login is successful
 </summary>
 <param name="ApiID"></param>
 <param name="ApiPassword"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.ServiceBase.ExecuteLoginSuccessOrFailure(System.String,System.Boolean)">
 <summary>
 
 </summary>
 <param name="ApiID"></param>
 <param name="loginSuccess"></param>
 <remarks></remarks>
</member>
<member name="T:TimeLog.TLP.WebAppCode.Standard_Tables">
 <summary>
 This Class contains all standard functions to build TimeLog Dynamic Tables
 </summary>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.pageTable">
 <summary>
 Returns a TimeLog Result Table
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.pageTable(System.String)">
 <summary>
 Returns a TimeLog Result Table with parsed caption
 </summary>
 <param name="Caption">The caption of the returned table</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ResultTable">
 <summary>
 Returns a TimeLog Result Table
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ResultTable(System.String)">
 <summary>
 Returns a TimeLog Result Table with parsed caption
 </summary>
 <param name="Caption">The caption of the returned table</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.FullTable">
 <summary>
 Returns a TimeLog Full Table
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.FullTable(System.String)">
 <summary>
 Returns a TimeLog Full Table with parsed caption
 </summary>
 <param name="Caption">The caption of the returned table</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ResultRow(System.Web.UI.WebControls.TableRowSection)">
 <summary>
 Returns a System.Web.UI.WebControls.TableRow with TableSection property set to the choosen TableRowSection Type
 </summary>
 <param name="Section">The section of the table the row should be attached to as System.Web.UI.WebControls.TableRowSection</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ResultRow(System.Web.UI.WebControls.TableRowSection,System.String)">
 <summary>
 Returns a System.Web.UI.WebControls.TableRow with TableSection property set to the choosen TableRowSection Type
 and with the parsed CssClass
 </summary>
 <param name="Section">The section of the table the row should be attached to as System.Web.UI.WebControls.TableRowSection</param>
 <param name="CssClass">The Cascading Style Sheet class to be rendered</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ResultRow(System.Web.UI.WebControls.TableRowSection,System.Web.UI.WebControls.TableCell[])">
 <summary>
 Returns a TableRow with TableSection property set Section type 
 and with the Cells added to the TableCells collection
 </summary>
 <param name="Section">The section of the table the row should be attached to as System.Web.UI.WebControls.TableRowSection</param>
 <param name="Cells">The Array of System.Web.UI.WebControls.TableCell to add to the TableRows Tablecell collection</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ResultRow(System.Web.UI.WebControls.TableRowSection,System.String,System.Web.UI.WebControls.TableCell[])">
 <summary>
 Returns a TableRow with TableSection property set Section type 
 and with the Cells added to the TableCells collection
 and with the parsed CssClass
 </summary>
 <param name="Section">The section of the table the row should be attached to as System.Web.UI.WebControls.TableRowSection</param>
 <param name="CssClass">The Cascading Style Sheet class to be rendered</param>
 <param name="Cells">The Array of System.Web.UI.WebControls.TableCell to add to the TableRows Tablecell collection</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.FirstColumn">
 <summary>
 The first column in any TimeLog Tablerow
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.FirstColumn(System.String)">
 <summary>
 The first column in any expandable TimeLog Tablerow 
 </summary>
 <param name="MenuString">The returnstring from newMenu call</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ThColumn(System.String)">
 <summary>
 Returns a Tabelheadercell - Left aligned (names, text, Ids, dates, phone, etc.)
 </summary>
 <param name="Text">The text to be displayed in the Tablecell </param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ThColumn(System.Web.UI.Control)">
 <summary>
 Returns a TableHeadercell that display the parsed control with resultStatus as CssClass
 </summary>
 <param name="NewControl">Control to be displayed in the tablecolumn</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ThColumn(System.Web.UI.Control,System.String)">
 <summary>
 Returns a TableHeadercell that display the parsed control with resultStatus as CssClass
 </summary>
 <param name="NewControl">Control to be displayed in the tablecolumn</param>
 <param name="CssClass">The Cascading Style Sheet class to be rendered</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ThColumn(System.String,System.Int32)">
 <summary>
 Returns a Tabelheadercell that spans the parsed number of columns
 </summary>
 <param name="Text">The text to be displayed in the Tablecell</param>
 <param name="Span">The number of columns the cell should span</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ThColumn(System.String,System.String)">
 <summary>
 Returns a Tabelheadercell with parsed css style
 </summary>
 <param name="Text">The text to be displayed in the Tablecell</param>
 <param name="CssClass">The Cascading Style Sheet class to be rendered</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ThColumn(System.String,System.Int32,System.String)">
 <summary>
 Returns a Tabelheadercell that spans the parsed number of columns and with parsed css style
 </summary>
 <param name="Text">The text to be displayed in the Tablecell</param>
 <param name="Span">The number of columns the cell should span</param>
 <param name="CssClass">The Cascading Style Sheet class to be rendered</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.TdColumn(System.String)">
 <summary>
 Returns a Tabelcell - Right aligned (Currency, hours price etc)
 </summary>
 <param name="Text">The text to be displayed in the Tablecell </param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.TdColumn(System.String,System.Int32)">
 <summary>
 Returns a Tabelcell that spans the parsed number of columns
 </summary>
 <param name="Text">The text to be displayed in the Tablecell</param>
 <param name="ColSpan">The number of columns the cell should span</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.TdColumn(System.String,System.String)">
 <summary>
 Returns a Tabelcell with parsed css style
 </summary>
 <param name="Text">The text to be displayed in the Tablecell</param>
 <param name="CssClass">The Cascading Style Sheet class to be rendered</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.TdColumn(System.String,System.Int32,System.String)">
 <summary>
 Returns a Tabelcell that spans the parsed number of columns and with parsed css style
 </summary>
 <param name="Text">The text to be displayed in the Tablecell</param>
 <param name="Span">The number of columns the cell should span</param>
 <param name="CssClass">The Cascading Style Sheet class to be rendered</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ResultAction(System.String)">
 <summary>
 Returns a Tablecell with resultAction as CssClass
 </summary>
 <param name="Text">The text to be displayed in the Tablecell</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ResultAction(System.String,System.Int32)">
 <summary>
 Returns a Tablecell with resultAction as CssClass that spans the parsed number of columns
 </summary>
 <param name="Text">The text to be displayed in the Tablecell</param>
 <param name="Span">The number of columns the cell should span</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ResultSumTd(System.String)">
 <summary>
 Returns a Tablecell with resultSum as CssClass
 </summary>
 <param name="Text">The text to be displayed in the Tablecell</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ResultSum(System.String,System.Int32)">
 <summary>
 Returns a Tablecell with resultSum as CssClass that spans the parsed number of columns
 </summary>
 <param name="Text">The text to be displayed in the Tablecell</param>
 <param name="Span">The number of columns the cell should span</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.resultStatus(System.String)">
 <summary>
 Returns a Tablecell with resultStatus as CssClass
 </summary>
 <param name="Text">The text to be displayed in the Tablecell</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.resultStatus(System.Web.UI.Control)">
 <summary>
 Returns a Tablecell that display the parsed control with resultStatus as CssClass
 </summary>
 <param name="NewControl">Control to be displayed in the tablecolumn</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.resultStatus(System.Web.UI.Control[])">
 <summary>
 Returns a Tablecell that display the parsed control with resultStatus as CssClass
 </summary>
 <param name="NewControls">An array of Controls to be displayed in the tablecolumn</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.ResultComment(System.String)">
 <summary>
 Returns a Tableheadercell that display the parsed control with resultComment as CssClass
 </summary>
 <param name="Text">The text to be displayed in the Tablecell</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.thWritemax(System.String,System.Int32)">
 <summary>
 Returns a Tableheadercell. The length of text in the Tablecell is limited to MaxLength specification.
 </summary>
 <param name="Text">The text to be displayed in the Tablecell</param>
 <param name="MaxLength">The maximum length of the text to be displayed in the Tablecell</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:TimeLog.TLP.WebAppCode.Standard_Tables.thWritemax(System.String,System.Int32,System.String)">
 <summary>
 Returns a Tableheadercell with parsed css style. The length of text in the Tablecell is limited to MaxLength specification.
 </summary>
 <param name="Text">The text to be displayed in the Tablecell</param>
 <param name="Maxlength">The maximum length of the text to be displayed in the Tablecell</param>
 <param name="CssClass">The Cascading Style Sheet class to be rendered</param>
 <returns></returns>
 <remarks></remarks>
</member>
</members>
</doc>
