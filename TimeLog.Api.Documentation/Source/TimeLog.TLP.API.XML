<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TimeLog.TLP.API</name>
    </assembly>
    <members>
        <member name="F:TimeLog.TLP.API.Common.V1_2.BaseService._isSecure">
            <summary>
            Is the HttpsContext done via SSL
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.V1_2.BaseService.IsSecure">
            <summary>
            Is the HttpsContext done via SSL
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Common.V1_2.BaseService.IsAlive">
            <summary>
            Returns true 
            </summary>
            <returns></returns>
        </member>
        <member name="F:TimeLog.TLP.API.Common.V1_0.BaseService._isSecure">
            <summary>
            Is the HttpsContext done via SSL
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.V1_0.BaseService.IsSecure">
            <summary>
            Is the HttpsContext done via SSL
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Common.V1_0.BaseService.IsAlive">
            <summary>
            Returns true 
            </summary>
            <returns></returns>
        </member>
        <member name="T:TimeLog.TLP.API.Common.GetAdapter">
            <summary>
            Contains references to all adapters used in the API
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.SecurityEngine">
            <summary>
            Gets the security manager
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.UserV10">
            <summary>
            Gets the user adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.UserV11">
            <summary>
            Gets the user adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.UserV12">
            <summary>
            Gets the user adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.SecurityTokenV10">
            <summary>
            Gets the security token adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.SecurityTokenV11">
            <summary>
            Gets the security token adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.SecurityTokenV12">
            <summary>
            Gets the security token adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.SecurityTokenV13">
            <summary>
            Gets the security token adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.AddressV10">
            <summary>
            Gets the address adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.AddressV11">
            <summary>
            Gets the address adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.AddressV12">
            <summary>
            Gets the address adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.EmployeeHeaderV10">
            <summary>
            Gets the employee header adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.EmployeeHeaderV11">
            <summary>
            Gets the employee header adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.EmployeeHeaderV12">
            <summary>
            Gets the employee header adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CurrencyAdapterV10">
            <summary>
            Gets the currency adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CurrencyAdapterV11">
            <summary>
            Gets the currency adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CurrencyAdapterV12">
            <summary>
            Gets the currency adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.TimeRegistrationSettingsV10">
            <summary>
            Gets the time registration setting adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.TimeRegistrationSettingsV11">
            <summary>
            Gets the time registration setting adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.TimeRegistrationSettingsV12">
            <summary>
            Gets the time registration setting adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.WorkUnitV11">
            <summary>
            Gets the project management adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.WorkUnitV12">
            <summary>
            Gets the project management adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.WorkUnitV13">
            <summary>
            Gets the project management adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.WorkUnitBatchContainerV11">
            <summary>
            Gets the work unit batch container adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.WorkUnitBatchContainerV12">
            <summary>
            Gets the work unit batch container adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.WorkUnitBatchContainerV13">
            <summary>
            Gets the work unit batch container adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ProjectHeaderV11">
            <summary>
            Gets the project header adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ProjectHeaderV12">
            <summary>
            Gets the project header adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ProjectHeaderV13">
            <summary>
            Gets the project header adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ProjectV11">
            <summary>
            Gets the project adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ProjectV12">
            <summary>
            Gets the project adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ProjectV13">
            <summary>
            Gets the project adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ProjectBatchContainerV11">
            <summary>
            Gets the project batch container adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ProjectBatchContainerV12">
            <summary>
            Gets the project batch container adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.TaskHeaderV11">
            <summary>
            Gets the task header adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.TaskHeaderV12">
            <summary>
            Gets the task header adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.TaskHeaderV13">
            <summary>
            Gets the task header adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.TaskV11">
            <summary>
            Gets the task adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.TaskV12">
            <summary>
            Gets the task adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.TaskV13">
            <summary>
            Gets the task adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.TaskBatchContainerV11">
            <summary>
            Gets the task batch container adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.AllocationV11">
            <summary>
            Gets allocation adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.AllocationV12">
            <summary>
            Gets allocation adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.AllocationV13">
            <summary>
            Gets allocation adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.AllocationBatchContainerV11">
            <summary>
            Gets allocation batch adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.AllocationBatchContainerV12">
            <summary>
            Gets allocation batch adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.AllocationBatchContainerV13">
            <summary>
            Gets allocation batch adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerHeaderV10">
            <summary>
            Gets customer header adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerHeaderV11">
            <summary>
            Gets customer header adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerHeaderV12">
            <summary>
            Gets customer header adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerHeaderV13">
            <summary>
            Gets customer header adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerHeaderV14">
            <summary>
            Gets customer header adapter for version 1.4
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerV10">
            <summary>
            Gets customer adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerV11">
            <summary>
            Gets customer adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerV12">
            <summary>
            Gets customer adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerV13">
            <summary>
            Gets customer adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerV14">
            <summary>
            Gets customer adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerBatchContainerV10">
            <summary>
            Gets customer batch container adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerBatchContainerV11">
            <summary>
            Gets customer batch container adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerBatchContainerV12">
            <summary>
            Gets customer batch container adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ContactHeaderV10">
            <summary>
            Gets contact header adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ContactHeaderV11">
            <summary>
            Gets contact header adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ContactHeaderV12">
            <summary>
            Gets contact header adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ContactHeaderV13">
            <summary>
            Gets contact header adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ContactHeaderV14">
            <summary>
            Gets contact header adapter for version 1.4
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ContactV10">
            <summary>
            Gets contact adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ContactV11">
            <summary>
            Gets contact adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ContactV12">
            <summary>
            Gets contact adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ContactV13">
            <summary>
            Gets contact adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ContactV14">
            <summary>
            Gets contact adapter for version 1.4
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerStatusAdapterV10">
            <summary>
            Gets customer status adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerStatusAdapterV11">
            <summary>
            Gets customer status adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerStatusAdapterV12">
            <summary>
            Gets customer status adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerStatusAdapterV13">
            <summary>
            Gets customer status adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomerStatusAdapterV14">
            <summary>
            Gets customer status adapter for version 1.4
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.IndustryAdapterV10">
            <summary>
            Gets industry adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.IndustryAdapterV11">
            <summary>
            Gets industry adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.IndustryAdapterV12">
            <summary>
            Gets industry adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.IndustryAdapterV13">
            <summary>
            Gets industry adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.IndustryAdapterV14">
            <summary>
            Gets industry adapter for version 1.4
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ExternalContextAdapterV10">
            <summary>
            Gets the external context adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ExternalContextAdapterV11">
            <summary>
            Gets the external context adapter for version 1.1
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ExternalContextAdapterV12">
            <summary>
            Gets the external context adapter for version 1.2
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ExternalContextAdapterV13">
            <summary>
            Gets the external context adapter for version 1.3
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.CustomFieldAdapterV10">
            <summary>
            Gets the custom field adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.TransactionAdapterV10">
            <summary>
            Gets the transaction adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ExpenseAdapterV10">
            <summary>
            Gets the expense adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.ExpenseTypeAdapterV10">
            <summary>
            Gets the ExpenseType adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.PaymentMethodAdapterV10">
            <summary>
            Gets the PaymentMethod adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.SalaryAdapterV10">
            <summary>
            Gets the salary adapter for version 1.0
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.GetAdapter.SalaryAdapterV11">
            <summary>
            Gets the salary adapter for version 1.1
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.Common.V1_1.BaseService._isSecure">
            <summary>
            Is the HttpsContext done via SSL
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.V1_1.BaseService.IsSecure">
            <summary>
            Is the HttpsContext done via SSL
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Common.V1_1.BaseService.IsAlive">
            <summary>
            Returns true 
            </summary>
            <returns></returns>
        </member>
        <member name="F:TimeLog.TLP.API.Common.V1_3.BaseService._isSecure">
            <summary>
            Is the HttpsContext done via SSL
            </summary>
        </member>
        <member name="P:TimeLog.TLP.API.Common.V1_3.BaseService.IsSecure">
            <summary>
            Is the HttpsContext done via SSL
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Common.V1_3.BaseService.IsAlive">
            <summary>
            Returns true 
            </summary>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.Customization.HempelService.TimeLog#TLP#API#Proxy#Customization#IHempelService#CreateFreeExternalResource(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Creates an employee into TimeLog
            </summary>
            <param name="employeeGuid">Employee unique identifier. Generate a new one for each employee (Guid)</param>
            <param name="username">The username of the new employee (string)</param>
            <param name="initials">The initials of the new employee (string)</param>
            <param name="firstname">Employee firstname (string)</param>
            <param name="lastname">Employee lastname (string)</param>
            <param name="employeeNo">Employee number (string)</param>
            <param name="email">Employee email address (string)</param>
            <param name="title">Employee title (string)</param>
            <param name="telephone">Telephone number (string)</param>
            <param name="mobile">Mobile telephone number (string)</param>
            <param name="normalWorkingTimeName">The name of the type of working time (string)</param>
            <param name="holidayCalendarName">The holiday calendar name (string)</param>
            <param name="allowanceName">The allowance legislation name (DK, SE or DE) (string)</param>
            <param name="employeeTypeName">The employee type name (string)</param>
            <param name="hourlyRateName">Standard hourly rate name of the employee (string)</param>
            <param name="costPriceName">Cost price name of the employee (string)</param>
            <param name="externalIdentifier">The external identifier (string)</param>
            <param name="departmentGuid">The department identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_2.EmployeeHeader"/>
            <returns>Details of the new employee</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_3.ContractAdapter">
            <summary>
            Contractadapter for API
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_3.FinancialService">
            <summary>
            Financial service for pricelists, currencies and services (<strong>released October 2015</strong>) 
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/Financial/V1_1/FinancialService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/Financial/V1_1/FinancialServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Financial.V1_3.FinancialService"/> class.
            </summary>
            <param name="isSecure">Select to use SSL or not</param>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:TimeLog.TLP.API.Financial.V1_3.FinancialService"/> class from being created.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.GetLegalEntities(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the price lists available
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceList objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.GetLegalEntitiesByCurrency(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets price lists based on the currencies they hold
            </summary>
            <param name="currencyABB">Currency abbreviation e.g. DKK (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceList objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.GetLegalEntitiesByName(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets price lists based on the name, commonly only one price list is returned.
            </summary>
            <param name="name">Name of the price list (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceList objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.GetPriceGroups(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets price groups associated with a price list
            </summary>
            <param name="legalEntityID">Unit_Price list identifier (guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceGroup objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.GetHourlyRates(System.String,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a simple list of available hourly rates.
            </summary>
            <param name="currencyAbb">Optional currency abbreviation. Fallback to default system currency</param>
            <param name="legalEntityId">Optional legal entity field. Fallback to default legal entity</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of strings</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.GetNewStandardHourlyRates(System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Get new standard hourly rate setup property.
            </summary>
            <param name="legalEntityId">legal entity field</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of hourly rate with default values according to the number of available price groups</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.GetNewCustomerHourlyRates(System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Get new hourly rate setup property for a customer (price list).
            </summary>
            <param name="legalEntityId">Legal entity field</param>
            <param name="customerID">Customer id for the price list</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An hourly rate with default values according to the number of available price groups</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.GetProductNumbers(System.Int32,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Get available product no list.
            </summary>
            <param name="legalEntityId">Legal entity field.</param>
            <param name="isActive">Status of the product no</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of product numbers</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.CreateCustomerPriceList(System.Int32,System.Int32,System.Collections.Generic.List{System.Int32},TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Create new customer price list
            </summary>
            <param name="legalEntityId">Legal entity field.</param>
            <param name="customerId">Customer id of the price list</param>
            <param name="priceGroupIds">List of price groups created from the standard hourly rate</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>New created customer price list with hourly rates</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.CreateStandardHourlyRate(System.Int32,System.String,System.Collections.Generic.IEnumerable{TimeLog.TLP.API.Proxy.Financial.V1_3.HourlyRate},TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Create new standard hourly rate 
            </summary>
            <param name="legalEntityId">Legal entity field.</param>
            <param name="name">New hourly rate name</param>
            <param name="hourlyRates">List of price groups created from the standard hourly rate</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>New created customer price list with hourly rates</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.CreateCustomerHourlyRate(System.Int32,System.Int32,System.String,System.Collections.Generic.IEnumerable{TimeLog.TLP.API.Proxy.Financial.V1_3.HourlyRate},TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Create new standard hourly rate 
            </summary>
            <param name="legalEntityId">Legal entity field.</param>
            <param name="customerId">Customer id for the new hour rate </param>
            <param name="name">Hourly rate name</param>
            <param name="hourlyRates">List of price groups with new input hourly rate</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>New created customer price list with hourly rates</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.GetEmployeeCostRates(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a simple list of available cost prices
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of strings</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.GetContractList(System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the contracts avaialable on a project
            </summary>
            <param name="projectID">Identifier for the project on which contracts are required (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of Contract objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.GetPaymentList(System.Int32,System.DateTime,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the payments on a contract in a period
            </summary>
            <param name="contractID">Identifier for the contract on which payments are required (int)</param>
            <param name="startDate">startDate for the period (DateTime)</param>
            <param name="endDate">endDate for the period (DateTime)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of Contract objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialService.UpdatePaymentQuantity(TimeLog.TLP.API.Proxy.Financial.V1_3.Payment,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Saves the changes made to the payment object
            </summary>
            <param name="payment">Payment details (Payment)--></param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns></returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_3.FinancialServiceSecure">
            <summary>
            Financial service for pricelists, currencies and services
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.FinancialServiceSecure.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:TimeLog.TLP.API.Financial.V1_3.FinancialServiceSecure"/> class from being created.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_3.IContractAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.IContractAdapter.DomainToApi(TimeLog.TLP.ProjectManagement.ProjectSubContracts.IProjectSubContract{TimeLog.TLP.ProjectManagement.ContractModels.IContractModel})">
            <summary>
            Converts a domain object to an API object
            </summary>
            <param name="domain">The domain object</param>
            <returns>API object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_3.IEmployeeCostRateAdapter">
            <summary>
            Converts employee cost rates from domain to API
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.IEmployeeCostRateAdapter.DomainToApi(TimeLog.TLP.Invoicing.EmployeeCostRates.IEmployeeCostRate)">
            <summary>
            Converts a domain object to an API object
            </summary>
            <param name="domain">The domain object</param>
            <returns>API object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_3.IHourlyRateAdapter">
            <summary>
            Converts employee cost rates from domain to API
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.IHourlyRateAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IHourlyRate)">
            <summary>
            Converts a domain object to an API object
            </summary>
            <param name="domain">The domain object</param>
            <returns>API object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_3.ILegalEntityAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.ILegalEntityAdapter.DomainToApi(TimeLog.TLP.Organisation.ILegalEntity)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_3.LegalEntity"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_3.IPaymentAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.IPaymentAdapter.DomainToApi(TimeLog.TLP.Invoicing.Invoiceable.IPayment)">
            <summary>
            Converts a domain object to an API object
            </summary>
            <param name="domain">The domain object</param>
            <returns>API object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_3.IPriceGroupAdapter">
            <summary>
            Adapter interface for translating price groups
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.IPriceGroupAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IPriceGroup)">
            <summary>
            Converts a domain object to an API object
            </summary>
            <param name="domain">
            The domain object
            </param>
            <returns>
            API object
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_3.IServiceAdapter">
            <summary>
            The ServiceAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.IServiceAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IService)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_3.Service"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_3.LegalEntityAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.LegalEntityAdapter.DomainToApi(TimeLog.TLP.Organisation.ILegalEntity)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_3.LegalEntity"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_3.PaymentAdapter">
            <summary>
            Paymentadapter for API
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_3.PriceGroupAdapter">
            <summary>
            Unit_Price group adapter for API
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.PriceGroupAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IPriceGroup)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_2.PriceGroup"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_3.ServiceAdapter">
            <summary>
            The service adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_3.ServiceAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IService)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_3.Service"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_2.ContractAdapter">
            <summary>
            Contractadapter for API
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_2.FinancialService">
            <summary>
            Financial service for pricelists, currencies and services (<strong>released October 2015</strong>) 
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/Financial/V1_1/FinancialService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/Financial/V1_1/FinancialServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.FinancialService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Financial.V1_2.FinancialService"/> class.
            </summary>
            <param name="isSecure">Select to use SSL or not</param>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.FinancialService.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:TimeLog.TLP.API.Financial.V1_2.FinancialService"/> class from being created.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.FinancialService.GetLegalEntities(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the price lists available
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceList objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.FinancialService.GetLegalEntitiesByCurrency(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets price lists based on the currencies they hold
            </summary>
            <param name="currencyABB">Currency abbreviation e.g. DKK (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceList objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.FinancialService.GetLegalEntitiesByName(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets price lists based on the name, commonly only one price list is returned.
            </summary>
            <param name="name">Name of the price list (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceList objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.FinancialService.GetPriceGroups(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets price groups associated with a price list
            </summary>
            <param name="legalEntityID">Unit_Price list identifier (guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceGroup objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.FinancialService.GetHourlyRates(System.String,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a simple list of available hourly rates.
            </summary>
            <param name="currencyAbb">Optional currency abbreviation. Fallback to default system currency</param>
            <param name="legalEntityId">Optional legal entity field. Fallback to default legal entity</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of strings</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.FinancialService.GetEmployeeCostRates(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a simple list of available cost prices
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of strings</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.FinancialService.GetContractList(System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the contracts avaialable on a project
            </summary>
            <param name="projectID">Identifier for the project on which contracts are required (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of Contract objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.FinancialService.GetPaymentList(System.Int32,System.DateTime,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the payments on a contract in a period
            </summary>
            <param name="contractID">Identifier for the contract on which payments are required (int)</param>
            <param name="startDate">startDate for the period (DateTime)</param>
            <param name="endDate">endDate for the period (DateTime)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of Contract objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.FinancialService.GetCustomerInvoiceSettings(System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Get Invoice Settings of a Customer 
            </summary>
            <param name="customerId">Customer Id (integer)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer invoice settings object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.FinancialService.UpdateCustomerInvoiceSettings(TimeLog.TLP.API.Proxy.Financial.V1_2.CustomerInvoiceSettings,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Update the Invoice Settings of a Customer
            </summary>
            <param name="apiCustomerInvoiceSettings">The customer invoice settings to be updated</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer invoice settings object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.FinancialService.UpdatePaymentQuantity(TimeLog.TLP.API.Proxy.Financial.V1_2.Payment,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Saves the changes made to the payment object
            </summary>
            <param name="payment">Payment details (Payment)--></param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns></returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_2.FinancialServiceSecure">
            <summary>
            Financial service for pricelists, currencies and services
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.FinancialServiceSecure.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:TimeLog.TLP.API.Financial.V1_2.FinancialServiceSecure"/> class from being created.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_2.IHourlyRateAdapter">
            <summary>
            Converts employee cost rates from domain to API
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.IHourlyRateAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IHourlyRate)">
            <summary>
            Converts a domain object to an API object
            </summary>
            <param name="domain">The domain object</param>
            <returns>API object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_2.IEmployeeCostRateAdapter">
            <summary>
            Converts employee cost rates from domain to API
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.IEmployeeCostRateAdapter.DomainToApi(TimeLog.TLP.Invoicing.EmployeeCostRates.IEmployeeCostRate)">
            <summary>
            Converts a domain object to an API object
            </summary>
            <param name="domain">The domain object</param>
            <returns>API object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_2.IContractAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.IContractAdapter.DomainToApi(TimeLog.TLP.ProjectManagement.ProjectSubContracts.IProjectSubContract{TimeLog.TLP.ProjectManagement.ContractModels.IContractModel})">
            <summary>
            Converts a domain object to an API object
            </summary>
            <param name="domain">The domain object</param>
            <returns>API object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_2.IPaymentAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.IPaymentAdapter.DomainToApi(TimeLog.TLP.Invoicing.Invoiceable.IPayment)">
            <summary>
            Converts a domain object to an API object
            </summary>
            <param name="domain">The domain object</param>
            <returns>API object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_2.IPriceGroupAdapter">
            <summary>
            Adapter interface for translating price groups
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.IPriceGroupAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IPriceGroup)">
            <summary>
            Converts a domain object to an API object
            </summary>
            <param name="domain">
            The domain object
            </param>
            <returns>
            API object
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_2.ILegalEntityAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.ILegalEntityAdapter.DomainToApi(TimeLog.TLP.Organisation.ILegalEntity)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_2.LegalEntity"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_2.IServiceAdapter">
            <summary>
            The ServiceAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.IServiceAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IService)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_2.Service"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_2.PaymentAdapter">
            <summary>
            Paymentadapter for API
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_2.PriceGroupAdapter">
            <summary>
            Unit_Price group adapter for API
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.PriceGroupAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IPriceGroup)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_2.PriceGroup"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_2.LegalEntityAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.LegalEntityAdapter.DomainToApi(TimeLog.TLP.Organisation.ILegalEntity)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_2.LegalEntity"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_2.ServiceAdapter">
            <summary>
            The service adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_2.ServiceAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IService)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_2.Service"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_1.ContractAdapter">
            <summary>
            Contractadapter for API
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_1.PaymentAdapter">
            <summary>
            Paymentadapter for API
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_1.IPaymentAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.IPaymentAdapter.DomainToApi(TimeLog.TLP.Invoicing.Invoiceable.IPayment)">
            <summary>
            Converts a domain object to an API object
            </summary>
            <param name="domain">The domain object</param>
            <returns>API object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_1.IContractAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.IContractAdapter.DomainToApi(TimeLog.TLP.ProjectManagement.ProjectSubContracts.IProjectSubContract{TimeLog.TLP.ProjectManagement.ContractModels.IContractModel})">
            <summary>
            Converts a domain object to an API object
            </summary>
            <param name="domain">The domain object</param>
            <returns>API object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_1.FinancialService">
            <summary>
            Financial service for pricelists, currencies and services (<strong>released October 2015</strong>) - OBSOLETE 
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/Financial/V1_1/FinancialService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/Financial/V1_1/FinancialServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.FinancialService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Financial.V1_1.FinancialService"/> class.
            </summary>
            <param name="isSecure">Select to use SSL or not</param>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.FinancialService.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:TimeLog.TLP.API.Financial.V1_1.FinancialService"/> class from being created.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.FinancialService.GetPriceLists(TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets the price lists available
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceList objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.FinancialService.GetPriceListsByCurrency(System.String,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets price lists based on the currencies they hold
            </summary>
            <param name="currencyABB">Currency abbreviation e.g. DKK (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceList objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.FinancialService.GetPriceListByDepartment(System.String,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets a price list based on the department number
            </summary>
            <param name="departmentNo">Department number</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceList objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.FinancialService.GetPriceListByName(System.String,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets price lists based on the name, commonly only one price list is returned.
            </summary>
            <param name="name">Name of the price list (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceList objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.FinancialService.GetPriceGroups(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets price groups associated with a price list
            </summary>
            <param name="priceListID">Unit_Price list identifier (guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceGroup objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.FinancialService.GetHourlyRates(TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets a simple list of available hourly rates. NOT IMPLEMENTED.
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of strings</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.FinancialService.GetCostPrices(TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets a simple list of available cost prices. NOT IMPLEMENTED.
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of strings</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.FinancialService.GetContractList(System.Int32,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets the contracts avaialable on a project
            </summary>
            <param name="projectID">Identifier for the project on which contracts are required (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of Contract objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.FinancialService.GetPaymentList(System.Int32,System.DateTime,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets the payments on a contract in a period
            </summary>
            <param name="contractID">Identifier for the contract on which payments are required (int)</param>
            <param name="startDate">startDate for the period (DateTime)</param>
            <param name="endDate">endDate for the period (DateTime)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of Contract objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.FinancialService.UpdatePaymentQuantity(TimeLog.TLP.API.Proxy.Financial.V1_1.Payment,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Saves the changes made to the payment object
            </summary>
            <param name="payment">Payment details (Payment)--></param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns></returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_1.FinancialServiceSecure">
            <summary>
            Financial service for pricelists, currencies and services
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.FinancialServiceSecure.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:TimeLog.TLP.API.Financial.V1_1.FinancialServiceSecure"/> class from being created.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_1.IPriceGroupAdapter">
            <summary>
            Adapter interface for translating price groups
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.IPriceGroupAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IPriceGroup)">
            <summary>
            Converts a domain object to an API object
            </summary>
            <param name="domain">
            The domain object
            </param>
            <returns>
            API object
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_1.IPriceListAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.IPriceListAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IPriceList)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_1.PriceList"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_1.IServiceAdapter">
            <summary>
            The ServiceAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.IServiceAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IService)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_1.Service"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_1.PriceGroupAdapter">
            <summary>
            Unit_Price group adapter for API
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.PriceGroupAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IPriceGroup)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_1.PriceGroup"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_1.PriceListAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.PriceListAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IPriceList)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_1.PriceList"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_1.ServiceAdapter">
            <summary>
            The service adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_1.ServiceAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IService)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.Financial.V1_1.Service"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_0.PriceGroupAdapter">
            <summary>
            Unit_Price group adapter for API
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_0.IPriceGroupAdapter">
            <summary>
            Adapter interface for translating price groups
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.IPriceGroupAdapter.DomainToApi(TimeLog.TLP.Invoicing.HourlyRates.IPriceGroup)">
            <summary>
            Converts a domain object to an API object
            </summary>
            <param name="domain">The domain object</param>
            <returns>API object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_0.IPriceListAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_0.FinancialService">
            <summary>
            Financial service for price lists, currencies and services (released February 2014) - OBSOLETE 
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/Financial/V1_0/FinancialService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/Financial/V1_0/FinancialServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Financial.V1_0.FinancialService"/> class.
            </summary>
            <param name="isSecure">Select to use SSL or not</param>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:TimeLog.TLP.API.Financial.V1_0.FinancialService"/> class from being created.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.GetPriceLists(TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets the price lists available
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceList objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.GetPriceListsByCurrency(System.String,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets price lists based on the currencies they hold
            </summary>
            <param name="currencyABB">Currency abbreviation e.g. DKK (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceList objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.GetPriceListByDepartment(System.String,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets a price list based on the department number
            </summary>
            <param name="departmentNo">Department number</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceList objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.GetPriceListByName(System.String,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets price lists based on the name, commonly only one price list is returned.
            </summary>
            <param name="name">Name of the price list (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceList objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.GetPriceGroups(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets price groups associated with a price list
            </summary>
            <param name="priceListID">Unit_Price list identifier (guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of PriceGroup objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.GetHourlyRates(TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets a simple list of available hourly rates. NOT IMPLEMENTED.
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of strings</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.GetCostPrices(TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets a simple list of available cost prices. NOT IMPLEMENTED.
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of strings</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.GetAllAccountingPeriod(TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets all accounting period.
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>
            A list of accounting periods
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.GetAccountingPeriodByYear(System.Int32,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets the accounting period by year.
            </summary>
            <param name="year">The year.</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.GetAccountingPeriodByID(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets the accounting period by identifier.
            </summary>
            <param name="GUID">The unique identifier.</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.InsertAccountingPeriod(TimeLog.TLP.API.Proxy.Invoicing.V1_0.AccountingPeriod,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Inserts the accounting period.
            </summary>
            <param name="accountingPeriod">The accounting period.</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.UpdateAccountingPeriod(TimeLog.TLP.API.Proxy.Invoicing.V1_0.AccountingPeriod,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Updates the accounting period.
            </summary>
            <param name="accountingPeriod">The accounting period.</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.DeleteAccountingPeriod(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Deletes the accounting period.
            </summary>
            <param name="GUID">The unique identifier.</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.ChangeStatusAccountingPeriod(TimeLog.TLP.API.Proxy.Invoicing.V1_0.AccountingPeriod,TimeLog.TLP.Invoicing.AccountingPeriodStatus,TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Changes the status accounting period.
            </summary>
            <param name="accountingPeriod">The accounting period.</param>
            <param name="status">The status.</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.Financial.V1_0.FinancialService.ExecuteMethodApi``2(TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken,System.Func{System.Collections.Generic.IEnumerable{``1}},System.Func{``1,``0},System.String)">
            <summary>
            Executes the method API.
            </summary>
            <typeparam name="TReturnType">The type of the return type.</typeparam>
            <typeparam name="TMethodReturnType">The type of the method return type.</typeparam>
            <param name="token">The token.</param>
            <param name="apiMethodFunc">The API method function.</param>
            <param name="mappingFunc">The mapping function.</param>
            <param name="methodName">Name of the method.</param>
            <returns></returns>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_0.FinancialServiceSecure">
            <summary>
            Financial service for pricelists, currencies and services
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Financial.V1_0.PriceListAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_4.ContactAdapter">
            <summary>
            The contact adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.ContactAdapter._customerHeaderAdapter">
            <summary>
            The _customer header adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.ContactAdapter._addressAdapter">
            <summary>
            The _address adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.ContactAdapter._employeeAdapter">
            <summary>
            The _employee adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.ContactAdapter._stringNotEmpty">
            <summary>
            The _string not empty.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.ContactAdapter._validateAndReturnCountry">
            <summary>
            The _validate and return country.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.ContactAdapter._validateCustomerGuid">
            <summary>
            The _validate customer guid.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.ContactAdapter._customFieldAdapter">
            <summary>
            The _custom field adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.ContactAdapter.#ctor(TimeLog.TLP.API.CRM.V1_4.ICustomerHeaderAdapter,TimeLog.TLP.API.Common.V1_2.IAddressAdapter,TimeLog.TLP.API.Common.V1_2.IEmployeeHeaderAdapter,TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.Common.ICountry},TimeLog.TLP.Common.IBusinessRule{System.Guid,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.CRM.V1_4.ContactAdapter"/> class.
            </summary>
            <param name="customerHeaderAdapter">
            The customer header adapter.
            </param>
            <param name="addressAdapter">
            The address adapter.
            </param>
            <param name="employeeAdapter">
            The employee adapter.
            </param>
            <param name="validateAndReturnCountry">
            The validate and return country.
            </param>
            <param name="validateGUID">
            The validate guid.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.ContactAdapter.DomainToApi(TimeLog.TLP.CRM.IContact)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_4.Contact"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.ContactAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_4.Contact,TimeLog.TLP.Common.IViolation@)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="violation">
            The violation.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.IContact"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.ContactAdapter.CombineEventAndContact(System.Collections.Generic.IEnumerable{TimeLog.TLP.Common.IEvent},System.Collections.Generic.IEnumerable{TimeLog.TLP.CRM.IContact})">
            <summary>
            The combine event and contact.
            </summary>
            <param name="events">
            The events.
            </param>
            <param name="contacts">
            The contacts.
            </param>
            <returns>
            The <see cref="!:Dictionary"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_4.ContactHeaderAdapter">
            <summary>
            The contact header adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.ContactHeaderAdapter.DomainToApi(TimeLog.TLP.CRM.IContact)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_4.ContactHeader"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_4.CRMService">
            <summary>
            Service for handling CRM requests in TimeLog (released December 2014)
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/CRM/V1_3/CRMService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/CRM/V1_3/CRMServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.CRM.V1_4.CRMService"/> class.
            </summary>
            <param name="isSecure">Use HTTP or HTTPS</param>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.GetCustomerByID(System.Int32,System.Boolean,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a customer based on the ID
            </summary>
            <param name="id">ID of the customer to fetch (int)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.GetCustomerByGUID(System.Guid,System.Boolean,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a customer based on the guid
            </summary>
            <param name="guid">Guid of the customer to fetch (guid)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.GetCustomerByExternalKey(System.String,System.String,System.Boolean,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a customer based on the external system key (used in integrations)
            </summary>
            <param name="externalKey">External key (string)</param>
            <param name="systemName">Name of the system your are fetching from (string)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details with external key details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.GetCustomersByFieldsPaged(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of customers by CVR number, if not found then search by phone, then name
            </summary>
            <param name="cvr">CVR number - exact match required (string)</param>
            <param name="name">Name of the customer (string)</param>
            <param name="phone">Phone number of the customer (string)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.GetCustomersByFieldsForLinking(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of customers by CVR number, if not found then search by phone, then name
            </summary>
            <param name="customerNumber">customerNumber number - exact match required (string)</param>
            <param name="VATNumber">VATNumber of the customer (string)</param>
            <param name="organisationNumber">organisationNumber of the customer (string)</param>
            <param name="customerName">customerName of the customer (string)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.GetCustomersModifiedSincePaged(System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of customer modified after specified date but only include certain customer status groups. Use a date before Jan 1, 2000 to get all customers.
            </summary>
            <param name="date">Date to search from (DateTime)</param>
            <param name="includeCustomers">A value indicating whether to include customers with the customer status group "Customers" (bool)</param>
            <param name="includeSuppliers">A value indicating whether to include customers with the customer status group "Suppliers" (bool)</param>
            <param name="includeLeads">A value indicating whether to include customers with the customer status group "Leads" (bool)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.GetCustomersByNamePaged(System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a customer based on the name
            </summary>
            <param name="name">Name of the customer to fetch (string)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.InsertCustomer(TimeLog.TLP.API.Proxy.CRM.V1_4.Customer,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Inserts a customer into TimeLog
            </summary>
            <param name="customer">Customer details to insert (Customer)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>Customer details of the new customer</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.UpdateCustomer(TimeLog.TLP.API.Proxy.CRM.V1_4.Customer,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates a customer in TimeLog
            </summary>
            <param name="customer">Customer details to update - including IDs (Customer)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>Customer details of the updated customer</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.GetCustomerStatuses(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of available customer statuses
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of custom statuses</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.GetContactByGUID(System.Guid,System.Boolean,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a contact based on the guid
            </summary>
            <param name="guid">Guid of the contact (Guid)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Contact details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.GetContactsByCustomerPaged(System.Guid,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of contact related to a customer
            </summary>
            <param name="customer">Customer details (Guid)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of contacts</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.GetContactsByCustomerPaged(System.Guid,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of contact related to a customer
            </summary>
            <param name="customer">Customer details (Guid)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="includeInactiveContacts">if it should include inactive contacts or not</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of contacts</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.GetContactsModifiedSincePaged(System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of contacts modified after specified date. Use a date before Jan 1, 2000 to get all customers.
            </summary>
            <param name="date">Date to search from (DateTime)</param>
            <param name="includeCustomers">A value indicating whether to include customers with the customer status group "Customers" (bool)</param>
            <param name="includeSuppliers">A value indicating whether to include customers with the customer status group "Suppliers" (bool)</param>
            <param name="includeLeads">A value indicating whether to include customers with the customer status group "Leads" (bool)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="includeInactiveContacts">if the inactive contacts should be included or not</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.InsertContact(TimeLog.TLP.API.Proxy.CRM.V1_4.Contact,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Inserts a contact into TimeLog
            </summary>
            <param name="contact">Contact details (Contact)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Contact details of the new contact</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMService.UpdateContact(TimeLog.TLP.API.Proxy.CRM.V1_4.Contact,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates a contact in TimeLog
            </summary>
            <param name="contact">Contact details - include IDs (Contact)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Contact details of the updated contact</returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_4.CRMServiceSecure">
            <summary>
            Service for handling CRM requests in TimeLog
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CRMServiceSecure.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:TimeLog.TLP.API.CRM.V1_4.CRMServiceSecure"/> class from being created.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter">
            <summary>
            The customer adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter._contactHeaderAdapter">
            <summary>
            The _contact header adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter._addressAdapter">
            <summary>
            The _address adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter._stringNotEmpty">
            <summary>
            The _string not empty.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter._employeeAdapter">
            <summary>
            The _employee adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter._customerStatusAdapter">
            <summary>
            The _customer status adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter._industryAdapter">
            <summary>
            The _industry adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter._currencyAdapter">
            <summary>
            The _currency adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter._validateAndReturnCountry">
            <summary>
            The _validate and return country.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter._customerStatusExists">
            <summary>
            The _customer status exists.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter._employeeExists">
            <summary>
            The _employee exists.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter._industryExists">
            <summary>
            The _industry exists.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter._currencyIsValid">
            <summary>
            The _currency is valid.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter._customFieldAdapter">
            <summary>
            The _custom field adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter.#ctor(TimeLog.TLP.API.Common.V1_0.IAdapter{TimeLog.TLP.CRM.IContact,TimeLog.TLP.API.Proxy.CRM.V1_4.ContactHeader},TimeLog.TLP.API.Common.V1_2.IAddressAdapter,TimeLog.TLP.API.Common.V1_2.IEmployeeHeaderAdapter,TimeLog.TLP.API.CRM.V1_4.ICustomerStatusAdapter,TimeLog.TLP.API.CRM.V1_4.IIndustryAdapter,TimeLog.TLP.API.Common.V1_2.ICurrencyAdapter,TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.Common.ICountry},TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.CRM.ICustomerStatus},TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.Common.IEmployee},TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.CRM.IIndustry},TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.Common.ICurrency})">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter"/> class.
            </summary>
            <param name="contactHeaderAdapter">
            The contact header adapter.
            </param>
            <param name="addressAdapter">
            The address adapter.
            </param>
            <param name="employeeAdapter">
            The employee adapter.
            </param>
            <param name="customerStatusAdapter">
            The customer status adapter.
            </param>
            <param name="industryAdapter">
            The industry adapter.
            </param>
            <param name="currencyAdapter">
            The currency adapter.
            </param>
            <param name="validateAndReturnCountry">
            The validate and return country.
            </param>
            <param name="customerStatusExists">
            The customer status exists.
            </param>
            <param name="employeeIdentifierExists">
            The employee identifier exists.
            </param>
            <param name="industryExists">
            The industry exists.
            </param>
            <param name="currencyIsValid">
            The currency is valid.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter.DomainToApi(TimeLog.TLP.CRM.ICustomer)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_4.Customer"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_4.Customer,TimeLog.TLP.Common.IViolation@,System.Boolean)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="violation">
            The violation.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.ICustomer"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CustomerAdapter.CombineEventAndCustomer(System.Collections.Generic.IEnumerable{TimeLog.TLP.Common.IEvent},System.Collections.Generic.IEnumerable{TimeLog.TLP.CRM.ICustomer})">
            <summary>
            The combine event and customer.
            </summary>
            <param name="events">
            The events.
            </param>
            <param name="customers">
            The customers.
            </param>
            <returns>
            The <see cref="!:Dictionary"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_4.CustomerHeaderAdapter">
            <summary>
            The customer header adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CustomerHeaderAdapter.DomainToApi(TimeLog.TLP.CRM.ICustomerHeader)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_4.CustomerHeader"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CustomerHeaderAdapter.DomainToApi(System.Int32)">
            <summary>
            The domain to api.
            </summary>
            <param name="domainID">
            The domain id.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_4.CustomerHeader"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_4.CustomerStatusAdapter">
            <summary>
            The customer status adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CustomerStatusAdapter.DomainToApi(TimeLog.TLP.CRM.ICustomerStatus)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_4.CustomerStatus"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CustomerStatusAdapter.DomainToApi(System.Int32)">
            <summary>
            The domain to api.
            </summary>
            <param name="domainID">
            The domain id.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_4.CustomerStatus"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.CustomerStatusAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_4.CustomerStatus)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.ICustomerStatus"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_4.IContactAdapter">
            <summary>
            The ContactAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.IContactAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_4.Contact,TimeLog.TLP.Common.IViolation@)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="violation">
            The violation.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.IContact"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.IContactAdapter.CombineEventAndContact(System.Collections.Generic.IEnumerable{TimeLog.TLP.Common.IEvent},System.Collections.Generic.IEnumerable{TimeLog.TLP.CRM.IContact})">
            <summary>
            The combine event and contact.
            </summary>
            <param name="events">
            The events.
            </param>
            <param name="customers">
            The customers.
            </param>
            <returns>
            The <see cref="!:Dictionary"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_4.ICustomerAdapter">
            <summary>
            The CustomerAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.ICustomerAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_4.Customer,TimeLog.TLP.Common.IViolation@,System.Boolean)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="violation">
            The violation.
            </param>
            <param name="isNew">
            IsNew flag to indicate it is an insert or update operation
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.ICustomer"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.ICustomerAdapter.CombineEventAndCustomer(System.Collections.Generic.IEnumerable{TimeLog.TLP.Common.IEvent},System.Collections.Generic.IEnumerable{TimeLog.TLP.CRM.ICustomer})">
            <summary>
            The combine event and customer.
            </summary>
            <param name="events">
            The events.
            </param>
            <param name="customers">
            The customers.
            </param>
            <returns>
            The <see cref="!:Dictionary"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_4.ICustomerHeaderAdapter">
            <summary>
            The CustomerHeaderAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.ICustomerHeaderAdapter.DomainToApi(System.Int32)">
            <summary>
            The domain to api.
            </summary>
            <param name="domainID">
            The domain id.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_4.CustomerHeader"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_4.ICustomerStatusAdapter">
            <summary>
            The CustomerStatusAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.ICustomerStatusAdapter.DomainToApi(System.Int32)">
            <summary>
            The domain to api.
            </summary>
            <param name="domainID">
            The domain id.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_4.CustomerStatus"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.ICustomerStatusAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_4.CustomerStatus)">
            <summary>
            The api to domain.
            </summary>
            <param name="customerStatus">
            The customer status.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.ICustomerStatus"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_4.IIndustryAdapter">
            <summary>
            The IndustryAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.IIndustryAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_4.Industry)">
            <summary>
            The api to domain.
            </summary>
            <param name="industry">
            The industry.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.IIndustry"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_4.IndustryAdapter">
            <summary>
            The industry adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.IndustryAdapter.DomainToApi(TimeLog.TLP.CRM.IIndustry)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_4.Industry"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_4.IndustryAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_4.Industry)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.IIndustry"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_3.ContactAdapter">
            <summary>
            The contact adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.ContactAdapter._customerHeaderAdapter">
            <summary>
            The _customer header adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.ContactAdapter._addressAdapter">
            <summary>
            The _address adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.ContactAdapter._employeeAdapter">
            <summary>
            The _employee adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.ContactAdapter._stringNotEmpty">
            <summary>
            The _string not empty.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.ContactAdapter._validateAndReturnCountry">
            <summary>
            The _validate and return country.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.ContactAdapter._validateCustomerGuid">
            <summary>
            The _validate customer guid.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.ContactAdapter._customFieldAdapter">
            <summary>
            The _custom field adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.ContactAdapter.#ctor(TimeLog.TLP.API.CRM.V1_3.ICustomerHeaderAdapter,TimeLog.TLP.API.Common.V1_2.IAddressAdapter,TimeLog.TLP.API.Common.V1_2.IEmployeeHeaderAdapter,TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.Common.ICountry},TimeLog.TLP.Common.IBusinessRule{System.Guid,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.CRM.V1_3.ContactAdapter"/> class.
            </summary>
            <param name="customerHeaderAdapter">
            The customer header adapter.
            </param>
            <param name="addressAdapter">
            The address adapter.
            </param>
            <param name="employeeAdapter">
            The employee adapter.
            </param>
            <param name="validateAndReturnCountry">
            The validate and return country.
            </param>
            <param name="validateGUID">
            The validate guid.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.ContactAdapter.DomainToApi(TimeLog.TLP.CRM.IContact)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_3.Contact"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.ContactAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_3.Contact,TimeLog.TLP.Common.IViolation@)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="violation">
            The violation.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.IContact"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.ContactAdapter.CombineEventAndContact(System.Collections.Generic.IEnumerable{TimeLog.TLP.Common.IEvent},System.Collections.Generic.IEnumerable{TimeLog.TLP.CRM.IContact})">
            <summary>
            The combine event and contact.
            </summary>
            <param name="events">
            The events.
            </param>
            <param name="contacts">
            The contacts.
            </param>
            <returns>
            The <see cref="!:Dictionary"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_3.ContactHeaderAdapter">
            <summary>
            The contact header adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.ContactHeaderAdapter.DomainToApi(TimeLog.TLP.CRM.IContact)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_3.ContactHeader"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_3.CRMService">
            <summary>
            Service for handling CRM requests in TimeLog (released December 2014) - OBSOLETE
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/CRM/V1_3/CRMService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/CRM/V1_3/CRMServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.CRM.V1_3.CRMService"/> class.
            </summary>
            <param name="isSecure">Use HTTP or HTTPS</param>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.GetCustomerByID(System.Int32,System.Boolean,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a customer based on the ID
            </summary>
            <param name="id">ID of the customer to fetch (int)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.GetCustomerByGUID(System.Guid,System.Boolean,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a customer based on the guid
            </summary>
            <param name="guid">Guid of the customer to fetch (guid)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.GetCustomerByExternalKey(System.String,System.String,System.Boolean,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a customer based on the external system key (used in integrations)
            </summary>
            <param name="externalKey">External key (string)</param>
            <param name="systemName">Name of the system your are fetching from (string)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details with external key details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.GetCustomersByFieldsPaged(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of customers by CVR number, if not found then search by phone, then name
            </summary>
            <param name="cvr">CVR number - exact match required (string)</param>
            <param name="name">Name of the customer (string)</param>
            <param name="phone">Phone number of the customer (string)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.GetCustomersModifiedSincePaged(System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of customer modified after specified date but only include certain customer status groups. Use a date before Jan 1, 2000 to get all customers.
            </summary>
            <param name="date">Date to search from (DateTime)</param>
            <param name="includeCustomers">A value indicating whether to include customers with the customer status group "Customers" (bool)</param>
            <param name="includeSuppliers">A value indicating whether to include customers with the customer status group "Suppliers" (bool)</param>
            <param name="includeLeads">A value indicating whether to include customers with the customer status group "Leads" (bool)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.GetCustomersByNamePaged(System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a customer based on the name
            </summary>
            <param name="name">Name of the customer to fetch (string)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.InsertCustomer(TimeLog.TLP.API.Proxy.CRM.V1_3.Customer,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Inserts a customer into TimeLog
            </summary>
            <param name="customer">Customer details to insert (Customer)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>Customer details of the new customer</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.UpdateCustomer(TimeLog.TLP.API.Proxy.CRM.V1_3.Customer,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates a customer in TimeLog
            </summary>
            <param name="customer">Customer details to update - including IDs (Customer)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>Customer details of the updated customer</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.GetCustomerStatuses(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of available customer statuses
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of custom statuses</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.GetContactByGUID(System.Guid,System.Boolean,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a contact based on the guid
            </summary>
            <param name="guid">Guid of the contact (Guid)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Contact details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.GetContactsByCustomerPaged(System.Guid,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of contact related to a customer
            </summary>
            <param name="customer">Customer details (Guid)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of contacts</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.GetContactsByCustomerPaged(System.Guid,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of contact related to a customer
            </summary>
            <param name="customer">Customer details (Guid)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="includeInactiveContacts">if it should include inactive contacts or not</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of contacts</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.GetContactsModifiedSincePaged(System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of contacts modified after specified date. Use a date before Jan 1, 2000 to get all customers.
            </summary>
            <param name="date">Date to search from (DateTime)</param>
            <param name="includeCustomers">A value indicating whether to include customers with the customer status group "Customers" (bool)</param>
            <param name="includeSuppliers">A value indicating whether to include customers with the customer status group "Suppliers" (bool)</param>
            <param name="includeLeads">A value indicating whether to include customers with the customer status group "Leads" (bool)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="includeInactiveContacts">if the inactive contacts should be included or not</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.InsertContact(TimeLog.TLP.API.Proxy.CRM.V1_3.Contact,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Inserts a contact into TimeLog
            </summary>
            <param name="contact">Contact details (Contact)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Contact details of the new contact</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMService.UpdateContact(TimeLog.TLP.API.Proxy.CRM.V1_3.Contact,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates a contact in TimeLog
            </summary>
            <param name="contact">Contact details - include IDs (Contact)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Contact details of the updated contact</returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_3.CRMServiceSecure">
            <summary>
            Service for handling CRM requests in TimeLog
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CRMServiceSecure.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:TimeLog.TLP.API.CRM.V1_3.CRMServiceSecure"/> class from being created.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter">
            <summary>
            The customer adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter._contactHeaderAdapter">
            <summary>
            The _contact header adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter._addressAdapter">
            <summary>
            The _address adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter._stringNotEmpty">
            <summary>
            The _string not empty.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter._employeeAdapter">
            <summary>
            The _employee adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter._customerStatusAdapter">
            <summary>
            The _customer status adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter._industryAdapter">
            <summary>
            The _industry adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter._currencyAdapter">
            <summary>
            The _currency adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter._validateAndReturnCountry">
            <summary>
            The _validate and return country.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter._customerStatusExists">
            <summary>
            The _customer status exists.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter._employeeExists">
            <summary>
            The _employee exists.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter._industryExists">
            <summary>
            The _industry exists.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter._currencyIsValid">
            <summary>
            The _currency is valid.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter._customFieldAdapter">
            <summary>
            The _custom field adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter.#ctor(TimeLog.TLP.API.Common.V1_0.IAdapter{TimeLog.TLP.CRM.IContact,TimeLog.TLP.API.Proxy.CRM.V1_3.ContactHeader},TimeLog.TLP.API.Common.V1_2.IAddressAdapter,TimeLog.TLP.API.Common.V1_2.IEmployeeHeaderAdapter,TimeLog.TLP.API.CRM.V1_3.ICustomerStatusAdapter,TimeLog.TLP.API.CRM.V1_3.IIndustryAdapter,TimeLog.TLP.API.Common.V1_2.ICurrencyAdapter,TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.Common.ICountry},TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.CRM.ICustomerStatus},TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.Common.IEmployee},TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.CRM.IIndustry},TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.Common.ICurrency})">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter"/> class.
            </summary>
            <param name="contactHeaderAdapter">
            The contact header adapter.
            </param>
            <param name="addressAdapter">
            The address adapter.
            </param>
            <param name="employeeAdapter">
            The employee adapter.
            </param>
            <param name="customerStatusAdapter">
            The customer status adapter.
            </param>
            <param name="industryAdapter">
            The industry adapter.
            </param>
            <param name="currencyAdapter">
            The currency adapter.
            </param>
            <param name="validateAndReturnCountry">
            The validate and return country.
            </param>
            <param name="customerStatusExists">
            The customer status exists.
            </param>
            <param name="employeeIdentifierExists">
            The employee identifier exists.
            </param>
            <param name="industryExists">
            The industry exists.
            </param>
            <param name="currencyIsValid">
            The currency is valid.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter.DomainToApi(TimeLog.TLP.CRM.ICustomer)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_3.Customer"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_3.Customer,TimeLog.TLP.Common.IViolation@,System.Boolean)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="violation">
            The violation.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.ICustomer"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CustomerAdapter.CombineEventAndCustomer(System.Collections.Generic.IEnumerable{TimeLog.TLP.Common.IEvent},System.Collections.Generic.IEnumerable{TimeLog.TLP.CRM.ICustomer})">
            <summary>
            The combine event and customer.
            </summary>
            <param name="events">
            The events.
            </param>
            <param name="customers">
            The customers.
            </param>
            <returns>
            The <see cref="!:Dictionary"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_3.CustomerHeaderAdapter">
            <summary>
            The customer header adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CustomerHeaderAdapter.DomainToApi(TimeLog.TLP.CRM.ICustomerHeader)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_3.CustomerHeader"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CustomerHeaderAdapter.DomainToApi(System.Int32)">
            <summary>
            The domain to api.
            </summary>
            <param name="domainID">
            The domain id.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_3.CustomerHeader"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_3.CustomerStatusAdapter">
            <summary>
            The customer status adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CustomerStatusAdapter.DomainToApi(TimeLog.TLP.CRM.ICustomerStatus)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_3.CustomerStatus"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CustomerStatusAdapter.DomainToApi(System.Int32)">
            <summary>
            The domain to api.
            </summary>
            <param name="domainID">
            The domain id.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_3.CustomerStatus"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.CustomerStatusAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_3.CustomerStatus)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.ICustomerStatus"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_3.IContactAdapter">
            <summary>
            The ContactAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.IContactAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_3.Contact,TimeLog.TLP.Common.IViolation@)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="violation">
            The violation.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.IContact"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.IContactAdapter.CombineEventAndContact(System.Collections.Generic.IEnumerable{TimeLog.TLP.Common.IEvent},System.Collections.Generic.IEnumerable{TimeLog.TLP.CRM.IContact})">
            <summary>
            The combine event and contact.
            </summary>
            <param name="events">
            The events.
            </param>
            <param name="customers">
            The customers.
            </param>
            <returns>
            The <see cref="!:Dictionary"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_3.ICustomerAdapter">
            <summary>
            The CustomerAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.ICustomerAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_3.Customer,TimeLog.TLP.Common.IViolation@,System.Boolean)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="violation">
            The violation.
            </param>
            <param name="isNew">
            IsNew flag to indicate it is an insert or update operation
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.ICustomer"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.ICustomerAdapter.CombineEventAndCustomer(System.Collections.Generic.IEnumerable{TimeLog.TLP.Common.IEvent},System.Collections.Generic.IEnumerable{TimeLog.TLP.CRM.ICustomer})">
            <summary>
            The combine event and customer.
            </summary>
            <param name="events">
            The events.
            </param>
            <param name="customers">
            The customers.
            </param>
            <returns>
            The <see cref="!:Dictionary"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_3.ICustomerHeaderAdapter">
            <summary>
            The CustomerHeaderAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.ICustomerHeaderAdapter.DomainToApi(System.Int32)">
            <summary>
            The domain to api.
            </summary>
            <param name="domainID">
            The domain id.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_3.CustomerHeader"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_3.ICustomerStatusAdapter">
            <summary>
            The CustomerStatusAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.ICustomerStatusAdapter.DomainToApi(System.Int32)">
            <summary>
            The domain to api.
            </summary>
            <param name="domainID">
            The domain id.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_3.CustomerStatus"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.ICustomerStatusAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_3.CustomerStatus)">
            <summary>
            The api to domain.
            </summary>
            <param name="customerStatus">
            The customer status.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.ICustomerStatus"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_3.IIndustryAdapter">
            <summary>
            The IndustryAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.IIndustryAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_3.Industry)">
            <summary>
            The api to domain.
            </summary>
            <param name="industry">
            The industry.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.IIndustry"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_3.IndustryAdapter">
            <summary>
            The industry adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.IndustryAdapter.DomainToApi(TimeLog.TLP.CRM.IIndustry)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.CRM.V1_3.Industry"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_3.IndustryAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.CRM.V1_3.Industry)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.CRM.IIndustry"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_1.CRMService">
            <summary>
            OBSOLETE Service for handling CRM requests in TimeLog
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/CRM/V1_1/CRMService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/CRM/V1_1/CRMServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.GetCustomerByID(System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a customer based on the ID
            </summary>
            <param name="id">ID of the customer to fetch (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.GetCustomersByName(System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a customer based on the name
            </summary>
            <param name="name">Name of the customer to fetch (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.GetCustomerByGUID(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a customer based on the guid
            </summary>
            <param name="guid">Guid of the customer to fetch (guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.GetCustomersByFields(System.String,System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of customers by CVR number, if not found then search by phone, then name
            </summary>
            <param name="cvr">CVR number - exact match required (string)</param>
            <param name="name">Name of the customer (string)</param>
            <param name="phone">Phone number of the customer (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.GetCustomersModifiedSince(System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of customer modified after specified date
            </summary>
            <param name="date">Date to search from (DateTime)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.InsertCustomer(TimeLog.TLP.API.Proxy.CRM.V1_1.Customer,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Inserts a customer into TimeLog
            </summary>
            <param name="customer">Customer details to insert (Customer)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>Customer details of the new customer</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.InsertCustomers(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.CRM.V1_1.Customer},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Inserts multiple customers into TimeLog
            </summary>
            <param name="customers">List of customers to insert (List&lt;Customer&gt;)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>Customer details of the new customer</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.UpdateCustomer(TimeLog.TLP.API.Proxy.CRM.V1_1.Customer,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Updates a customer in TimeLog
            </summary>
            <param name="customer">Customer details to update - including IDs (Customer)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>Customer details of the updated customer</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.GetContactByGUID(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a contact based on the guid
            </summary>
            <param name="guid">Guid of the contact (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Contact details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.GetContactsByCustomer(TimeLog.TLP.API.Proxy.CRM.V1_1.Customer,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of contact related to a customer
            </summary>
            <param name="customer">Customer details (Customer)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of contacts</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.GetContactForExternalSystem(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a contact based on the external system key (used in integrations)
            </summary>
            <param name="externalID">External system ID (string)</param>
            <param name="systemName">Name of the system your are fetching from (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Contact details with external key details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.InsertContact(TimeLog.TLP.API.Proxy.CRM.V1_1.Contact,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Inserts a contact into TimeLog
            </summary>
            <param name="contact">Contact details (Contact)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Contact details of the new contact</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.UpdateContact(TimeLog.TLP.API.Proxy.CRM.V1_1.Contact,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Updates a contact in TimeLog
            </summary>
            <param name="contact">Contact details - include IDs (Contact)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Contact details of the updated contact</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.GetCustomerForExternalSystem(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a customer based on the external system key (used in integrations)
            </summary>
            <param name="externalID">External system ID (string)</param>
            <param name="systemName">Name of the system your are fetching from (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details with external key details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_1.CRMService.GetCustomersModifiedSinceForExternalSystem(System.DateTime,System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of customers with external system key that has been modified since a date (used in integrations)
            </summary>
            <param name="date">Date to search from (DateTime)</param>
            <param name="systemName">Name of the system your are fetching from (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of customers with external key details</returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_2.CRMService">
            <summary>
            Service for handling CRM requests in TimeLog (released March 2013) - OBSOLETE
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/CRM/V1_2/CRMService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/CRM/V1_2/CRMServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.CRM.V1_2.CRMService"/> class.
            </summary>
            <param name="isSecure">Use HTTP or HTTPS</param>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.GetCustomerByID(System.Int32,System.Boolean,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a customer based on the ID
            </summary>
            <param name="id">ID of the customer to fetch (int)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.GetCustomerByGUID(System.Guid,System.Boolean,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a customer based on the guid
            </summary>
            <param name="guid">Guid of the customer to fetch (guid)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.GetCustomerByExternalKey(System.String,System.String,System.Boolean,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a customer based on the external system key (used in integrations)
            </summary>
            <param name="externalKey">External key (string)</param>
            <param name="systemName">Name of the system your are fetching from (string)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details with external key details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.GetCustomersByFieldsPaged(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of customers by CVR number, if not found then search by phone, then name
            </summary>
            <param name="cvr">CVR number - exact match required (string)</param>
            <param name="name">Name of the customer (string)</param>
            <param name="phone">Phone number of the customer (string)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.GetCustomersModifiedSincePaged(System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of customer modified after specified date but only include certain customer status groups. Use a date before Jan 1, 2000 to get all customers.
            </summary>
            <param name="date">Date to search from (DateTime)</param>
            <param name="includeCustomers">A value indicating whether to include customers with the customer status group "Customers" (bool)</param>
            <param name="includeSuppliers">A value indicating whether to include customers with the customer status group "Suppliers" (bool)</param>
            <param name="includeLeads">A value indicating whether to include customers with the customer status group "Leads" (bool)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.GetCustomersByNamePaged(System.String,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a customer based on the name
            </summary>
            <param name="name">Name of the customer to fetch (string)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Customer details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.InsertCustomer(TimeLog.TLP.API.Proxy.CRM.V1_2.Customer,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Inserts a customer into TimeLog
            </summary>
            <param name="customer">Customer details to insert (Customer)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>Customer details of the new customer</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.UpdateCustomer(TimeLog.TLP.API.Proxy.CRM.V1_2.Customer,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates a customer in TimeLog
            </summary>
            <param name="customer">Customer details to update - including IDs (Customer)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>Customer details of the updated customer</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.GetCustomerStatuses(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of available customer statuses
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of custom statuses</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.GetContactByGUID(System.Guid,System.Boolean,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a contact based on the guid
            </summary>
            <param name="guid">Guid of the contact (Guid)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Contact details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.GetContactsByCustomerPaged(System.Guid,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of contact related to a customer
            </summary>
            <param name="customer">Customer details (Guid)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of contacts</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.GetContactsModifiedSincePaged(System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of contacts modified after specified date. Use a date before Jan 1, 2000 to get all customers.
            </summary>
            <param name="date">Date to search from (DateTime)</param>
            <param name="includeCustomers">A value indicating whether to include customers with the customer status group "Customers" (bool)</param>
            <param name="includeSuppliers">A value indicating whether to include customers with the customer status group "Suppliers" (bool)</param>
            <param name="includeLeads">A value indicating whether to include customers with the customer status group "Leads" (bool)</param>
            <param name="loadCustomFields">Load the custom fields (if any) associated (bool)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of customers</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.InsertContact(TimeLog.TLP.API.Proxy.CRM.V1_2.Contact,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Inserts a contact into TimeLog
            </summary>
            <param name="contact">Contact details (Contact)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Contact details of the new contact</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CRM.V1_2.CRMService.UpdateContact(TimeLog.TLP.API.Proxy.CRM.V1_2.Contact,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates a contact in TimeLog
            </summary>
            <param name="contact">Contact details - include IDs (Contact)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Contact details of the updated contact</returns>
        </member>
        <member name="T:TimeLog.TLP.API.CRM.V1_2.CRMServiceSecure">
            <summary>
            Service for handling CRM requests in TimeLog
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.CustomField.V1_0.CustomFieldAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.CustomField.V1_0.CustomFieldService">
            <summary>
            Service for handling custom fields in TimeLog (beta as of July 2014) - OBSOLETE
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/CRM/V1_3/CRMService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/CRM/V1_3/CRMServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.CustomField.V1_0.CustomFieldService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.CustomField.V1_0.CustomFieldService"/> class.
            </summary>
            <param name="isSecure">Decide if the service is used over https or http</param>
        </member>
        <member name="M:TimeLog.TLP.API.CustomField.V1_0.CustomFieldService.GetCustomFields(TimeLog.TLP.Common.DomainType,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of custom field related to a specific domain type in TimeLog.
            </summary>
            <param name="domainType">Domain type to fetch custom field for</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of CustomField classes</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CustomField.V1_0.CustomFieldService.InsertCustomFields(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.CustomField.V1_0.CustomField},System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Insert a list of custom fields to TimeLog
            </summary>
            <param name="customFields">List of custom fields to insert</param>
            <param name="systemOwner">A unique key giving your system ownership over the custom fields</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of inserted CustomField classes</returns>
        </member>
        <member name="M:TimeLog.TLP.API.CustomField.V1_0.CustomFieldService.UpdateCustomFields(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.CustomField.V1_0.CustomField},System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates a list of custom fields in TimeLog. Custom fields can only be updated when systemOwner matches.
            </summary>
            <param name="customFields">List of custom fields to update</param>
            <param name="systemOwner">A unique key giving your system ownership over the custom fields</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>An array of updated CustomField classes</returns>
        </member>
        <member name="T:TimeLog.TLP.API.CustomField.V1_0.CustomFieldServiceSecure">
            <summary>
            Service for handling custom fields in TimeLog
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.CustomField.V1_0.ICustomFieldAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Expenses.V1_0.ExpensesService">
            <summary>
            Service for handling expense requests in TimeLog (released July 2013)
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/Expenses/V1_0/ExpensesService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/Expenses/V1_0/ExpensesServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.Expenses.V1_0.ExpensesService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Expenses.V1_0.ExpensesService"/> class.
            </summary>
            <param name="isSecure">Use HTTP or HTTPS</param>
        </member>
        <member name="M:TimeLog.TLP.API.Expenses.V1_0.ExpensesService.GetExpensesByEmployee(System.String,System.DateTime,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of expenses associated with an employee filtered by date
            </summary>
            <param name="initials">Employee initials (string)</param>
            <param name="from">Date to get the expenses from (DateTime)</param>
            <param name="to">Date to get the expenses to (DateTime)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of expenses</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Expenses.V1_0.ExpensesService.InsertExpense(TimeLog.TLP.API.Proxy.Expenses.V1_0.Expense,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Inserts a new expense
            </summary>
            <param name="expense">Expense object (Expense)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>The expense just inserted</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Expenses.V1_0.ExpensesService.UpdateExpense(TimeLog.TLP.API.Proxy.Expenses.V1_0.Expense,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates a new expense
            </summary>
            <param name="expense">Expense object (Expense)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>The expense just updated</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Expenses.V1_0.ExpensesService.GetPaymentMethods(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list payment methods
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of payment methods</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Expenses.V1_0.ExpensesService.GetExpenseTypes(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list expense types
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of expense types</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Expenses.V1_0.ExpensesServiceSecure">
            <summary>
            Service for handling expense requests in TimeLog (released July 2013)
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.FileServices.EnumHelper.GetAttributeOfType``1(System.Enum)">
            <summary>
            Gets an attribute on an enum field value
            </summary>
            <typeparam name="T">The type of the attribute you want to retrieve</typeparam>
            <param name="enumVal">The enum value</param>
            <returns>The attribute of type T that exists on the enum value</returns>
        </member>
        <member name="T:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService">
            <summary>
            Service for handling help desk actions in TimeLog (released May 2014) - OBSOLETE
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/HelpDesk/V1_6/HelpDeskService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/HelpDesk/V1_0/HelpDeskServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService"/> class.
            </summary>
            <param name="isSecure">Indicate whether the connection uses SSL</param>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.GetTicketsPaged(System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Returns a list of Tickets based on the filter
            </summary>
            <param name="CustomerID">Limits result to ticket for the customer with the supplied CustomerID (int)</param>
            <param name="ResponsibleEmployeeID">Limits the result to  Tickets assigned to the Employee with the supplied EmployeeID (int)</param>
            <param name="TicketStatusID">Limits the result based on status of the ticket. 
            Values-2 = all; 1 = Active; 2 = Closed; 3 = Pending; 4 = Ready for closure; 5 = Cancelled; -1 = Active + Ready for closure + Pending (int)</param>
            <param name="loadExternalKeys">Falg to load external system keys for the Tickets (int)</param>
            <param name="page">The page number</param>
            <param name="pageSize">The number of items returned per page</param>
            <param name="token">Security token associated with the request</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.GetTicketByExternalKey(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Returns a Ticket based on the specified external key from the specified external system
            </summary>
            <param name="key">The key of the Ticket in the other system</param>
            <param name="systemName">The system name as specified in TimeLog API setup interface</param>
            <param name="token">Security token associated with the request</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.GetTicketByID(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Returns the Ticket with spedified ID
            </summary>
            <param name="ID"></param>
            <param name="token">Security token associated with the request</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.CreateTicket(TimeLog.TLP.API.Proxy.HelpDesk.V1_6.Ticket,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates a new Ticket in TimeLog
            </summary>
            <param name="ticket">The Ticket to be created</param>
            <param name="token">Security token associated with the request</param>
            <returns>The ticket in the state after it has been saved</returns>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.UpdateTicket(TimeLog.TLP.API.Proxy.HelpDesk.V1_6.Ticket,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates the properties of a Ticket
            </summary>
            <param name="ticket">The Ticket to save</param>
            <param name="token">Security token associated with the request</param>
            <returns>The Tixket in the state after it has been saved</returns>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.ChangeStatusOnTicket(System.Guid,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Sets the status on the provided Ticket to the targetStatus
            </summary>
            <param name="ID"></param>
            <param name="targetStatus"></param>
            <param name="token">Security token associated with the request</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.ChangeBillableStatusOnTicket(System.Guid,System.Boolean,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Set if the Ticket is billable or not
            </summary>
            <param name="ID"></param>
            <param name="ticketIsBillable">The billable status the Ticket should have</param>
            <param name="ChangeExistingPosts">Change existing post to reflect the status of Ticket or keep their current billable status</param>
            <param name="token">Security token associated with the request</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.ChangePriorityOnTicket(System.Guid,System.Int32,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Sets the priority on the specified Ticket
            </summary>
            <param name="ID"></param>
            <param name="targetPriority">The priority the Ticket is updated to have</param>
            <param name="calculateDueDate">Control if the due date on the Ticket is re-calculated based on the Help Desk settings in TimeLog or kept as is</param>
            <param name="token">Security token associated with the request</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.GetPostsForTicket(System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Lists all posts on the specified Ticket
            </summary>
            <param name="TicketID">The TicketID for which all Post should be retrieved</param>
            <param name="token">Security token associated with the request</param>
            <returns>All Posts on the Ticket</returns>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.CreatePost(TimeLog.TLP.API.Proxy.HelpDesk.V1_6.Post,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Adds a new Post on a Ticket
            </summary>
            <param name="post">The Post to create</param>
            <param name="TicketID">The TicketID of the Ticket on which the Post is to be added</param>
            <param name="token">Security token associated with the request</param>
            <returns>The Post in the state after it has been saved to the database</returns>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.UpdatePost(TimeLog.TLP.API.Proxy.HelpDesk.V1_6.Post,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Saves the specified Post to the database
            </summary>
            <param name="post">The Post to be updated</param>
            <param name="token">Security token associated with the request</param>
            <returns>The Post in the state after it has been saved</returns>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.DeletePostByID(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deletes Post with the specified ID
            </summary>
            <param name="ID">The ID is the post to delete</param>
            <param name="token">Security token associated with the request</param>
            <returns>The Post in the state it had in the Datatbase before it was deleted</returns>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.GetSupportTypes(System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of support types
            </summary>
            <param name="includeInactiveSupportTypes">If false only active support types is in the response. If true also in-active support types will be included</param>
            <param name="token">Security token associated with the request</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskService.GetServiceContractsForCustomer(System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets all Service Contracts for the specifed customer
            </summary>
            <param name="CustomerID">The CustomerID of the Customer for which all service contracts should be listed</param>
            <param name="ActiveState">Limits the list of Service Contract based on the Active state. -1 = No filter, 0 = Inactive only, 1 = Active only</param>
            <param name="token">Security token associated with the request</param>
            <returns>A list of Service Contracts</returns>
        </member>
        <member name="T:TimeLog.TLP.API.HelpDesk.V1_6.HelpDeskServiceSecure">
            <summary>
            Service for handling projects and time registrations in TimeLog (released January 2014)
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Invoicing.V1_1.InvoiceAdapter">
            <summary>
            Adapter for converting domain invoices to API invoices
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_1.InvoiceAdapter.#ctor(TimeLog.TLP.API.Common.V1_0.IAdapter{TimeLog.TLP.CRM.IContact,TimeLog.TLP.API.Proxy.CRM.V1_1.ContactHeader},TimeLog.TLP.API.Common.V1_1.IAddressAdapter,TimeLog.TLP.API.Common.V1_1.IEmployeeHeaderAdapter,TimeLog.TLP.API.CRM.V1_1.ICustomerHeaderAdapter,TimeLog.TLP.API.Common.V1_0.IAdapter{TimeLog.TLP.ProjectManagement.IProjectHeader,TimeLog.TLP.API.Proxy.ProjectManagement.V1_1.ProjectHeader},TimeLog.TLP.API.Common.V1_1.ICurrencyAdapter,TimeLog.TLP.API.Invoicing.V1_1.IInvoiceLineAdapter)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Invoicing.V1_1.InvoiceAdapter"/> class.
            </summary>
            <param name="contactAdapter">Contact adapter</param>
            <param name="addressAdapter">Address adapter</param>
            <param name="employeeAdapter">Employee adapter</param>
            <param name="customerAdapter">Customer adapater</param>
            <param name="projectAdapter">Project adapter</param>
            <param name="currencyAdapter">Currency adapter</param>
            <param name="invoiceLineAdapter">Invoice line adapter</param>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_1.InvoiceAdapter.DomainToApi(TimeLog.TLP.Invoicing.IInvoice)">
            <summary>
            Converts domain invoice to API invoice
            </summary>
            <param name="domain">Domain invoice</param>
            <returns>A Invoice object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Invoicing.V1_1.InvoicingService">
            <summary>
            Service for handling invoicing in TimeLog (released August 2013) 
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/Invoicing/V1_0/InvoicingService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/Invoicing/V1_0/InvoicingServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_1.InvoicingService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Invoicing.V1_1.InvoicingService"/> class.
            </summary>
            <param name="isSecure">Decide if the service is used over https or http</param>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_1.InvoicingService.GetInvoiceByID(System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets an invoice based on its ID
            </summary>
            <param name="id">Identifier of the invoice (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A invoice matching the identifier</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_1.InvoicingService.GetInvoiceByGUID(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets an invoice based on its GUID
            </summary>
            <param name="guid">Identifier of the invoice (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A invoice matching the identifier</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_1.InvoicingService.GetInvoiceSpecificationPDF(System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets an invoice specificate based on the invoice ID
            </summary>
            <param name="invoiceID">ID of the invoice (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A byte array containing the invoice specification pdf</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_1.InvoicingService.GetCreditNoteByID(System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a credit note based on its ID
            </summary>
            <param name="id">Identifier of the credit note (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A credit note matching the identifier</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_1.InvoicingService.GetCreditNoteByGUID(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a credit note based on its GUID
            </summary>
            <param name="guid">Identifier of the credit note (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A credit note matching the identifier</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_1.InvoicingService.MarkInvoiceAsChecked(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Marks a booked invoice as checked, usually because it has been paid
            </summary>
            <param name="guid">Identifier of the invoice (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A invoice matching the identifier</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_1.InvoicingService.UpdateExternalData(System.Guid,System.String,TimeLog.TLP.API.Proxy.Invoicing.V1_1.InvoiceState,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates the external invoice number and status on a invoice
            </summary>
            <param name="guid">Invoice identifier (Guid)</param>
            <param name="externalInvoiceNumber">New invoice number (string)</param>
            <param name="externalInvoiceStatus">New invoice status (InvoiceState)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A invoice matching the identifier</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_1.InvoicingService.GetInvoiceByExternalKey(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets an invoice based on the external key assigned
            </summary>
            <param name="externalKey">External invoice key (string)</param>
            <param name="systemName">Name of the external system (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A invoice matching the external key</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Invoicing.V1_1.InvoicingServiceSecure">
            <summary>
            Service for handling invoicing in TimeLog
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Invoicing.V1_0.InvoiceAdapter">
            <summary>
            Adapter for converting domain invoices to API invoices
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_0.InvoiceAdapter.#ctor(TimeLog.TLP.API.Common.V1_0.IAdapter{TimeLog.TLP.CRM.IContact,TimeLog.TLP.API.Proxy.CRM.V1_1.ContactHeader},TimeLog.TLP.API.Common.V1_1.IAddressAdapter,TimeLog.TLP.API.Common.V1_1.IEmployeeHeaderAdapter,TimeLog.TLP.API.CRM.V1_1.ICustomerHeaderAdapter,TimeLog.TLP.API.Common.V1_0.IAdapter{TimeLog.TLP.ProjectManagement.IProjectHeader,TimeLog.TLP.API.Proxy.ProjectManagement.V1_1.ProjectHeader},TimeLog.TLP.API.Common.V1_1.ICurrencyAdapter,TimeLog.TLP.API.Invoicing.V1_0.IInvoiceLineAdapter)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Invoicing.V1_0.InvoiceAdapter"/> class.
            </summary>
            <param name="contactAdapter">Contact adapter</param>
            <param name="addressAdapter">Address adapter</param>
            <param name="employeeAdapter">Employee adapter</param>
            <param name="customerAdapter">Customer adapater</param>
            <param name="projectAdapter">Project adapter</param>
            <param name="currencyAdapter">Currency adapter</param>
            <param name="invoiceLineAdapter">Invoice line adapter</param>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_0.InvoiceAdapter.DomainToApi(TimeLog.TLP.Invoicing.IInvoice)">
            <summary>
            Converts domain invoice to API invoice
            </summary>
            <param name="domain">Domain invoice</param>
            <returns>A Invoice object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Invoicing.V1_0.InvoicingService">
            <summary>
            Service for handling invoicing in TimeLog (released August 2013) - OBSOLETE
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/Invoicing/V1_0/InvoicingService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/Invoicing/V1_0/InvoicingServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_0.InvoicingService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Invoicing.V1_0.InvoicingService"/> class.
            </summary>
            <param name="isSecure">Decide if the service is used over https or http</param>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_0.InvoicingService.GetInvoiceByID(System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets an invoice based on its ID
            </summary>
            <param name="id">Identifier of the invoice (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A invoice matching the identifier</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_0.InvoicingService.GetInvoiceByGUID(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets an invoice based on its GUID
            </summary>
            <param name="guid">Identifier of the invoice (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A invoice matching the identifier</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_0.InvoicingService.GetInvoiceSpecificationPDF(System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets an invoice specificate based on the invoice ID
            </summary>
            <param name="invoiceID">ID of the invoice (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A byte array containing the invoice specification pdf</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_0.InvoicingService.GetCreditNoteByID(System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a credit note based on its ID
            </summary>
            <param name="id">Identifier of the credit note (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A credit note matching the identifier</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_0.InvoicingService.GetCreditNoteByGUID(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a credit note based on its GUID
            </summary>
            <param name="guid">Identifier of the credit note (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A credit note matching the identifier</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_0.InvoicingService.MarkInvoiceAsChecked(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Marks a booked invoice as checked, usually because it has been paid
            </summary>
            <param name="guid">Identifier of the invoice (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A invoice matching the identifier</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_0.InvoicingService.UpdateExternalData(System.Guid,System.String,TimeLog.TLP.API.Proxy.Invoicing.V1_0.InvoiceState,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Updates the external invoice number and status on a invoice
            </summary>
            <param name="guid">Invoice identifier (Guid)</param>
            <param name="externalInvoiceNumber">New invoice number (string)</param>
            <param name="externalInvoiceStatus">New invoice status (InvoiceState)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A invoice matching the identifier</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Invoicing.V1_0.InvoicingService.GetInvoiceByExternalKey(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets an invoice based on the external key assigned
            </summary>
            <param name="externalKey">External invoice key (string)</param>
            <param name="systemName">Name of the external system (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A invoice matching the external key</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Invoicing.V1_0.InvoicingServiceSecure">
            <summary>
            Service for handling invoicing in TimeLog
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Language.V1_0.LanguageService.GetLanguage(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of localization items related to an external system. All authenticated users
            have access to this method.
            </summary>
            <param name="externalSystemName">Name of the external system</param>
            <param name="lcid">LCID of the language to get (e.g. 1030 for Danish)</param>
            <param name="token">Security token associated with the request</param>
            <returns>A list of LanguageItem objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Language.V1_0.LanguageService.ExecuteMethodApi``2(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken,System.Func{System.Collections.Generic.IEnumerable{``1}},System.Func{``1,``0},System.String)">
            <summary>
            Executes the method API.
            </summary>
            <typeparam name="TReturnType">The type of the return type.</typeparam>
            <typeparam name="TMethodReturnType">The type of the method return type.</typeparam>
            <param name="token">The token.</param>
            <param name="apiMethodFunc">The API method function.</param>
            <param name="mappingFunc">The mapping function.</param>
            <param name="methodName">Name of the method.</param>
            <returns></returns>
        </member>
        <member name="T:TimeLog.TLP.API.Organisation.V1_7.OrganisationService">
            <summary>
            Exposes methods needed to handle organizational data through the API (released March 2015) 
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/Organisation/V1_6/OrganisationService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/Organisation/V1_6/OrganisationServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Organisation.V1_7.OrganisationService"/> class.
            </summary>
            <param name="isSecure">A value indicating whether the service should use SSL</param>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.GetEmployeesPaged(System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of employees in the system
            </summary>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 100. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.Employee"/>
            <returns>A list of employees</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.GetEmployeeByUsername(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets an employee based on username
            </summary>
            <param name="username">username to query for (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>A header employee object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.CreateEmployee(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates an employee into TimeLog
            </summary>
            <param name="employeeGuid">Employee unique identifier. Generate a new one for each employee (Guid)</param>
            <param name="username">The username of the new employee (string)</param>
            <param name="initials">The initials of the new employee (string)</param>
            <param name="firstname">Employee firstname (string)</param>
            <param name="lastname">Employee lastname (string)</param>
            <param name="employeeNo">Employee number (string)</param>
            <param name="email">Employee email address (string)</param>
            <param name="title">Employee title (string)</param>
            <param name="telephone">Telephone number (string)</param>
            <param name="mobile">Mobile telephone number (string)</param>
            <param name="normalWorkingTimeName">The name of the type of working time (string)</param>
            <param name="holidayCalendarName">The holiday calendar name (string)</param>
            <param name="allowanceName">The allowance legislation name (DK, SE or DE) (string)</param>
            <param name="employeeTypeName">The employee type name (string)</param>
            <param name="hourlyRateName">Standard hourly rate name of the employee (string)</param>
            <param name="costPriceName">Cost price name of the employee (string)</param>
            <param name="externalIdentifier">The external identifier (string)</param>
            <param name="departmentGuid">The department identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>Details of the new employee</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.CreateEmployeeNotification(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates a "A TimeLog account has been created for you"-email to a specific user. Normally executed as part of a user creation process.
            </summary>
            <param name="employeeGuid">Employee unique identifier. Generate a new one for each employee (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>Details of the new employee</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.UpdateEmployee(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates an employee.
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="username">The username of the new employee (string)</param>
            <param name="initials">The initials of the new employee (string)</param>
            <param name="firstname">Employee firstname (string)</param>
            <param name="lastname">Employee lastname (string)</param>
            <param name="employeeNo">Employee number (string)</param>
            <param name="email">Employee email address (string)</param>
            <param name="title">Employee title (string)</param>
            <param name="telephone">Telephone number (string)</param>
            <param name="mobile">Mobile telephone number (string)</param>
            <param name="normalWorkingTimeName">The name of the type of working time (string)</param>
            <param name="holidayCalendarName">The holiday calendar name (string)</param>
            <param name="allowanceName">The allowance legislation name (DK, SE or DE) (string)</param>
            <param name="employeeTypeName">The employee type name (string)</param>
            <param name="hourlyRateName">Standard hourly rate name of the employee (string)</param>
            <param name="costPriceName">Cost price name of the employee (string)</param>
            <param name="externalIdentifier">The external identifier (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.ActivateEmployee(System.Guid,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Activates an employee. This enables the employee to log in. Note that this also implies
            that you will be billed for this user on the next invoice. Effectived immediately, doesn't look a hired date
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="hiredDate">The date the employee was hired. Determines the flex calculation start date etc. (DateTime)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.ChangeEmployeeDepartment(System.Guid,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Changes the department of an employee.
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="departmentGuid">Department unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.DeactivateEmployee(System.Guid,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deactivates an employee. Effectived immediately, doesn't look a termination date
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="terminationDate">The termination date</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.GetDepartments(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the list of departments.
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.Department"/>
            <returns>A list of department objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.GetDepartmentByNo(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of departments based on department number
            </summary>
            <param name="departmentNo">Number to look up (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.Department"/>
            <returns>A list of departments</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.CreateDepartment(System.Guid,System.String,System.String,System.Guid,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates a department. The department is deactivated on creation.
            </summary>
            <param name="departmentGuid">Department unique identifier. Generate a new for each department (Guid)</param>
            <param name="name">Name of the department (string)</param>
            <param name="no">Number of the department (string)</param>
            <param name="parentDepartmentGuid">Parent department unique identifier. Use Guid.Empty to place it in the root (Guid)</param>
            <param name="departmentManagerGuid">Department manager, employee unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.Department"/>
            <returns>A department object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.UpdateDepartment(System.Guid,System.String,System.String,System.Guid,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates a department. This will also activate the department if already inactive.
            </summary>
            <param name="departmentGuid">Department unique identifier (Guid)</param>
            <param name="name">Name of the department (string)</param>
            <param name="no">Number of the department (string)</param>
            <param name="parentDepartmentGuid">Parent department unique identifier. Use Guid.Empty to place it in the root (Guid)</param>
            <param name="departmentManagerGuid">Department manager, employee unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.Department"/>
            <returns>A department object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.DeactivateDepartment(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deactivates a department.
            </summary>
            <param name="departmentGuid">Department unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.Department"/>
            <returns>A department object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.GetModules(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the list of modules.
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.Role"/>
            <returns>A list of Role objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.GetRoles(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the list of roles.
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.Role"/>
            <returns>A list of Role objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.GetEmployeeRoles(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the list of roles for an employee.
            </summary>
            <param name="employeeGuid">the guid of the employee</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.Role"/>
            <returns>A list of Role objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.AddModuleToEmployee(System.Guid,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Adds a module to an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="modulename">The name of the module (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.RemoveModuleFromEmployee(System.Guid,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Removes a module from employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="modulename">The name of the module (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.AddRoleToEmployeeByName(System.Guid,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Adds a role to an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="rolename">The name of the role (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.RemoveRoleFromEmployeeByName(System.Guid,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            removes a role from an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="rolename">The name of the role (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.AddRoleToEmployeeByGuid(System.Guid,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Adds a role to an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="roleGuid">The Guid of the role</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.RemoveRoleFromEmployeeByGuid(System.Guid,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            removes a role from an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="roleGuid">The Guid of the role </param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.AssignExternalLicenseTypeToEmployee(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            assigns external license type to an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.AssignStandardLicenseTypeToEmployee(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            assigns standard license type to an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_7.OrganisationService.AssignAdvancedLicenseTypeToEmployee(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            assigns advanced license type to an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_7.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Organisation.V1_7.OrganisationServiceSecure">
            <summary>
            Exposes methods needed to handle organizational data through the API.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Organisation.V1_6.OrganisationService">
            <summary>
            Exposes methods needed to handle organizational data through the API (released March 2015) - OBSOLETE 
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/Organisation/V1_6/OrganisationService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/Organisation/V1_6/OrganisationServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Organisation.V1_6.OrganisationService"/> class.
            </summary>
            <param name="isSecure">A value indicating whether the service should use SSL</param>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.GetEmployeesPaged(System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of employees in the system
            </summary>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 100. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.Employee"/>
            <returns>A list of employees</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.GetEmployeeByUsername(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets an employee based on username
            </summary>
            <param name="username">username to query for (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>A header employee object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.CreateEmployee(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates an employee into TimeLog
            </summary>
            <param name="employeeGuid">Employee unique identifier. Generate a new one for each employee (Guid)</param>
            <param name="username">The username of the new employee (string)</param>
            <param name="initials">The initials of the new employee (string)</param>
            <param name="firstname">Employee firstname (string)</param>
            <param name="lastname">Employee lastname (string)</param>
            <param name="employeeNo">Employee number (string)</param>
            <param name="email">Employee email address (string)</param>
            <param name="title">Employee title (string)</param>
            <param name="telephone">Telephone number (string)</param>
            <param name="mobile">Mobile telephone number (string)</param>
            <param name="normalWorkingTimeName">The name of the type of working time (string)</param>
            <param name="holidayCalendarName">The holiday calendar name (string)</param>
            <param name="allowanceName">The allowance legislation name (DK, SE or DE) (string)</param>
            <param name="employeeTypeName">The employee type name (string)</param>
            <param name="hourlyRateName">Standard hourly rate name of the employee (string)</param>
            <param name="costPriceName">Cost price name of the employee (string)</param>
            <param name="externalIdentifier">The external identifier (string)</param>
            <param name="departmentGuid">The department identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>Details of the new employee</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.CreateEmployeeNotification(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates a "A TimeLog account has been created for you"-email to a specific user. Normally executed as part of a user creation process.
            </summary>
            <param name="employeeGuid">Employee unique identifier. Generate a new one for each employee (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>Details of the new employee</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.UpdateEmployee(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates an employee.
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="username">The username of the new employee (string)</param>
            <param name="initials">The initials of the new employee (string)</param>
            <param name="firstname">Employee firstname (string)</param>
            <param name="lastname">Employee lastname (string)</param>
            <param name="employeeNo">Employee number (string)</param>
            <param name="email">Employee email address (string)</param>
            <param name="title">Employee title (string)</param>
            <param name="telephone">Telephone number (string)</param>
            <param name="mobile">Mobile telephone number (string)</param>
            <param name="normalWorkingTimeName">The name of the type of working time (string)</param>
            <param name="holidayCalendarName">The holiday calendar name (string)</param>
            <param name="allowanceName">The allowance legislation name (DK, SE or DE) (string)</param>
            <param name="employeeTypeName">The employee type name (string)</param>
            <param name="hourlyRateName">Standard hourly rate name of the employee (string)</param>
            <param name="costPriceName">Cost price name of the employee (string)</param>
            <param name="externalIdentifier">The external identifier (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.ActivateEmployee(System.Guid,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken,System.Nullable{System.Boolean})">
            <summary>
            Activates an employee. This enables the employee to log in. Note that this also implies
            that you will be billed for this user on the next invoice. Effectived immediately, doesn't look a hired date
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="hiredDate">The date the employee was hired. Determines the flex calculation start date etc. (DateTime)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <param name="sendActivationMail">Set to true if activation notification should be send to employee. Default false</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.ChangeEmployeeDepartment(System.Guid,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Changes the department of an employee.
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="departmentGuid">Department unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.DeactivateEmployee(System.Guid,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deactivates an employee. Effectived immediately, doesn't look a termination date
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="terminationDate">The termination date</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.GetDepartments(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the list of departments.
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.Department"/>
            <returns>A list of department objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.GetDepartmentByNo(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of departments based on department number
            </summary>
            <param name="departmentNo">Number to look up (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.Department"/>
            <returns>A list of departments</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.CreateDepartment(System.Guid,System.String,System.String,System.Guid,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates a department. The department is deactivated on creation.
            </summary>
            <param name="departmentGuid">Department unique identifier. Generate a new for each department (Guid)</param>
            <param name="name">Name of the department (string)</param>
            <param name="no">Number of the department (string)</param>
            <param name="parentDepartmentGuid">Parent department unique identifier. Use Guid.Empty to place it in the root (Guid)</param>
            <param name="departmentManagerGuid">Department manager, employee unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.Department"/>
            <returns>A department object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.UpdateDepartment(System.Guid,System.String,System.String,System.Guid,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates a department. This will also activate the department if already inactive.
            </summary>
            <param name="departmentGuid">Department unique identifier (Guid)</param>
            <param name="name">Name of the department (string)</param>
            <param name="no">Number of the department (string)</param>
            <param name="parentDepartmentGuid">Parent department unique identifier. Use Guid.Empty to place it in the root (Guid)</param>
            <param name="departmentManagerGuid">Department manager, employee unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.Department"/>
            <returns>A department object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.DeactivateDepartment(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deactivates a department.
            </summary>
            <param name="departmentGuid">Department unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.Department"/>
            <returns>A department object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.GetModules(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the list of modules.
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.Role"/>
            <returns>A list of Role objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.GetRoles(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the list of roles.
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.Role"/>
            <returns>A list of Role objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.GetEmployeeRoles(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the list of roles for an employee.
            </summary>
            <param name="employeeGuid">the guid of the employee</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.Role"/>
            <returns>A list of Role objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.AddModuleToEmployee(System.Guid,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Adds a module to an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="modulename">The name of the module (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.RemoveModuleFromEmployee(System.Guid,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Removes a module from employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="modulename">The name of the module (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.AddRoleToEmployeeByName(System.Guid,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Adds a role to an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="rolename">The name of the role (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.RemoveRoleFromEmployeeByName(System.Guid,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            removes a role from an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="rolename">The name of the role (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.AddRoleToEmployeeByGuid(System.Guid,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Adds a role to an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="roleGuid">The Guid of the role</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.RemoveRoleFromEmployeeByGuid(System.Guid,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            removes a role from an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="roleGuid">The Guid of the role </param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.AssignExternalLicenseTypeToEmployee(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            assigns external license type to an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.AssignStandardLicenseTypeToEmployee(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            assigns standard license type to an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_6.OrganisationService.AssignAdvancedLicenseTypeToEmployee(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            assigns advanced license type to an employee
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_6.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Organisation.V1_6.OrganisationServiceSecure">
            <summary>
            Exposes methods needed to handle organizational data through the API.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Organisation.V1_3.OrganisationService">
            <summary>
            OBSOLETE Exposes methods needed to handle organizational data through the API. (released August 2013) 
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_3.OrganisationService.GetDepartmentByNo(System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of departments based on department number
            </summary>
            <param name="departmentNo">Number to look up (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of departments</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_3.OrganisationService.InsertEmployee(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Inserts an employee into TimeLog
            </summary>
            <param name="initials">The initials of the new employee (string)</param>
            <param name="firstname">The firstname (string)</param>
            <param name="lastname">The lastname (string)</param>
            <param name="password">The password (string)</param>
            <param name="employeeNo">The employee number (string)</param>
            <param name="email">The email (string)</param>
            <param name="normalWorkingTime">The name of the type of working time (string)</param>
            <param name="holidayCalendarName">The holiday calendar name (string)</param>
            <param name="allowanceName">The allowance legislation (string)</param>
            <param name="department">The department name (string)</param>
            <param name="employeeType">The employee type (string)</param>
            <param name="accesslevel">The access level: No access [0], external [5], project member [10], project manager [20], senior manager [30] or system administrator [40] (int)</param>
            <param name="engagementDate">The date of engagement (DateTime)</param>
            <param name="city">The city (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Details of the new employee</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_3.OrganisationService.GetEmployeeHeaderByInitials(System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets an employee based on initials
            </summary>
            <param name="initials">Initials to query for (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A header employee object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_3.OrganisationService.GetEmployees(TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of employees in the system
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of employees</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Organisation.V1_3.OrganisationServiceSecure">
            <summary>
            Exposes methods needed to handle organizational data through the API.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Organisation.V1_4.OrganisationService">
            <summary>
            OBSOLETE Exposes methods needed to handle organizational data through the API (released October 2013)
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_4.OrganisationService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Organisation.V1_4.OrganisationService"/> class.
            </summary>
            <param name="isSecure">A value indicating whether the service should use SSL</param>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_4.OrganisationService.GetDepartmentByNo(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of departments based on department number
            </summary>
            <param name="departmentNo">Number to look up (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of departments</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_4.OrganisationService.InsertEmployee(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Int32,System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Inserts an employee into TimeLog
            </summary>
            <param name="initials">The initials of the new employee (string)</param>
            <param name="firstname">The firstname (string)</param>
            <param name="lastname">The lastname (string)</param>
            <param name="password">The password (string)</param>
            <param name="employeeNo">The employee number (string)</param>
            <param name="email">The email (string)</param>
            <param name="normalWorkingTime">The name of the type of working time (string)</param>
            <param name="holidayCalendarName">The holiday calendar name (string)</param>
            <param name="allowanceLegislation">The allowance legislation (DK, SE or DE) (string)</param>
            <param name="department">The department name (string)</param>
            <param name="employeeType">The employee type (string)</param>
            <param name="accesslevel">The access level: No access [0], external [5], project member [10], project manager [20], senior manager [30] or system administrator [40] (int)</param>
            <param name="engagementDate">The date of engagement (DateTime)</param>
            <param name="city">The city (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>Details of the new employee</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_4.OrganisationService.GetEmployeeHeaderByInitials(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets an employee based on initials
            </summary>
            <param name="initials">Initials to query for (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A header employee object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_4.OrganisationService.GetEmployeesPaged(System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of employees in the system
            </summary>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 100. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_4.Employee"/>
            <returns>A list of employees</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Organisation.V1_4.OrganisationServiceSecure">
            <summary>
            Exposes methods needed to handle organizational data through the API.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Organisation.V1_5.OrganisationService">
            <summary>
            Exposes methods needed to handle organizational data through the API (released February 2014) - OBSOLETE 
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/Organisation/V1_5/OrganisationService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/Organisation/V1_5/OrganisationServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Organisation.V1_5.OrganisationService"/> class.
            </summary>
            <param name="isSecure">A value indicating whether the service should use SSL</param>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.GetEmployeesPaged(System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of employees in the system
            </summary>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 100. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_5.Employee"/>
            <returns>A list of employees</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.GetEmployeeByInitials(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets an employee based on initials
            </summary>
            <param name="initials">Initials to query for (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_5.EmployeeHeader"/>
            <returns>A header employee object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.CreateEmployee(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates an employee into TimeLog
            </summary>
            <param name="employeeGuid">Employee unique identifier. Generate a new one for each employee (Guid)</param>
            <param name="initials">The initials of the new employee (string)</param>
            <param name="firstname">Employee firstname (string)</param>
            <param name="lastname">Employee lastname (string)</param>
            <param name="employeeNo">Employee number (string)</param>
            <param name="email">Employee email address (string)</param>
            <param name="title">Employee title (string)</param>
            <param name="telephone">Telephone number (string)</param>
            <param name="mobile">Mobile telephone number (string)</param>
            <param name="normalWorkingTimeName">The name of the type of working time (string)</param>
            <param name="holidayCalendarName">The holiday calendar name (string)</param>
            <param name="allowanceName">The allowance legislation name (DK, SE or DE) (string)</param>
            <param name="employeeTypeName">The employee type name (string)</param>
            <param name="hourlyRateName">Standard hourly rate name of the employee (string)</param>
            <param name="costPriceName">Cost price name of the employee (string)</param>
            <param name="externalIdentifier">The external identifier (string)</param>
            <param name="password">The password (string)</param>
            <param name="departmentGuid">The department identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_5.EmployeeHeader"/>
            <returns>Details of the new employee</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.CreateEmployeeNotification(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates a "A TimeLog account has been created for you"-email to a specific user. Normally executed as part of a user creation process.
            </summary>
            <param name="employeeGuid">Employee unique identifier. Generate a new one for each employee (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_5.EmployeeHeader"/>
            <returns>Details of the new employee</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.UpdateEmployee(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates an employee.
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="initials">The initials of the new employee (string)</param>
            <param name="firstname">Employee firstname (string)</param>
            <param name="lastname">Employee lastname (string)</param>
            <param name="employeeNo">Employee number (string)</param>
            <param name="email">Employee email address (string)</param>
            <param name="title">Employee title (string)</param>
            <param name="telephone">Telephone number (string)</param>
            <param name="mobile">Mobile telephone number (string)</param>
            <param name="normalWorkingTimeName">The name of the type of working time (string)</param>
            <param name="holidayCalendarName">The holiday calendar name (string)</param>
            <param name="allowanceName">The allowance legislation name (DK, SE or DE) (string)</param>
            <param name="employeeTypeName">The employee type name (string)</param>
            <param name="hourlyRateName">Standard hourly rate name of the employee (string)</param>
            <param name="costPriceName">Cost price name of the employee (string)</param>
            <param name="externalIdentifier">The external identifier (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_5.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.ActivateEmployee(System.Guid,System.Int32,System.Boolean,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Activates an employee. This enables the employee to log in. Note that this also implies
            that you will be billed for this user on the next invoice. Effectived immediately, doesn't look a hired date
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="securityLevel">Security level for the employee. External [5], Project member [10], Project manager [20], Manager [30], System administrator [40] (int)</param>
            <param name="hasCoordinatorRole">A value indicating whether this employee should have the coordinator role (bool)</param>
            <param name="hiredDate">The date the employee was hired. Determines the flex calculation start date etc. (DateTime)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_5.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.ChangeEmployeeSecurityLevel(System.Guid,System.Int32,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Changes the security level of an employee. The employee is effectived immediately.
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="securityLevel">Security level for the employee. External [5], Project member [10], Project manager [20], Manager [30], System administrator [40] (int)</param>
            <param name="hasCoordinatorRole">A value indicating whether this employee should have the coordinator role (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_5.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.ChangeEmployeeDepartment(System.Guid,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Changes the department of an employee.
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="departmentGuid">Department unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_5.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.DeactivateEmployee(System.Guid,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deactivates an employee. Effectived immediately, doesn't look a termination date
            </summary>
            <param name="employeeGuid">Employee unique identifier (Guid)</param>
            <param name="terminationDate">The termination date</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_5.EmployeeHeader"/>
            <returns>An employee header object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.GetDepartments(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the list of departments.
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_5.Department"/>
            <returns>A list of department objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.GetDepartmentByNo(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of departments based on department number
            </summary>
            <param name="departmentNo">Number to look up (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_5.Department"/>
            <returns>A list of departments</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.CreateDepartment(System.Guid,System.String,System.String,System.Guid,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates a department. The department is deactivated on creation.
            </summary>
            <param name="departmentGuid">Department unique identifier. Generate a new for each department (Guid)</param>
            <param name="name">Name of the department (string)</param>
            <param name="no">Number of the department (string)</param>
            <param name="parentDepartmentGuid">Parent department unique identifier. Use Guid.Empty to place it in the root (Guid)</param>
            <param name="departmentManagerGuid">Department manager, employee unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_5.Department"/>
            <returns>A department object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.UpdateDepartment(System.Guid,System.String,System.String,System.Guid,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates a department. This will also activate the department if already inactive.
            </summary>
            <param name="departmentGuid">Department unique identifier (Guid)</param>
            <param name="name">Name of the department (string)</param>
            <param name="no">Number of the department (string)</param>
            <param name="parentDepartmentGuid">Parent department unique identifier. Use Guid.Empty to place it in the root (Guid)</param>
            <param name="departmentManagerGuid">Department manager, employee unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_5.Department"/>
            <returns>A department object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.DeactivateDepartment(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deactivates a department.
            </summary>
            <param name="departmentGuid">Department unique identifier (Guid)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Organisation.V1_5.Department"/>
            <returns>A department object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Organisation.V1_5.OrganisationService.GetEmployeeTypes(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a simple list of available employee types. NOT IMPLEMENTED YET.
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of strings</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Organisation.V1_5.OrganisationServiceSecure">
            <summary>
            Exposes methods needed to handle organizational data through the API.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_3.ProjectManagementService">
            <summary>
            Service for handling projects and time registrations in TimeLog (released July 2012) - OBSOLETE
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_3.ProjectManagementService.GetTasksAllocatedToEmployee(System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of tasks allocated to a specific employee
            </summary>
            <param name="initials">Initials of the employee to fetch allocations for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks the users is allocated to</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_3.ProjectManagementService.GetTasksBySearchText(System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of tasks based on the search criteria (task name, customer name, customer number, project name and project number)
            </summary>
            <param name="criteria">Criteria to search for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks that matches the search criteria</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_3.ProjectManagementService.GetEmployeeWork(System.String,System.DateTime,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of employee registrations within a given timespan
            </summary>
            <param name="initials">Initials of the employee to fetch details from</param>
            <param name="startDate">Start date for the timespan</param>
            <param name="endDate">End date for the timespan</param>
            <param name="token">Security token of the current user</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken"/>
            <returns>A list of employee WorkUnits within the required timespan</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_3.ProjectManagementService.InsertWork(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_3.WorkUnit},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Inserts one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials, Duration, StartDateTime, EndDateTime and Description</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits inserted with additional information about task and project</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_3.ProjectManagementService.UpdateWork(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_3.WorkUnit},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Updates one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials, Duration, StartDateTime, EndDateTime and Description</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits updated with additional information about task and project</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_3.ProjectManagementService.DeleteWork(System.Collections.Generic.List{System.Guid},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Deletes one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits succesfully deleted</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_3.ProjectManagementService.CreateProjectFromTemplate(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Create a project from a project template
            </summary>
            <param name="projectTemplateName">Name of the TLP project template (string)</param>
            <param name="projectName">Name of the new project (string)</param>
            <param name="projectNo">Project number of the new project (string)</param>
            <param name="customerName">Customer name (string)</param>
            <param name="projectManagerInitials">Project manager initials (string)</param>
            <param name="accountManagerInitials">Account manager initials (string)</param>
            <param name="handledByDepartmentNo">Department number responsible for handling (string)</param>
            <param name="orderedByDepartmentNo">Department number behind the order (string)</param>
            <param name="useProjectNumberSeries">Choose to use TLP auto or own number series (bool)</param>
            <param name="useTasksAndMileStonesFromTemplate">Choose wether to copy tasks and milestones (bool)</param>
            <param name="useResourceGroupFromTemplate">Choose wether to copy resource group (bool)</param>
            <param name="useAllocationsFromTemplate">Choose wether to copy task and milestone allocations (bool)</param>
            <param name="usePaymentPlanFromTemplate">Choose wether to copy payment plans (bool)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>The project created based on the template</returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_3.ProjectManagementService.ProjectThenSortOrderComparer">
            <summary>
            Sort function that will order list by ProjectName, ProjectNo, ProjectID, TaskSortorder
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TimeLog.TLP.API.ProjectManagement.V1_3.TaskAdapter.GetCustomFieldXml(TimeLog.TLP.ProjectManagement.ITask)" -->
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_2.ProjectManagementService.GetTasksAllocatedToEmployee(System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of tasks allocated to a specific employee
            </summary>
            <param name="initials">Initials of the employee to fetch allocations for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks the users is allocated to</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_2.ProjectManagementService.GetTasksBySearchText(System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of tasks based on the search criteria
            </summary>
            <param name="criteria">Criteria to search for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks that matches the search criteria</returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_2.ProjectManagementService.ProjectThenSortOrderComparer">
            <summary>
            Sort function that will order list by ProjectName, ProjectNo, ProjectID, TaskSortorder
            </summary>
            
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_2.ProjectManagementService.GetEmployeeWork(System.String,System.DateTime,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of employee registrations within a given timespan
            </summary>
            <param name="initials">Initials of the employee to fetch details from</param>
            <param name="startDate">Start date for the timespan</param>
            <param name="endDate">End date for the timespan</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of employee WorkUnits within the required timespan</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_2.ProjectManagementService.InsertWork(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_2.WorkUnit},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Inserts one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials, Duration, StartDateTime, EndDateTime and Description</param>
            <param name="source">3 = Tracker</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits inserted with additional information about task and project</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_2.ProjectManagementService.UpdateWork(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_2.WorkUnit},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Updates one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials, Duration, StartDateTime, EndDateTime and Description</param>
            <param name="source">3 = Tracker</param>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits updated with additional information about task and project</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_2.ProjectManagementService.DeleteWork(System.Collections.Generic.List{System.Guid},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Deletes one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials</param>
            <param name="source">3 = Tracker</param>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits succesfully deleted</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_2.ProjectManagementService.CreateProjectFromTemplate(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Create a project from a project template
            </summary>
            <param name="projectTemplateName">Name of the TLP project template (string)</param>
            <param name="projectName">Name of the new project (string)</param>
            <param name="projectNo">Project number of the new project (string)</param>
            <param name="customerName">Customer name (string)</param>
            <param name="projectManagerInitials">Project manager initials (string)</param>
            <param name="accountManagerInitials">Account manager initials (string)</param>
            <param name="handledByDepartmentNo">Department number responsible for handling (string)</param>
            <param name="orderedByDepartmentNo">Department number behind the order (string)</param>
            <param name="useProjectNumberSeries">Choose to use TLP auto or own number series (bool)</param>
            <param name="useTasksAndMileStonesFromTemplate">Choose wether to copy tasks and milestones (bool)</param>
            <param name="useResourceGroupFromTemplate">Choose wether to copy resource group (bool)</param>
            <param name="useAllocationsFromTemplate">Choose wether to copy task and milestone allocations (bool)</param>
            <param name="usePaymentPlanFromTemplate">Choose wether to copy payment plans (bool)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>The project created based on the template</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TimeLog.TLP.API.ProjectManagement.V1_2.TaskAdapter.GetCustomFieldXml(TimeLog.TLP.ProjectManagement.ITask)" -->
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_1.ProjectAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_1.Project)">
            <summary>
            Maps a API project to a Domain project. 
            The Details sections is not mapped. 
            </summary>
            <param name="apiProject"></param>
            <returns></returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_1.ProjectManagementService.ProjectThenSortOrderComparer">
            <summary>
            Sort function that will order list by ProjectName, ProjectNo, ProjectID, TaskSortorder
            </summary>
            
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_1.ProjectManagementService.GetEmployeeWork(System.String,System.DateTime,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Return all work, on the employee in the given period
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_1.ProjectManagementService.InsertWork(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_1.WorkUnit},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            
            </summary>
            <param name="work"></param>
            <param name="source">3 = Tracker</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService">
            <summary>
            Service for handling projects and time registrations in TimeLog (released April 2013) - OBSOLETE
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/ProjectManagement/V1_4/ProjectManagementService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/ProjectManagement/V1_4/ProjectManagementServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService"/> class.
            </summary>
            <param name="isSecure">Indicate whether the connection uses SSL</param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.GetTasksAllocatedToEmployee(System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of tasks allocated to a specific employee
            </summary>
            <param name="initials">Initials of the employee to fetch allocations for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks the users is allocated to</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.GetTasksBySearchText(System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of tasks based on the search criteria
            </summary>
            <param name="criteria">Criteria to search for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks that matches the search criteria</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.GetEmployeeWork(System.String,System.DateTime,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of employee registrations within a given timespan
            </summary>
            <param name="initials">Initials of the employee to fetch details from</param>
            <param name="startDate">Start date for the timespan</param>
            <param name="endDate">End date for the timespan</param>
            <param name="token">Security token of the current user</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken"/>
            <returns>A list of employee WorkUnits within the required timespan</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.InsertWork(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_4.WorkUnit},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Inserts one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials, Duration, StartDateTime, EndDateTime and Description</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits inserted with additional information about task and project</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.UpdateWork(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_4.WorkUnit},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Updates one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials, Duration, StartDateTime, EndDateTime and Description</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits updated with additional information about task and project</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.DeleteWork(System.Collections.Generic.List{System.Guid},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Deletes one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits succesfully deleted</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.GetAllocationsToEmployee(System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of allocations for an employee
            </summary>
            <param name="initials">Initials of the employee (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of Allocation objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.InsertAllocation(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_4.Allocation},TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Inserts allocations for an employee to a task
            </summary>
            <param name="allocations">A list of allocations to insert (List&lt;Allocation&gt;)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of created Allocation objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.CreateProjectFromTemplate(System.String,System.String,System.String,System.String,System.Guid,System.Guid,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Create a project from a project template
            </summary>
            <param name="projectTemplateName">Name of the TLP project template (string)</param>
            <param name="projectName">Name of the new project (string)</param>
            <param name="projectNo">Project number of the new project (string)</param>
            <param name="customerName">Customer name (string)</param>
            <param name="priceListID">Unit_Price list identifier (guid)</param>
            <param name="priceGroupID">Project group identifier (guid)</param>
            <param name="projectManagerInitials">Project manager initials (string)</param>
            <param name="accountManagerInitials">Account manager initials (string)</param>
            <param name="handledByDepartmentNo">Department number responsible for handling (string)</param>
            <param name="orderedByDepartmentNo">Department number behind the order (string)</param>
            <param name="useProjectNumberSeries">Choose to use TLP auto or own number series (bool)</param>
            <param name="useTasksAndMileStonesFromTemplate">Choose wether to copy tasks and milestones (bool)</param>
            <param name="useResourceGroupFromTemplate">Choose wether to copy resource group (bool)</param>
            <param name="useAllocationsFromTemplate">Choose wether to copy task and milestone allocations (bool)</param>
            <param name="usePaymentPlanFromTemplate">Choose wether to copy payment plans (bool)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>The project created based on the template</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.UpdateProject(TimeLog.TLP.API.Proxy.ProjectManagement.V1_4.Project,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Updates project details
            </summary>
            <param name="project">The project object (Project)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>The updated project object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.GetTaskByTaskNo(System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of tasks based on the task number
            </summary>
            <param name="taskNo">Task number (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of Task objects</returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.ProjectThenSortOrderComparer">
            <summary>
            Sort function that will order list by ProjectName, ProjectNo, ProjectID, TaskSortorder
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.GetWorkPaged(System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a paged list of work units in a flat format including all details.
            </summary>
            <param name="initials">Provide initials to only get work units from one employee, otherwise use an empty string (string)</param>
            <param name="startDate">Date to start fetching work units from (DateTime)</param>
            <param name="endDate">Date to fetching work units to (DateTime)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_4.WorkUnitFlat"/>
            <returns>A list of work units in a flat format</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.GetWorkChangesPaged(System.String,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a paged list of work unit changes in a flat format including all details.
            Note that this feed includes all changes. 
            </summary>
            <param name="initials">Provide initials to only get work units from one employee, otherwise use an empty string (string)</param>
            <param name="registrationStartDate">Date of registration to start fetching work units from (DateTime)</param>
            <param name="registrationEndDate">Date of registration to fetching work units to (DateTime)</param>
            <param name="changeStartDate">Date of change to start fetching work units from (DateTime)</param>
            <param name="changeEndDate">Date of change to fetching work units to (DateTime)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <remarks>
            <para>For deleted work units, only the data action
            and the work unit guid is available. This is also true for creation or update actions
            with a later delete action. Read them in ascending order by action date.</para>
            <para>Example: If today is Jan 6th and a user adds a new registration for work carried out on Jan 3rd.
            Then Jan 6th is the change-date and Jan 3rd is the registration-date. If the user edits the same registration
            on Jan 7th, then both changes will be returned (if both are within the change-date-interval).</para></remarks>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_4.WorkUnitFlat"/>
            <returns>A list of work units in a flat format</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementService.GetTasksBySearchTextWithoutFinancial(System.String,TimeLog.TLP.API.Proxy.Security.V1_1.SecurityToken)">
            <summary>
            Gets a list of tasks based on the search criteria - without financial data
            </summary>
            <param name="criteria">Criteria to search for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks that matches the search criteria</returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_4.ProjectManagementServiceSecure">
            <summary>
            Service for handling projects and time registrations in TimeLog (released April 2013)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TimeLog.TLP.API.ProjectManagement.V1_4.TaskAdapter.GetCustomFieldXml(TimeLog.TLP.ProjectManagement.ITask)" -->
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService">
            <summary>
            Service for handling projects and time registrations in TimeLog (released January 2014) - OBSOLETE
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/ProjectManagement/V1_5/ProjectManagementService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/ProjectManagement/V1_5/ProjectManagementServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService"/> class.
            </summary>
            <param name="isSecure">Indicate whether the connection uses SSL</param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.GetTasksAllocatedToEmployee(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of tasks allocated to a specific employee
            </summary>
            <param name="initials">Initials of the employee to fetch allocations for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks the users is allocated to</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.GetTasksBySearchText(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of tasks based on the search criteria
            </summary>
            <param name="criteria">Criteria to search for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks that matches the search criteria</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.GetEmployeeWork(System.String,System.DateTime,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of employee registrations within a given timespan
            </summary>
            <param name="initials">Initials of the employee to fetch details from</param>
            <param name="startDate">Start date for the timespan</param>
            <param name="endDate">End date for the timespan</param>
            <param name="token">Security token of the current user</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken"/>
            <returns>A list of employee WorkUnits within the required timespan</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.InsertWork(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_5.WorkUnit},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Inserts one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials, Duration, StartDateTime, EndDateTime and Description</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits inserted with additional information about task and project</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.UpdateWork(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_5.WorkUnit},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials, Duration, StartDateTime, EndDateTime and Description</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits updated with additional information about task and project</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.DeleteWork(System.Collections.Generic.List{System.Guid},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deletes one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits succesfully deleted</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.GetAllocationsToEmployee(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of allocations for an employee
            </summary>
            <param name="initials">Initials of the employee (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of Allocation objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.InsertAllocation(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_5.Allocation},TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Inserts allocations for an employee to a task
            </summary>
            <param name="allocations">A list of allocations to insert (List&lt;Allocation&gt;)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of created Allocation objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.CreateProjectFromTemplate(System.String,System.String,System.String,System.String,System.Guid,System.Guid,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Create a project from a project template
            </summary>
            <param name="projectTemplateName">Name of the TLP project template (string)</param>
            <param name="projectName">Name of the new project (string)</param>
            <param name="projectNo">Project number of the new project (string)</param>
            <param name="customerName">Customer name (string)</param>
            <param name="priceListID">Unit_Price list identifier (guid)</param>
            <param name="priceGroupID">Project group identifier (guid)</param>
            <param name="projectManagerInitials">Project manager initials (string)</param>
            <param name="accountManagerInitials">Account manager initials (string)</param>
            <param name="handledByDepartmentNo">Department number responsible for handling (string)</param>
            <param name="orderedByDepartmentNo">Department number behind the order (string)</param>
            <param name="useProjectNumberSeries">Choose to use TLP auto or own number series (bool)</param>
            <param name="useTasksAndMileStonesFromTemplate">Choose wether to copy tasks and milestones (bool)</param>
            <param name="useResourceGroupFromTemplate">Choose wether to copy resource group (bool)</param>
            <param name="useAllocationsFromTemplate">Choose wether to copy task and milestone allocations (bool)</param>
            <param name="usePaymentPlanFromTemplate">Choose wether to copy payment plans (bool)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>The project created based on the template</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.UpdateProject(TimeLog.TLP.API.Proxy.ProjectManagement.V1_5.Project,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates project details
            </summary>
            <param name="project">The project object (Project)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>The updated project object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.GetTaskByTaskNo(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of tasks based on the task number
            </summary>
            <param name="taskNo">Task number (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of Task objects</returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.ProjectThenSortOrderComparer">
            <summary>
            Sort function that will order list by ProjectName, ProjectNo, ProjectID, TaskSortorder
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.GetWorkPaged(System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a paged list of work units in a flat format including all details.
            </summary>
            <param name="initials">Provide initials to only get work units from one employee, otherwise use an empty string (string)</param>
            <param name="startDate">Date to start fetching work units from (DateTime)</param>
            <param name="endDate">Date to fetching work units to (DateTime)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_5.WorkUnitFlat"/>
            <remarks>Security requirements: System administrator</remarks>
            <returns>A list of work units in a flat format</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.GetWorkPagedWithExternalIds(System.String,System.Int32,System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a paged list of work units in a flat format including all details and external IDs.
            </summary>
            <param name="systemName">Name of the external system (string)</param>
            <param name="approvalLevel">Approval level (int)</param>
            <param name="initials">Provide initials to only get work units from one employee, otherwise use an empty string (string)</param>
            <param name="startDate">Date to start fetching work units from (DateTime)</param>
            <param name="endDate">Date to fetching work units to (DateTime)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <remarks>Security requirements: System administrator</remarks>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_5.WorkUnitFlatExternal"/>
            <returns>A list of work units in a flat format</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.GetWorkChangesPaged(System.String,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a paged list of work unit changes in a flat format including all details.
            Note that this feed includes all changes and the change log is only available 
            for the last 3 months. No log data is available before January 1st 2014. 
            </summary>
            <param name="initials">Provide initials to only get work units from one employee, otherwise use an empty string (string)</param>
            <param name="registrationStartDate">Date of registration to start fetching work units from (DateTime)</param>
            <param name="registrationEndDate">Date of registration to fetching work units to (DateTime)</param>
            <param name="changeStartDate">Date of change to start fetching work units from (DateTime)</param>
            <param name="changeEndDate">Date of change to fetching work units to (DateTime)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <remarks>
            <para>For deleted work units, only the data action
            and the work unit guid is available. This is also true for creation or update actions
            with a later delete action. Read them in ascending order by action date.</para>
            <para>Example: If today is Jan 6th and a user adds a new registration for work carried out on Jan 3rd.
            Then Jan 6th is the change-date and Jan 3rd is the registration-date. If the user edits the same registration
            on Jan 7th, then both changes will be returned (if both are within the change-date-interval).</para>
            <para>Security requirements: System administrator</para>
            </remarks>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_5.WorkUnitFlat"/>
            <returns>A list of work units in a flat format</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.GetProjectTasksPaged(System.Guid,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a paged list of tasks in a flat format including all details.
            </summary>
            <param name="projectGuid">Provide project unique id to only get tasks from that project, otherwise provide Guid.Empty (Guid)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_5.ProjectTaskFlat"/>
            <returns>A list of tasks in a flat format</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementService.GetTasksBySearchTextWithoutFinancial(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of tasks based on the search criteria - without financial data
            </summary>
            <param name="criteria">Criteria to search for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks that matches the search criteria</returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_5.ProjectManagementServiceSecure">
            <summary>
            Service for handling projects and time registrations in TimeLog (released January 2014)
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:TimeLog.TLP.API.ProjectManagement.V1_5.TaskAdapter.GetCustomFieldXml(TimeLog.TLP.ProjectManagement.ITask)" -->
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_7.AllocationAdapter">
            <summary>
            The allocation adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_7.AllocationAdapter._AllocationManager">
            <summary>
            The _ allocation manager.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_7.AllocationAdapter._ValidateInitials">
            <summary>
            The _ validate initials.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.AllocationAdapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_7.AllocationAdapter"/> class.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.AllocationAdapter.#ctor(TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.Common.IEmployee})">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_7.AllocationAdapter"/> class.
            </summary>
            <param name="validateEmployeeInitials">
            The validate employee initials.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.AllocationAdapter.TimeLog#TLP#API#Common#V1_0#IAdapter{TimeLog#TLP#ProjectManagement#IAllocation,TimeLog#TLP#API#Proxy#ProjectManagement#V1_7#Allocation}#DomainToApi(TimeLog.TLP.ProjectManagement.IAllocation)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Allocation"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.AllocationAdapter.TimeLog#TLP#API#ProjectManagement#V1_7#IAllocationAdapter#ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Allocation,TimeLog.TLP.ProjectManagement.IAllocation)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.ProjectManagement.IAllocation"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_7.IAllocationAdapter">
            <summary>
            The AllocationAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.IAllocationAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Allocation,TimeLog.TLP.ProjectManagement.IAllocation)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.ProjectManagement.IAllocation"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_7.IProjectAdapter">
            <summary>
            The ProjectAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.IProjectAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Project,TimeLog.TLP.ProjectManagement.IProject)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="existingProject">
            The existing project.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.IProjectAdapter.DomainToApi(TimeLog.TLP.ProjectManagement.IProject)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Project"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_7.ITaskAdapter">
            <summary>
            The TaskAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ITaskAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Task,TimeLog.TLP.ProjectManagement.ITask)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="existingTask">
            The existing task.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.ProjectManagement.ITask"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ITaskAdapter.DataRowToApi(System.Data.DataRow)">
            <summary>
            The data row to api.
            </summary>
            <param name="row">
            The row.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.ProjectTaskFlat"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_7.IWorkUnitAdapter">
            <summary>
            The WorkUnitAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.IWorkUnitAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.WorkUnit,System.Boolean,TimeLog.TLP.Common.IViolation@)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="violation">
            The violation.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.TimeRegistration.ITimeRegistration"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.IWorkUnitAdapter.ApiToDomain(System.Guid)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.ProjectManagement.IWorkUnit"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.IWorkUnitAdapter.DataRowToApi(System.Data.DataRow)">
            <summary>
            The data row to api.
            </summary>
            <param name="row">
            The row.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.WorkUnitFlat"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.IWorkUnitAdapter.DataRowExternalToApi(System.Data.DataRow)">
            <summary>
            The data row external to api.
            </summary>
            <param name="row">
            The row.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.WorkUnitFlatExternal"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectAdapter">
            <summary>
            The project adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectAdapter._taskAdapter">
            <summary>
            The _task adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectAdapter._customerAdapter">
            <summary>
            The _customer adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectAdapter.#ctor(TimeLog.TLP.API.Common.V1_0.IAdapter{TimeLog.TLP.ProjectManagement.ITaskHeader,TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.TaskHeader},TimeLog.TLP.API.CRM.V1_2.ICustomerHeaderAdapter)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectAdapter"/> class.
            </summary>
            <param name="taskAdapter">
            The task adapter.
            </param>
            <param name="customerAdapter">
            The customer adapter.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectAdapter.DomainToApi(TimeLog.TLP.ProjectManagement.IProject)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Project"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Project,TimeLog.TLP.ProjectManagement.IProject)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="existingProject">
            The existing project.
            </param>
            <exception cref="T:System.NullReferenceException">
            </exception>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectAdapter.AddTypeNameToApi(TimeLog.TLP.ProjectManagement.IProject,TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Project)">
            <summary>
            The add type name to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <param name="project">
            The project.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectAdapter.AddCategoryNameToApi(TimeLog.TLP.ProjectManagement.IProject,TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Project)">
            <summary>
            The add category name to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <param name="project">
            The project.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectAdapter.GetProjectStageByIDFromName(System.String)">
            <summary>
            The get project stage by id from name.
            </summary>
            <param name="name">
            The name.
            </param>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectAdapter.EscapeLikeValue(System.String)">
            <summary>
            The escape like value.
            </summary>
            <param name="value">
            The value.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectHeaderAdapter">
            <summary>
            The project header adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectHeaderAdapter.DomainToApi(TimeLog.TLP.ProjectManagement.IProjectHeader)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.ProjectHeader"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService">
            <summary>
            Service for handling projects and time registrations in TimeLog (released Nov 2017)
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/ProjectManagement/V1_7/ProjectManagementService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/ProjectManagement/V1_7/ProjectManagementServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService"/> class.
            </summary>
            <param name="isSecure">Indicate whether the connection uses SSL</param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.CreateProject(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Project,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Create a Project.
            </summary>
            <remarks>
            Project.MainContractID refers in the creation scenario to the following values:
            TimeMaterial = 1
            FixedPrice = 2
            TimeMaterialAccountEndBalancing = 3
            TimeMaterialAccountPeriodicBalancing = 4
            PrepaidServices = 5
            RevenueReqPerTask = 6
            ContinuousService = 7
            ContinuousItemInvoicing = 8
            </remarks>
            <param name="project">The Project to be created</param>
            <param name="token"></param>
            <returns>The Project in state after creation in TimeLog {Project}</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.UpdateProject(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Project,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Update a Project
            </summary>
            <param name="project">The project to update {Project}</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>The updated project object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetProjectByExternalKey(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a project based on another systems project key (ID)
            </summary>
            <param name="key">The Key (ID) of the project in the other system</param>
            <param name="systemName">The system identifier as defined in TimeLog API settings</param>
            <param name="token"></param>
            <returns>The project in the current state including all external keys</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetProjects(System.Int32,System.Int32,System.Boolean,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Returns a list of project headers.
            </summary>
            <param name="CustomerID">Limits projects to customers with the specified ID. Parse 0 to get all projects (int)</param>
            <param name="ProjectManagerID">Limits the result to projects where the Project manager has the parsed ID. The value must be a valid employeeID. Parse 0 to get all projects (int)</param>
            <param name="IncludeInactiveProjects">If false only aktiv projects is returned. If true also inactive projects is included in the result (bool)</param>
            <param name="StatusID">Limits the result to projects with the specific Status. Values: {-1 = all, 0 = Quote, 1 = Approved, 2 = In Progress, 3 = On Hold, 4 = Completed, 5 = Archieved, 6 = Cancelled} (int)</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetProjectsByCustomer(System.Guid,System.Int32,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Returns a list of project headers.
            </summary>
            <param name="customerGuid">Limits projects to customers with the specified Guid. (Guid)</param>
            <param name="projectStatusID">Limits the result to projects with the specific Status. Values: {-1 = all, 0 = Quote, 1 = Approved, 2 = In Progress, 3 = On Hold, 4 = Completed, 5 = Archieved, 6 = Cancelled} (int)</param>
            <param name="includeInactiveProjects">If false only aktiv projects is returned. If true also inactive projects is included in the result (bool)</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.DeleteProject(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deletes the specified Project
            </summary>
            <param name="projectGuid">The ID of the Project to be deleted</param>
            <param name="token"></param>
            <returns>The specified Project in the state before it is deleted</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.ProjectChangeStatus(System.Guid,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Changes the Status of the specified Project
            </summary>
            <param name="projectGuid">The ID of the Project to change Status on</param>
            <param name="targetStatus">The interger value of the Status the specified Project should be changed to</param>
            <param name="token"></param>
            <returns>The specified Project in the state after the Status is changed</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetProjectByID(System.Int32,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a project based on the project ID
            </summary>
            <param name="projectID">Project number (int)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A Task object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.CreateTask(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Task,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates a Task on the specified Project. The Task is placed as the last item in the WBS-structure of the Project
            </summary>
            <remarks>Note: Put Task.ProjectSubContractID to 0 to inherit from the default contract of the project</remarks>
            <param name="task">The task to be created</param>
            <param name="projectID">The integer ID of the Project the created Task shold be added to</param>
            <param name="token"></param>
            <returns>The task in the state after it is created</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.CreateSubTask(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Task,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates a Task as a Sub-task to an existing Task. The new Task is placed as the last Sub-task in the WBS-structure of the Parent-task
            </summary>
            <remarks>Note: Put Task.ProjectSubContractID to 0 to inherit from the contract of the parent task</remarks>
            <param name="task">The task to be created</param>
            <param name="parentTaskId">The integer ID of the Parent-task the created Task shold be added to</param>
            <param name="projectID">The integer ID of the Project the holds the Parent-task</param>
            <param name="token"></param>
            <returns>The task in the </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.UpdateTask(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Task,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates the data properties of the specified Task. 
            </summary>
            <param name="task">The task to update</param>
            <param name="projectID">The id of the project the task belong to</param>
            <param name="token">Security token of the current user</param>
            <returns>The task in the state after update</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.DeleteTask(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deletes the specified Task
            </summary>
            <param name="taskGuid">The ID of the Task to be deleted</param>
            <param name="token">Security token of the current user</param>
            <returns>The specified Task in the state before it is deleted</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetTaskByExternalKey(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a Task by an External-key
            </summary>
            <param name="key">The ID of the Task in an external system</param>
            <param name="systemName">The system identifier as defined in TimeLog API settings</param>
            <param name="token">Security token of the current user</param>
            <returns>The Task in its current state</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.ChangeTaskStatus(System.Guid,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Changes the Status of the specified Task
            </summary>
            <param name="taskGuid">The ID of the Task to change Status on</param>
            <param name="targetStatus">The interger value of the Status the specified Task should be changed to</param>
            <param name="token">Security token of the current user</param>
            <returns>The specified Task in the state after the Status is changed</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.ChangeTaskContract(System.Guid,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Changes the contract associated with a task.
            </summary>
            <param name="taskGuid">The guid of the task</param>
            <param name="projectSubContractId">The new contract id to attach the task to</param>
            <param name="token">Security token of the current user</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetTaskById(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a task based on the guid
            </summary>
            <param name="taskGuid">The guid of the task</param>
            <param name="token">Security token of the current user</param>
            <returns>A task object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetTasksByProjectId(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of tasks associated to a project. Only first level tasks are returned, use GetProjectTasksPaged to get all levels.
            </summary>
            <param name="projectGuid">The guid of the project</param>
            <param name="token">Security token of the current user</param>
            <returns>A list fo task objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetTasksAllocatedToEmployee(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of tasks allocated to a specific employee
            </summary>
            <param name="initials">Initials of the employee to fetch allocations for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks the users is allocated to</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetTasksBySearchText(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of tasks based on the search criteria
            </summary>
            <param name="criteria">Criteria to search for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks that matches the search criteria</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetTasksBySearchTextWithoutFinancial(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of tasks based on the search criteria- without financial data
            </summary>
            <param name="criteria">Criteria to search for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks that matches the search criteria</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.MoveTaskUnderParentTask(System.Int32,TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Task,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Move task to another task
            </summary>
            <param name="parentTaskID">receiver task id</param>
            <param name="task">dropped task</param>
            <param name="changeToParentContract">if required change the dropped task contract to same as parent task contract</param>
            <param name="token">Security token of the current user</param>
            <returns>The specified Task that has been moved</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetEmployeeWork(System.String,System.DateTime,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of employee registrations within a given timespan
            </summary>
            <param name="initials">Initials of the employee to fetch details from</param>
            <param name="startDate">Start date for the timespan</param>
            <param name="endDate">End date for the timespan</param>
            <param name="token">Security token of the current user</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken"/>
            <returns>A list of employee WorkUnits within the required timespan</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.InsertWork(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.WorkUnit},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Inserts one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials, Duration, StartDateTime, EndDateTime and Description</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits inserted with additional information about task and project</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.UpdateWork(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.WorkUnit},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials, Duration, StartDateTime, EndDateTime and Description</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits updated with additional information about task and project</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.DeleteWork(System.Collections.Generic.List{System.Guid},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deletes one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits succesfully deleted</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.AddEmployeeToTask(System.Int32,System.Int32,System.Double,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Adds an employe to a task. This enables the employee to track time on the task.
            </summary>
            <param name="employeeID">The ID of the Employee who is added to the Task</param>
            <param name="taskID">The ID of the task the Employee is added to</param>
            <param name="budgetHours">The number of hours the Employee is expected to work on the Task. Set to zero if budget is unknown</param>
            <param name="token"></param>
            <returns>Returns an Allocation with date span set to the date span of the Task</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetAllocationsToEmployee(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of allocations for an employee
            </summary>
            <param name="initials">Initials of the employee (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of Allocation objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetAllocationByExternalKey(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets an Allocation by an External-Key
            </summary>
            <param name="key">The ID of the Allocation in an external system</param>
            <param name="systemName">The system identifier as defined in TimeLog API settings</param>
            <param name="token"></param>
            <returns>The Allocation in its current state</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.CreateAllocation(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Allocation,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates an allocation for an employee on a task. Use this method to control hourly rate and dates on the allocation
            Dates is only set when Dates on Allocations are activated in the system
            Set HourlyRateID = 0 to use the system alogorithm to find the correct hourly rate for the employee
            </summary>
            <param name="allocation">The allocation to be created</param>
            <param name="token"></param>
            <returns>The saved allocation</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.UpdateAllocation(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Allocation,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates hours allocated, hourly rate, start and end date on the allocation
            Set HourlyRateID to 0 if you do not want to change the hourly rate of the allocation
            To change status on the allocation use the ChangeStatusOnAllocation method
            Changes to taskID and EmployeeID will not be propagated to the application
            </summary>
            <param name="allocation">Allocation to be updated</param>
            <param name="token"></param>
            <returns>Allocation in the state after update</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.DeleteAllocation(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deletes an allocation
            </summary>
            <param name="allocationGuid">The ID of the allocation to be deleted</param>
            <param name="token"></param>
            <returns>The deleted allocation in it's state before deletion</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.SetAllocationStatus(System.Boolean,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Sets an allocation to completed or not completed
            </summary>
            <param name="isComplete">Set IsComplete to true to mark the allocations as completed or false to mark the allocation to not completed</param>
            <param name="allocationGuid">The ID of the allocation to set the status of</param>
            <param name="token"></param>
            <returns>The allocation changed in the current state after update</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.CreateAllocations(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Allocation},TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Inserts allocations for an employee to a task
            </summary>
            <param name="allocations">A list of allocations to insert (List&lt;Allocation&gt;)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of created Allocation objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.CreateProjectFromTemplate(System.String,System.String,System.String,System.String,System.Guid,System.Guid,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Create a project from a project template from customer name
            </summary>
            <param name="projectTemplateName">Name of the TLP project template (string)</param>
            <param name="projectName">Name of the new project (string)</param>
            <param name="projectNo">Project number of the new project (string)</param>
            <param name="customerName">Customer name (string)</param>
            <param name="legalEntityID">Unit_Price list identifier (guid)</param>
            <param name="priceGroupID">Project group identifier (guid)</param>
            <param name="projectManagerInitials">Project manager initials (string)</param>
            <param name="accountManagerInitials">Account manager initials (string)</param>
            <param name="handledByDepartmentNo">Department number responsible for handling (string)</param>
            <param name="orderedByDepartmentNo">Department number behind the order (string)</param>
            <param name="useProjectNumberSeries">Choose to use TLP auto or own number series (bool)</param>
            <param name="useTasksAndMileStonesFromTemplate">Choose wether to copy tasks and milestones (bool)</param>
            <param name="useResourceGroupFromTemplate">Choose wether to copy resource group (bool)</param>
            <param name="useAllocationsFromTemplate">Choose wether to copy task and milestone allocations (bool)</param>
            <param name="usePaymentPlanFromTemplate">Choose wether to copy payment plans (bool)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>The project created based on the template</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.CreateProjectFromTemplate(System.String,System.String,System.String,System.Int32,System.Guid,System.Guid,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Create a project from a project template from customer id
            </summary>
            <param name="projectTemplateName">Name of the TLP project template (string)</param>
            <param name="projectName">Name of the new project (string)</param>
            <param name="projectNo">Project number of the new project (string)</param>
            <param name="customerID">Customer ID (int)</param>
            <param name="legalEntityID">Unit_Price list identifier (guid)</param>
            <param name="priceGroupID">Project group identifier (guid)</param>
            <param name="projectManagerInitials">Project manager initials (string)</param>
            <param name="accountManagerInitials">Account manager initials (string)</param>
            <param name="handledByDepartmentNo">Department number responsible for handling (string)</param>
            <param name="orderedByDepartmentNo">Department number behind the order (string)</param>
            <param name="useProjectNumberSeries">Choose to use TLP auto or own number series (bool)</param>
            <param name="useTasksAndMileStonesFromTemplate">Choose wether to copy tasks and milestones (bool)</param>
            <param name="useResourceGroupFromTemplate">Choose wether to copy resource group (bool)</param>
            <param name="useAllocationsFromTemplate">Choose wether to copy task and milestone allocations (bool)</param>
            <param name="usePaymentPlanFromTemplate">Choose wether to copy payment plans (bool)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>The project created based on the template</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetTaskByTaskNo(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of tasks based on the task number
            </summary>
            <param name="taskNo">Task number (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of Task objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetTaskByID(System.Int32,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a task based on the task ID
            </summary>
            <param name="taskID">Task ID (int)</param>
            <param name="loadExternalKeys">Load external keys (if any) associated (bool)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A Task object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.ProjectThenSortOrderComparer">
            <summary>
            Sort function that will order list by ProjectName, ProjectNo, ProjectID, TaskSortorder
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetWorkPaged(System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a paged list of work units in a flat format including all details.
            </summary>
            <param name="initials">Provide initials to only get work units from one employee, otherwise use an empty string (string)</param>
            <param name="startDate">Date to start fetching work units from (DateTime)</param>
            <param name="endDate">Date to fetching work units to (DateTime)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.WorkUnitFlat"/>
            <remarks>Security requirements: System administrator</remarks>
            <returns>A list of work units in a flat format</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetWorkPagedWithExternalIds(System.String,System.Int32,System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a paged list of work units in a flat format including all details and external IDs.
            </summary>
            <param name="systemName">Name of the external system (string)</param>
            <param name="approvalLevel">Approval level (int)</param>
            <param name="initials">Provide initials to only get work units from one employee, otherwise use an empty string (string)</param>
            <param name="startDate">Date to start fetching work units from (DateTime)</param>
            <param name="endDate">Date to fetching work units to (DateTime)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <remarks>Security requirements: System administrator</remarks>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.WorkUnitFlatExternal"/>
            <returns>A list of work units in a flat format</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetWorkChangesPaged(System.String,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a paged list of work unit changes in a flat format including all details.
            Note that this feed includes all changes and the change log is only available 
            for the last 3 months. No log data is available before January 1st 2014. 
            </summary>
            <param name="initials">Provide initials to only get work units from one employee, otherwise use an empty string (string)</param>
            <param name="registrationStartDate">Date of registration to start fetching work units from (DateTime)</param>
            <param name="registrationEndDate">Date of registration to fetching work units to (DateTime)</param>
            <param name="changeStartDate">Date of change to start fetching work units from (DateTime)</param>
            <param name="changeEndDate">Date of change to fetching work units to (DateTime)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <remarks>
            <para>For deleted work units, only the data action
            and the work unit guid is available. This is also true for creation or update actions
            with a later delete action. Read them in ascending order by action date.</para>
            <para>Example: If today is Jan 6th and a user adds a new registration for work carried out on Jan 3rd.
            Then Jan 6th is the change-date and Jan 3rd is the registration-date. If the user edits the same registration
            on Jan 7th, then both changes will be returned (if both are within the change-date-interval).</para>
            <para>Security requirements: System administrator</para>
            </remarks>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.WorkUnitFlat"/>
            <returns>A list of work units in a flat format</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetProjectTasksPaged(System.Guid,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a paged list of tasks in a flat format including all details.
            </summary>
            <param name="projectGuid">Provide project unique id to only get tasks from that project, otherwise provide Guid.Empty (Guid)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.ProjectTaskFlat"/>
            <returns>A list of tasks in a flat format</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementService.GetWorkChangeLogPaged(System.DateTime,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a paged list of change logs related to work unit changes in a flat format including 
            all details (if available). Note that this feed includes all changes and the change log 
            is only available for the last 3 months.
            </summary>
            <param name="startDate">Start interval (DateTime - Note that the timestamp is ignored)</param>
            <param name="endDate">End interval (DateTime - Note that the timestamp is ignored)</param>
            <param name="includeCreates">A value indicating whether to include create-events in the result</param>
            <param name="includeUpdates">A value indicating whether to include update-events in the result</param>
            <param name="includeDeletes">A value indicating whether to include delete-events in the result</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.WorkUnitFlat"/>
            <returns>A list of work units in a flat format</returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementServiceSecure">
            <summary>
            Service for handling projects and time registrations in TimeLog (released Nov 2017)
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementServiceSecure.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_7.ProjectManagementServiceSecure"/> class from being created.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_7.TaskAdapter">
            <summary>
            The task adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_7.TaskAdapter._projectAdapter">
            <summary>
            The _project adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_7.TaskAdapter._customerAdapter">
            <summary>
            The _customer adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.TaskAdapter.#ctor(TimeLog.TLP.API.Common.V1_0.IAdapter{TimeLog.TLP.ProjectManagement.IProjectHeader,TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.ProjectHeader},TimeLog.TLP.API.Common.V1_0.IAdapter{TimeLog.TLP.CRM.ICustomerHeader,TimeLog.TLP.API.Proxy.CRM.V1_2.CustomerHeader})">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_7.TaskAdapter"/> class.
            </summary>
            <param name="projectAdapter">
            The project adapter.
            </param>
            <param name="customerAdapter">
            The customer adapter.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.TaskAdapter.DomainToApi(TimeLog.TLP.ProjectManagement.ITask)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Task"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.TaskAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.Task,TimeLog.TLP.ProjectManagement.ITask)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="existingTask">
            The existing task.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.ProjectManagement.ITask"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.TaskAdapter.DataRowToApi(System.Data.DataRow)">
            <summary>
            The data row to api.
            </summary>
            <param name="row">
            The row.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.ProjectTaskFlat"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.TaskAdapter.GetCustomFieldXml(TimeLog.TLP.ProjectManagement.ITask)">
            <summary>
            The get custom field xml.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:System.Xml.XmlElement"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.TaskAdapter.AddElement(System.String,System.String,System.Xml.XmlNode)">
            <summary>
            The add element.
            </summary>
            <param name="tagName">
            The tag name.
            </param>
            <param name="textContent">
            The text content.
            </param>
            <param name="parent">
            The parent.
            </param>
            <returns>
            The <see cref="T:System.Xml.XmlNode"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_7.TaskHeaderAdapter">
            <summary>
            The task header adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.TaskHeaderAdapter.DomainToApi(TimeLog.TLP.ProjectManagement.ITaskHeader)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.TaskHeader"/>.
            </returns>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter">
            <summary>
            The work unit adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter._taskManager">
            <summary>
            The _task manager.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter._employeeManager">
            <summary>
            The _employee manager.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter._workUnitManager">
            <summary>
            The _work unit manager.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter._validateInitials">
            <summary>
            The _validate initials.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter._taskHeaderAdapter">
            <summary>
            The _task header adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter._projectHeaderAdapter">
            <summary>
            The _project header adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter._customerHeaderAdapter">
            <summary>
            The _customer header adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter"/> class.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter.#ctor(TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.Common.IEmployee})">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter"/> class.
            </summary>
            <param name="validationInitials">
            The validation initials.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter.TimeLog#TLP#API#Common#V1_0#IAdapter{TimeLog#TLP#TimeRegistration#ITimeRegistration,TimeLog#TLP#API#Proxy#ProjectManagement#V1_7#WorkUnit}#DomainToApi(TimeLog.TLP.TimeRegistration.ITimeRegistration)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.WorkUnit"/>.
            </returns>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter.ApiToDomain(System.Guid)">
            <summary>
            The api to domain.
            </summary>
            <param name="guid">
            The guid.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.ProjectManagement.IWorkUnit"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.WorkUnit,System.Boolean,TimeLog.TLP.Common.IViolation@)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="violation">
            The violation.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.ProjectManagement.IWorkUnit"/>.
            </returns>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter.GetInitials(System.Int32)">
            <summary>
            The get initials.
            </summary>
            <param name="employeeID">
            The employee id.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter.DataRowToApi(System.Data.DataRow)">
            <summary>
            The data row to api.
            </summary>
            <param name="row">
            The row.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.WorkUnitFlat"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_7.WorkUnitAdapter.DataRowExternalToApi(System.Data.DataRow)">
            <summary>
            The data row external to api.
            </summary>
            <param name="row">
            The row.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_7.WorkUnitFlatExternal"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_6.AllocationAdapter">
            <summary>
            The allocation adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_6.AllocationAdapter._AllocationManager">
            <summary>
            The _ allocation manager.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_6.AllocationAdapter._ValidateInitials">
            <summary>
            The _ validate initials.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.AllocationAdapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_6.AllocationAdapter"/> class.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.AllocationAdapter.#ctor(TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.Common.IEmployee})">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_6.AllocationAdapter"/> class.
            </summary>
            <param name="validateEmployeeInitials">
            The validate employee initials.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.AllocationAdapter.TimeLog#TLP#API#Common#V1_0#IAdapter{TimeLog#TLP#ProjectManagement#IAllocation,TimeLog#TLP#API#Proxy#ProjectManagement#V1_6#Allocation}#DomainToApi(TimeLog.TLP.ProjectManagement.IAllocation)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Allocation"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.AllocationAdapter.TimeLog#TLP#API#ProjectManagement#V1_6#IAllocationAdapter#ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Allocation,TimeLog.TLP.ProjectManagement.IAllocation)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.ProjectManagement.IAllocation"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_6.IAllocationAdapter">
            <summary>
            The AllocationAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.IAllocationAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Allocation,TimeLog.TLP.ProjectManagement.IAllocation)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.ProjectManagement.IAllocation"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_6.IProjectAdapter">
            <summary>
            The ProjectAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.IProjectAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Project,TimeLog.TLP.ProjectManagement.IProject)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="existingProject">
            The existing project.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.IProjectAdapter.DomainToApi(TimeLog.TLP.ProjectManagement.IProject)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Project"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_6.ITaskAdapter">
            <summary>
            The TaskAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ITaskAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Task,TimeLog.TLP.ProjectManagement.ITask)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="existingTask">
            The existing task.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.ProjectManagement.ITask"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ITaskAdapter.DataRowToApi(System.Data.DataRow)">
            <summary>
            The data row to api.
            </summary>
            <param name="row">
            The row.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.ProjectTaskFlat"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_6.IWorkUnitAdapter">
            <summary>
            The WorkUnitAdapter interface.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.IWorkUnitAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.WorkUnit,System.Boolean,TimeLog.TLP.Common.IViolation@)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="violation">
            The violation.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.TimeRegistration.ITimeRegistration"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.IWorkUnitAdapter.ApiToDomain(System.Guid)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.TimeRegistration.ITimeRegistration"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.IWorkUnitAdapter.DataRowToApi(System.Data.DataRow)">
            <summary>
            The data row to api.
            </summary>
            <param name="row">
            The row.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.WorkUnitFlat"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.IWorkUnitAdapter.DataRowExternalToApi(System.Data.DataRow)">
            <summary>
            The data row external to api.
            </summary>
            <param name="row">
            The row.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.WorkUnitFlatExternal"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectAdapter">
            <summary>
            The project adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectAdapter._taskAdapter">
            <summary>
            The _task adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectAdapter._customerAdapter">
            <summary>
            The _customer adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectAdapter.#ctor(TimeLog.TLP.API.Common.V1_0.IAdapter{TimeLog.TLP.ProjectManagement.ITaskHeader,TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.TaskHeader},TimeLog.TLP.API.CRM.V1_2.ICustomerHeaderAdapter)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectAdapter"/> class.
            </summary>
            <param name="taskAdapter">
            The task adapter.
            </param>
            <param name="customerAdapter">
            The customer adapter.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectAdapter.DomainToApi(TimeLog.TLP.ProjectManagement.IProject)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Project"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Project,TimeLog.TLP.ProjectManagement.IProject)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="existingProject">
            The existing project.
            </param>
            <exception cref="T:System.NullReferenceException">
            </exception>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectAdapter.AddTypeNameToApi(TimeLog.TLP.ProjectManagement.IProject,TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Project)">
            <summary>
            The add type name to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <param name="project">
            The project.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectAdapter.AddCategoryNameToApi(TimeLog.TLP.ProjectManagement.IProject,TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Project)">
            <summary>
            The add category name to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <param name="project">
            The project.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectAdapter.GetProjectStageByIDFromName(System.String)">
            <summary>
            The get project stage by id from name.
            </summary>
            <param name="name">
            The name.
            </param>
            <returns>
            The <see cref="T:System.Int32"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectAdapter.EscapeLikeValue(System.String)">
            <summary>
            The escape like value.
            </summary>
            <param name="value">
            The value.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectHeaderAdapter">
            <summary>
            The project header adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectHeaderAdapter.DomainToApi(TimeLog.TLP.ProjectManagement.IProjectHeader)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.ProjectHeader"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService">
            <summary>
            Service for handling projects and time registrations in TimeLog (released May 2014) - OBSOLETE
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/ProjectManagement/V1_6/ProjectManagementService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/ProjectManagement/V1_6/ProjectManagementServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService"/> class.
            </summary>
            <param name="isSecure">Indicate whether the connection uses SSL</param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.CreateProject(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Project,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Create a Project
            </summary>
            <param name="project">The Project to be created</param>
            <param name="token"></param>
            <returns>The Project in state after creation in TimeLog {Project}</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.UpdateProject(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Project,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Update a Project
            </summary>
            <param name="project">The project to update {Project}</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>The updated project object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetProjectByExternalKey(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a project based on another systems project key (ID)
            </summary>
            <param name="key">The Key (ID) of the project in the other system</param>
            <param name="systemName">The system identifier as defined in TimeLog API settings</param>
            <param name="token"></param>
            <returns>The project in the current state including all external keys</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetProjects(System.Int32,System.Int32,System.Boolean,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Returns a list of project headers.
            </summary>
            <param name="CustomerID">Limits projects to customers with the specified ID. Parse 0 to get all projects (int)</param>
            <param name="ProjectManagerID">Limits the result to projects where the Project manager has the parsed ID. The value must be a valid employeeID. Parse 0 to get all projects (int)</param>
            <param name="IncludeInactiveProjects">If false only aktiv projects is returned. If true also inactive projects is included in the result (bool)</param>
            <param name="StatusID">Limits the result to projects with the specific Status. Values: {-1 = all, 0 = Quote, 1 = Approved, 2 = In Progress, 3 = On Hold, 4 = Completed, 5 = Archieved, 6 = Cancelled} (int)</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetProjectsByCustomer(System.Guid,System.Int32,System.Boolean,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Returns a list of project headers.
            </summary>
            <param name="customerGuid">Limits projects to customers with the specified Guid. (Guid)</param>
            <param name="projectStatusID">Limits the result to projects with the specific Status. Values: {-1 = all, 0 = Quote, 1 = Approved, 2 = In Progress, 3 = On Hold, 4 = Completed, 5 = Archieved, 6 = Cancelled} (int)</param>
            <param name="includeInactiveProjects">If false only aktiv projects is returned. If true also inactive projects is included in the result (bool)</param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.DeleteProject(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deletes the specified Project
            </summary>
            <param name="projectGuid">The ID of the Project to be deleted</param>
            <param name="token"></param>
            <returns>The specified Project in the state before it is deleted</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.ProjectChangeStatus(System.Guid,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Changes the Status of the specified Project
            </summary>
            <param name="projectGuid">The ID of the Project to change Status on</param>
            <param name="targetStatus">The interger value of the Status the specified Project should be changed to</param>
            <param name="token"></param>
            <returns>The specified Project in the state after the Status is changed</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.CreateTask(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Task,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates a Task on the specified Project. The Task is placed as the last item in the WBS-structure of the Project
            </summary>
            <param name="task">The task to be created</param>
            <param name="projectID">The integer ID of the Project the created Task shold be added to</param>
            <param name="token"></param>
            <returns>The task in the state after it is created</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.CreateSubTask(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Task,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates a Task as a Sub-task to an existing Task. The new Task is placed as the last Sub-task in the WBS-structure of the Parent-task
            </summary>
            <param name="task">The task to be created</param>
            <param name="parentTaskId">The integer ID of the Parent-task the created Task shold be added to</param>
            <param name="projectID">The integer ID of the Project the holds the Parent-task</param>
            <param name="token"></param>
            <returns>The task in the </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.UpdateTask(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Task,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates the data properties of the specified Task. 
            </summary>
            <param name="task">The task to update</param>
            <param name="projectID"></param>
            <param name="token"></param>
            <returns>The task in the state after update</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.DeleteTask(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deletes the specified Task
            </summary>
            <param name="taskGuid">The ID of the Task to be deleted</param>
            <param name="token"></param>
            <returns>The specified Task in the state before it is deleted</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetTaskByExternalKey(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a Task by an External-key
            </summary>
            <param name="key">The ID of the Task in an external system</param>
            <param name="systemName">The system identifier as defined in TimeLog API settings</param>
            <param name="token"></param>
            <returns>The Task in its current state</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.ChangeTaskStatus(System.Guid,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Changes the Status of the specified Task
            </summary>
            <param name="taskGuid">The ID of the Task to change Status on</param>
            <param name="targetStatus">The interger value of the Status the specified Task should be changed to</param>
            <param name="token"></param>
            <returns>The specified Task in the state after the Status is changed</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetTasksAllocatedToEmployee(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of tasks allocated to a specific employee
            </summary>
            <param name="initials">Initials of the employee to fetch allocations for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks the users is allocated to</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetTasksBySearchText(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of tasks based on the search criteria
            </summary>
            <param name="criteria">Criteria to search for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks that matches the search criteria</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetEmployeeWork(System.String,System.DateTime,System.DateTime,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of employee registrations within a given timespan
            </summary>
            <param name="initials">Initials of the employee to fetch details from</param>
            <param name="startDate">Start date for the timespan</param>
            <param name="endDate">End date for the timespan</param>
            <param name="token">Security token of the current user</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken"/>
            <returns>A list of employee WorkUnits within the required timespan</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.InsertWork(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.WorkUnit},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Inserts one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials, Duration, StartDateTime, EndDateTime and Description</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits inserted with additional information about task and project</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.UpdateWork(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.WorkUnit},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials, Duration, StartDateTime, EndDateTime and Description</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits updated with additional information about task and project</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.DeleteWork(System.Collections.Generic.List{System.Guid},System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deletes one or more registrations based on initials and task ID
            </summary>
            <param name="work">An array of WorkUnit objects. Initialize at least GUID, TaskID, EmployeeInitials</param>
            <param name="source" >Externals should use 0</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <param name="token">Security token of the current user</param>
            <returns>An array of the WorkUnits succesfully deleted</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.AddEmployeeToTask(System.Int32,System.Int32,System.Double,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Adds an employe to a task. This enables the employee to track time on the task.
            </summary>
            <param name="employeeID">The ID of the Employee who is added to the Task</param>
            <param name="taskID">The ID of the task the Employee is added to</param>
            <param name="budgetHours">The number of hours the Employee is expected to work on the Task. Set to zero if budget is unknown</param>
            <param name="token"></param>
            <returns>Returns an Allocation with date span set to the date span of the Task</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetAllocationsToEmployee(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of allocations for an employee
            </summary>
            <param name="initials">Initials of the employee (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of Allocation objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetAllocationByExternalKey(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets an Allocation by an External-Key
            </summary>
            <param name="key">The ID of the Allocation in an external system</param>
            <param name="systemName">The system identifier as defined in TimeLog API settings</param>
            <param name="token"></param>
            <returns>The Allocation in its current state</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.CreateAllocation(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Allocation,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Creates an allocation for an employee on a task. Use this method to control hourly rate and dates on the allocation
            Dates is only set when Dates on Allocations are activated in the system
            Set HourlyRateID = 0 to use the system alogorithm to find the correct hourly rate for the employee
            </summary>
            <param name="allocation">The allocation to be created</param>
            <param name="token"></param>
            <returns>The saved allocation</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.UpdateAllocation(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Allocation,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Updates hours allocated, hourly rate, start and end date on the allocation
            Set HourlyRateID to 0 if you do not want to change the hourly rate of the allocation
            To change status on the allocation use the ChangeStatusOnAllocation method
            Changes to taskID and EmployeeID will not be propagated to the application
            </summary>
            <param name="allocation">Allocation to be updated</param>
            <param name="token"></param>
            <returns>Allocation in the state after update</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.DeleteAllocation(System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deletes an allocation
            </summary>
            <param name="allocationGuid">The ID of the allocation to be deleted</param>
            <param name="token"></param>
            <returns>The deleted allocation in it's state before deletion</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.SetAllocationStatus(System.Boolean,System.Guid,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Sets an allocation to completed or not completed
            </summary>
            <param name="isComplete">Set IsComplete to true to mark the allocations as completed or false to mark the allocation to not completed</param>
            <param name="allocationGuid">The ID of the allocation to set the status of</param>
            <param name="token"></param>
            <returns>The allocation changed in the current state after update</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.CreateAllocations(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Allocation},TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Inserts allocations for an employee to a task
            </summary>
            <param name="allocations">A list of allocations to insert (List&lt;Allocation&gt;)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of created Allocation objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.CreateProjectFromTemplate(System.String,System.String,System.String,System.String,System.Guid,System.Guid,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Create a project from a project template
            </summary>
            <param name="projectTemplateName">Name of the TLP project template (string)</param>
            <param name="projectName">Name of the new project (string)</param>
            <param name="projectNo">Project number of the new project (string)</param>
            <param name="customerName">Customer name (string)</param>
            <param name="priceListID">Unit_Price list identifier (guid)</param>
            <param name="priceGroupID">Project group identifier (guid)</param>
            <param name="projectManagerInitials">Project manager initials (string)</param>
            <param name="accountManagerInitials">Account manager initials (string)</param>
            <param name="handledByDepartmentNo">Department number responsible for handling (string)</param>
            <param name="orderedByDepartmentNo">Department number behind the order (string)</param>
            <param name="useProjectNumberSeries">Choose to use TLP auto or own number series (bool)</param>
            <param name="useTasksAndMileStonesFromTemplate">Choose wether to copy tasks and milestones (bool)</param>
            <param name="useResourceGroupFromTemplate">Choose wether to copy resource group (bool)</param>
            <param name="useAllocationsFromTemplate">Choose wether to copy task and milestone allocations (bool)</param>
            <param name="usePaymentPlanFromTemplate">Choose wether to copy payment plans (bool)</param>
            <param name="source">Interface source number, in most cases use 0 (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.SourceInterface"/>
            <returns>The project created based on the template</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetTaskByTaskNo(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of tasks based on the task number
            </summary>
            <param name="taskNo">Task number (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of Task objects</returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.ProjectThenSortOrderComparer">
            <summary>
            Sort function that will order list by ProjectName, ProjectNo, ProjectID, TaskSortorder
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetWorkPaged(System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a paged list of work units in a flat format including all details.
            </summary>
            <param name="initials">Provide initials to only get work units from one employee, otherwise use an empty string (string)</param>
            <param name="startDate">Date to start fetching work units from (DateTime)</param>
            <param name="endDate">Date to fetching work units to (DateTime)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.WorkUnitFlat"/>
            <remarks>Security requirements: System administrator</remarks>
            <returns>A list of work units in a flat format. Note that the field TotalPageCount has been depricated.</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetWorkPagedWithExternalIds(System.String,System.Int32,System.String,System.DateTime,System.DateTime,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a paged list of work units in a flat format including all details and external IDs.
            </summary>
            <param name="systemName">Name of the external system (string)</param>
            <param name="approvalLevel">Approval level (int)</param>
            <param name="initials">Provide initials to only get work units from one employee, otherwise use an empty string (string)</param>
            <param name="startDate">Date to start fetching work units from (DateTime)</param>
            <param name="endDate">Date to fetching work units to (DateTime)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <remarks>Security requirements: System administrator</remarks>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.WorkUnitFlatExternal"/>
            <returns>A list of work units in a flat format. Note that the field TotalPageCount has been depricated.</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetWorkChangesPaged(System.String,System.DateTime,System.DateTime,System.DateTime,System.DateTime,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a paged list of work unit changes in a flat format including all details.
            Note that this feed includes all changes and the change log is only available 
            for the last 3 months. No log data is available before January 1st 2014. 
            </summary>
            <param name="initials">Provide initials to only get work units from one employee, otherwise use an empty string (string)</param>
            <param name="registrationStartDate">Date of registration to start fetching work units from (DateTime)</param>
            <param name="registrationEndDate">Date of registration to fetching work units to (DateTime)</param>
            <param name="changeStartDate">Date of change to start fetching work units from (DateTime)</param>
            <param name="changeEndDate">Date of change to fetching work units to (DateTime)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <remarks>
            <para>For deleted work units, only the data action
            and the work unit guid is available. This is also true for creation or update actions
            with a later delete action. Read them in ascending order by action date.</para>
            <para>Example: If today is Jan 6th and a user adds a new registration for work carried out on Jan 3rd.
            Then Jan 6th is the change-date and Jan 3rd is the registration-date. If the user edits the same registration
            on Jan 7th, then both changes will be returned (if both are within the change-date-interval).</para>
            <para>Security requirements: System administrator</para>
            </remarks>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.WorkUnitFlat"/>
            <returns>A list of work units in a flat format. Note that the field TotalPageCount has been depricated.</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetProjectTasksPaged(System.Guid,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a paged list of tasks in a flat format including all details.
            </summary>
            <param name="projectGuid">Provide project unique id to only get tasks from that project, otherwise provide Guid.Empty (Guid)</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.ProjectTaskFlat"/>
            <returns>A list of tasks in a flat format. Note that the field TotalPageCount has been depricated.</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetWorkChangeLogPaged(System.DateTime,System.DateTime,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a paged list of change logs related to work unit changes in a flat format including 
            all details (if available). Note that this feed includes all changes and the change log 
            is only available for the last 3 months.
            </summary>
            <param name="startDate">Start interval (DateTime)</param>
            <param name="endDate">End interval (DateTime)</param>
            <param name="includeCreates">A value indicating whether to include create-events in the result</param>
            <param name="includeUpdates">A value indicating whether to include update-events in the result</param>
            <param name="includeDeletes">A value indicating whether to include delete-events in the result</param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.WorkUnitFlat"/>
            <returns>A list of work units in a flat format. Note that the field TotalPageCount has been depricated.</returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementService.GetTasksBySearchTextWithoutFinancial(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of tasks based on the search criteria      - without financial data
            </summary>
            <param name="criteria">Criteria to search for</param>
            <param name="token">Security token of the current user</param>
            <returns>A list of tasks that matches the search criteria</returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementServiceSecure">
            <summary>
            Service for handling projects and time registrations in TimeLog (released January 2014)
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementServiceSecure.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_6.ProjectManagementServiceSecure"/> class from being created.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_6.TaskAdapter">
            <summary>
            The task adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_6.TaskAdapter._projectAdapter">
            <summary>
            The _project adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_6.TaskAdapter._customerAdapter">
            <summary>
            The _customer adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.TaskAdapter.#ctor(TimeLog.TLP.API.Common.V1_0.IAdapter{TimeLog.TLP.ProjectManagement.IProjectHeader,TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.ProjectHeader},TimeLog.TLP.API.Common.V1_0.IAdapter{TimeLog.TLP.CRM.ICustomerHeader,TimeLog.TLP.API.Proxy.CRM.V1_2.CustomerHeader})">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_6.TaskAdapter"/> class.
            </summary>
            <param name="projectAdapter">
            The project adapter.
            </param>
            <param name="customerAdapter">
            The customer adapter.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.TaskAdapter.DomainToApi(TimeLog.TLP.ProjectManagement.ITask)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Task"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.TaskAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.Task,TimeLog.TLP.ProjectManagement.ITask)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="existingTask">
            The existing task.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.ProjectManagement.ITask"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.TaskAdapter.DataRowToApi(System.Data.DataRow)">
            <summary>
            The data row to api.
            </summary>
            <param name="row">
            The row.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.ProjectTaskFlat"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.TaskAdapter.GetCustomFieldXml(TimeLog.TLP.ProjectManagement.ITask)">
            <summary>
            The get custom field xml.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:System.Xml.XmlElement"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.TaskAdapter.AddElement(System.String,System.String,System.Xml.XmlNode)">
            <summary>
            The add element.
            </summary>
            <param name="tagName">
            The tag name.
            </param>
            <param name="textContent">
            The text content.
            </param>
            <param name="parent">
            The parent.
            </param>
            <returns>
            The <see cref="T:System.Xml.XmlNode"/>.
            </returns>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_6.TaskHeaderAdapter">
            <summary>
            The task header adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.TaskHeaderAdapter.DomainToApi(TimeLog.TLP.ProjectManagement.ITaskHeader)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.TaskHeader"/>.
            </returns>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="T:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter">
            <summary>
            The work unit adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter._taskManager">
            <summary>
            The _task manager.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter._employeeManager">
            <summary>
            The _employee manager.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter._workUnitManager">
            <summary>
            The _work unit manager.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter._validateInitials">
            <summary>
            The _validate initials.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter._taskHeaderAdapter">
            <summary>
            The _task header adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter._projectHeaderAdapter">
            <summary>
            The _project header adapter.
            </summary>
        </member>
        <member name="F:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter._customerHeaderAdapter">
            <summary>
            The _customer header adapter.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter"/> class.
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter.#ctor(TimeLog.TLP.Common.IBusinessRuleReturnType{System.String,TimeLog.TLP.Common.IEmployee})">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter"/> class.
            </summary>
            <param name="validationInitials">
            The validation initials.
            </param>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter.TimeLog#TLP#API#Common#V1_0#IAdapter{TimeLog#TLP#TimeRegistration#ITimeRegistration,TimeLog#TLP#API#Proxy#ProjectManagement#V1_6#WorkUnit}#DomainToApi(TimeLog.TLP.TimeRegistration.ITimeRegistration)">
            <summary>
            The domain to api.
            </summary>
            <param name="domain">
            The domain.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.WorkUnit"/>.
            </returns>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter.ApiToDomain(System.Guid)">
            <summary>
            The api to domain.
            </summary>
            <param name="guid">
            The guid.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.ProjectManagement.IWorkUnit"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter.ApiToDomain(TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.WorkUnit,System.Boolean,TimeLog.TLP.Common.IViolation@)">
            <summary>
            The api to domain.
            </summary>
            <param name="api">
            The api.
            </param>
            <param name="isInsert">
            To differentiate between insert and update
            </param>
            <param name="violation">
            The violation.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.ProjectManagement.IWorkUnit"/>.
            </returns>
            <exception cref="T:System.Exception">
            </exception>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter.GetInitials(System.Int32)">
            <summary>
            The get initials.
            </summary>
            <param name="employeeID">
            The employee id.
            </param>
            <returns>
            The <see cref="T:System.String"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter.DataRowToApi(System.Data.DataRow)">
            <summary>
            The data row to api.
            </summary>
            <param name="row">
            The row.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.WorkUnitFlat"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.ProjectManagement.V1_6.WorkUnitAdapter.DataRowExternalToApi(System.Data.DataRow)">
            <summary>
            The data row external to api.
            </summary>
            <param name="row">
            The row.
            </param>
            <returns>
            The <see cref="T:TimeLog.TLP.API.Proxy.ProjectManagement.V1_6.WorkUnitFlatExternal"/>.
            </returns>
        </member>
        <member name="M:TimeLog.TLP.API.EventChangeLog.V1_0.EventChangeLogService.GetEventChangeLogForEmployee(System.DateTime,System.DateTime,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Get the EventChangeLogs for a s in a period
            </summary>
            <param name="domainType"></param>
            <param name="startDateTime"></param>
            <param name="endDateTime"></param>
            <param name="page">Page to get results from (int)</param>
            <param name="pageSize">Number of results per page. Max value: 500. (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.Registration.V1_0.TimeTrackingService.GetTimeTrackingItems(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of time tracking groups and the associated time tracking items
            based on the user associated with the security token. 
            </summary>
            <param name="token">Security token associated with the request</param>
            <returns>A list of TimeTrackingGroup objects with associated TimeTrackingItem objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Registration.V1_0.TimeTrackingService.GetTimeRegistrationByExternalKey(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a single time registration object based on the parameters. If no registration can be
            matched with the external key from a given external system name then a null object is returned.
            A user can only fetch registrations belonging to the user associated with the security token.
            </summary>
            <param name="externalKey">Key associated with a related object in the external system</param>
            <param name="externalSystemName">Name of the external system</param>
            <param name="token">Security token associated with the request</param>
            <returns>A single TimeRegistration object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Registration.V1_0.TimeTrackingService.SaveTimeRegistrationByExternalKey(TimeLog.TLP.API.Proxy.Registration.V1_0.TimeRegistration,System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Saves a registration detecting based on the externalKey parameter if the registration should
            be inserted or updated. An error is returned if the registration cannot be saved due to
            business rules (e.g. closed week). A registration will always belong to the user associated
            with the security token.
            </summary>
            <param name="registration">Registration details to be saved</param>
            <param name="externalKey">Key associated with a related object in the external system</param>
            <param name="externalSystemName">Name of the external system</param>
            <param name="token">Security token associated with the request</param>
            <returns>A single TimeRegistration object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Registration.V1_0.TimeTrackingService.DeleteTimeRegistrationByExternalKey(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Deletes a registration based on the externalKey parameter. An error is returned if the
            registration cannot be deleted due to business rules (e.g. closed week). A user can only
            delete a registration belonging to the user associated with the security token.
            </summary>
            <param name="externalKey">Key associated with a related object in the external system</param>
            <param name="externalSystemName">Name of the external system</param>
            <param name="token">Security token associated with the request</param>
            <returns>A value indicating whether the registration was deleted</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Registration.V1_0.TimeTrackingService.GetOTTVersion(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the current OTT version in the system
            </summary>
            <param name="token">Security token associated with the request</param>
            <returns>Current OTT version in the system</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Registration.V1_0.TimeTrackingService.GetTimeRegistrationsModifiedInPeriodPaged(System.DateTime,System.DateTime,System.Int32,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken,System.Boolean,System.String)">
            <summary>
            Will return all timeregistrations with a data action defining what type of change has been made. And a delta value for the change of time on the registration. 
            </summary>
            <param name="startDate"></param>
            <param name="endDate"></param>
            <param name="page"></param>
            <param name="pageSize"></param>
            <param name="token"></param>
            <param name="includeExternalKeys"></param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.Registration.V1_0.TimeTrackingService.ExecuteMethodApi``2(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken,System.Func{System.Collections.Generic.IEnumerable{``1}},System.Func{``1,``0},System.String)">
            <summary>
            Executes the method API.
            </summary>
            <typeparam name="TReturnType">The type of the return type.</typeparam>
            <typeparam name="TMethodReturnType">The type of the method return type.</typeparam>
            <param name="token">The token.</param>
            <param name="apiMethodFunc">The API method function.</param>
            <param name="mappingFunc">The mapping function.</param>
            <param name="methodName">Name of the method.</param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.ResourceManagement.V1_0.CalendarEventService.InsertCalendarEvent(TimeLog.TLP.API.Proxy.ResourceManagement.V1_0.CalendarEvent,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Insert the calendar event
            </summary>
            <param name="calendarEvent"></param>    
            <param name="token"></param> 
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.ResourceManagement.V1_0.CalendarEventService.UpdateCalendarEvent(TimeLog.TLP.API.Proxy.ResourceManagement.V1_0.CalendarEvent,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Update the calendar event
            </summary>
            <param name="calendarEvent"></param>    
            <param name="token"></param> 
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.ResourceManagement.V1_0.CalendarEventService.DeleteCalendarEventRecurrenceInstance(System.String,System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            If RecurID is null, it will delete all the instances (from today to future) with the same UID. Otherwise only the specifiy instance with the same UID and RecurID will be deleted
            </summary>
            <param name="UID"></param>
            <param name="recurID"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.ResourceManagement.V1_0.CalendarEventService.InsertCalendarEventsBatch(System.Collections.Generic.List{TimeLog.TLP.API.Proxy.ResourceManagement.V1_0.CalendarEvent},TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Rule: Will ignore calendar events in the past (before today) and only insert whatever is valid.
            </summary>
            <param name="calendarEventsToInsert"></param>
            <param name="token"></param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.ResourceManagement.V1_0.CalendarEventService.ExecuteMethodApi``2(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken,System.Func{System.Collections.Generic.IEnumerable{``1}},System.Func{``1,``0},System.String)">
            <summary>
            Executes the method API.
            </summary>
            <typeparam name="TReturnType">The type of the return type.</typeparam>
            <typeparam name="TMethodReturnType">The type of the method return type.</typeparam>
            <param name="token">The token.</param>
            <param name="apiMethodFunc">The API method function.</param>
            <param name="mappingFunc">The mapping function.</param>
            <param name="methodName">Name of the method.</param>
            <returns></returns>
        </member>
        <member name="T:TimeLog.TLP.API.Salary.V1_0.ISalaryAdapter">
            <summary>
            Maps between TLP salary management domain objects and the API equivalent
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Salary.V1_0.SalaryAdapter">
            <summary>
            Maps between TLP salary management domain objects and the API equivalent
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Salary.V1_0.SalaryService">
            <summary>
            Service for handling salary requests in TimeLog (released January 2014) 
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/Salary/V1_0/SalaryService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/Salary/V1_0/SalaryServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.Salary.V1_0.SalaryService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Salary.V1_0.SalaryService"/> class.
            </summary>
            <param name="isSecure">use HTTP or HTTPS</param>
        </member>
        <member name="M:TimeLog.TLP.API.Salary.V1_0.SalaryService.GetAllowances(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a simple list of available allowance legislations
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Salary.V1_0.Allowance"/>
            <returns>A list of Allowance objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Salary.V1_0.SalaryService.GetAllSalaryCodes(TimeLog.TLP.Common.SalaryCodeStatus,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of salary codes based on status
            </summary>
            <param name="salaryCodeStatus">Active, Inactive, or All</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A Salary object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Salary.V1_0.SalaryService.GetHolidayCalendars(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a simple list of available holiday calendars
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="N:TimeLog.TLP.HolidayCalendar"/>
            <returns>A list of HolidayCalendar objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Salary.V1_0.SalaryService.GetNormalWorkweeks(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a simple list of available normal working times
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Salary.V1_0.NormalWorkweek"/>
            <returns>A list of NormalWorkweek objects</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Salary.V1_0.SalaryServiceSecure">
            <summary>
            Service for handling salary requests in TimeLog)
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Salary.V1_1.SalaryService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Salary.V1_1.SalaryService"/> class.
            </summary>
            <param name="isSecure">use HTTP or HTTPS</param>
        </member>
        <member name="M:TimeLog.TLP.API.Salary.V1_1.SalaryService.GetAllowances(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a simple list of available allowance legislations
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Salary.V1_0.Allowance"/>
            <returns>A list of Allowance objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Salary.V1_1.SalaryService.GetAllSalaryCodes(TimeLog.TLP.Common.SalaryCodeStatus,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of salary codes based on status
            </summary>
            <param name="salaryCodeStatus">Active, Inactive, or All</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A Salary object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Salary.V1_1.SalaryService.GetHolidayCalendars(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a simple list of available holiday calendars
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="N:TimeLog.TLP.HolidayCalendar"/>
            <returns>A list of HolidayCalendar objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Salary.V1_1.SalaryService.GetNormalWorkweeks(TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a simple list of available normal working times
            </summary>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <see cref="!:Proxy.Salary.V1_1.NormalWorkweek"/>
            <returns>A list of NormalWorkweek objects</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Salary.V1_1.SalaryServiceSecure">
            <summary>
            Service for handling salary requests in TimeLog)
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Security.V1_2.SecurityService">
            <summary>
            Service for authentication in TimeLog (released September 2013) 
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/Security/V1_2/SecurityService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/Security/V1_2/SecurityServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.Security.V1_2.SecurityService.GetToken(System.String,System.String)">
            <summary>
            Exchanges the user credentials for a SecurityToken
            </summary>
            <param name="user">User name or initials</param>
            <param name="password">Password of the user</param>
            <returns>A security token allowing access to other services</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Security.V1_2.SecurityService.GetUser(TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Fetches the user details of the user associated with the SecurityToken
            </summary>
            <param name="token">The token of the authenticated user</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken"/>
            <returns>User details</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Security.V1_2.SecurityService.GetTimeRegistrationSettings(TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken)">
            <summary>
            Gets the time registration settings for the current user
            </summary>
            <remarks>
            <para>AdditionalTextFieldValidation:</para>
            <list type="table">
            <item><Value>0</Value><Description>No validation</Description></item>
            <item><Value>1</Value><Description>Based on AdditionalTextIsRequired on task, apply validation based on type</Description></item>
            <item><Value>2</Value><Description>Field is required, apply validation based on type</Description></item>
            </list>
            <para>AdditionalTextFieldType:</para>
            <list type="table">
            <item><Value>0</Value><Description>No type specified</Description></item>
            <item><Value>1</Value><Description>Text</Description></item>
            <item><Value>2</Value><Description>Integer</Description></item>
            </list>
            </remarks>
            <param name="token">Security token of the current user</param>
            <see cref="T:TimeLog.TLP.API.Proxy.Security.V1_2.SecurityToken"/>
            <returns>A list of settings regarding the time registration</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Security.V1_0.SecurityService.GetToken(System.String,System.String)">
            <summary>
            This is the Authentication of TimelogTrackerAPI and will validate user in TimeTracking APi Context
            This Means that TrackerAPI must be set active i appsettings
            </summary>
            <param name="user"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:TimeLog.TLP.API.Security.V1_1.SecurityService.GetToken(System.String,System.String)">
            <summary>
            This is the Authentication of TimelogTrackerAPI and will validate user in TimeTracking APi Context
            This Means that TrackerAPI must be set active i appsettings
            </summary>
            <param name="user"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:TimeLog.TLP.API.Security.V1_3.APISecurity">
            <summary>
            This class handles all API security
            </summary>
        </member>
        <member name="M:TimeLog.TLP.API.Security.V1_3.APISecurity.#ctor(TimeLog.TLP.API.Proxy.Common.V1_3.IBaseService)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Security.V1_3.APISecurity"/> class.
            </summary>
            <param name="service">The base service class</param>
        </member>
        <member name="T:TimeLog.TLP.API.ServiceModel.FlatWsdlServiceHostFactory">
            <summary>
            this factory also support MultipleIISBindingSupportServiceHostFactory
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Transaction.V1_0.ITransactionAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Transaction.V1_0.TransactionAdapter">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:TimeLog.TLP.API.Transaction.V1_0.TransactionService">
            <summary>
            Exposes methods needed to handle transaction logging through the API (released June 2013)
            </summary>
            <remarks>
            Unencrypted: http://app[x].timelog.com/[account name]/WebServices/Transaction/V1_0/TransactionService.svc
            SSL: https://app[x].timelog.com/[account name]/WebServices/Transaction/V1_0/TransactionServiceSecure.svc
            </remarks>
        </member>
        <member name="M:TimeLog.TLP.API.Transaction.V1_0.TransactionService.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:TimeLog.TLP.API.Transaction.V1_0.TransactionService"/> class.
            </summary>
            <param name="isSecure">A value indicating whether the service is setup to be using SSL</param>
        </member>
        <member name="M:TimeLog.TLP.API.Transaction.V1_0.TransactionService.GetTransactions(System.String,System.DateTime,System.DateTime,System.Int32,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets a list of transaction logs filtered on system name and date span
            </summary>
            <param name="systemName">Name of the external system (string)</param>
            <param name="from">Start date to filter logs by (DateTime)</param>
            <param name="to">End date to filter logs by (DateTime)</param>
            <param name="maxResults">Maximum number of results (int)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A list of transaction log objects</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Transaction.V1_0.TransactionService.AddTransaction(TimeLog.TLP.API.Proxy.Transaction.V1_0.ExternalTransaction,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Adds a transaction log to TimeLog
            </summary>
            <param name="externalTransaction">The transaction to log (ExternalTransaction)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>The inserted transaction log object</returns>
        </member>
        <member name="M:TimeLog.TLP.API.Transaction.V1_0.TransactionService.GetLatestTransaction(System.String,TimeLog.TLP.API.Proxy.Security.V1_3.SecurityToken)">
            <summary>
            Gets the latest transaction log from a given system
            </summary>
            <param name="systemName">Name of the external system (string)</param>
            <param name="token">Security token associated with the request (SecurityToken)</param>
            <returns>A transaction log object</returns>
        </member>
        <member name="T:TimeLog.TLP.API.Transaction.V1_0.TransactionServiceSecure">
            <summary>
            Exposes methods needed to handle transaction logging through the API (released June 2013)
            </summary>
        </member>
    </members>
</doc>
