@{
    ViewBag.Title = "REST API - Introduction";
}

<article class="article">
    <h1>Introduction to the REST API</h1>
    <p>
        TimeLog API is built on REST (Representational State Transfer). It exposes a set of
        web services that can be accessed through the HTTP protocol. Each web service is responsible for servicing methods to interact
        with the object model within the namespace. E.g. the Absence Code endpoint will expose methods needed
        to handle absence code.
    </p>
    <p>
        The API is grouped into modules that will activate the methods needed to support a given area of work.
        E.g. the time registration module will activate a number of methods in the TimeRegistration endpoints
        but not necessarily all of them. This will allow you to limit the access to the API to a minimum and
        thereby limiting the data exposed through the API.
    </p>
    <h3>
        Data Object Structure
    </h3>
    <p>
        The API exposes the domain objects of TimeLog. Often when interacting with domain objects
        you need meta data on the objects such as main information on parent objects, details about dimensions
        or status etc. E.g. when working with time registrations (WorkUnit object) you might like to know
        which customer, project or task the time is tracked on. If the API contained only raw domain objects
        you would have to load each of these objects through calls to the API. TimeLog API provides
        a details section with every domain object - the Details-property. This property contains a compressed
        set of data of relevant meta data. Some of the data in the details property is encapsulated in "header"
        objects. Header objects is the essential data of the full object. So in the WorkUnit object (time
        registration) details section you will find a CustomerHeader object which gives you the most important
        information on the customer to be displayed with the work unit, saving you from requesting the customer
        through the API.
    </p>
    <h3 id="taf">TAF (TimeLog API Format)</h3>
    <p>
        A success request will be wrap with two types of structure. TAFSingle or TAFList, TAFSingle used for single object, for TAFList used for multiple objects.
    </p>
    <span>TAFSingle</span>
    <pre>
{
    "Properties": {
        "CompanyName": "TimeLog A/S",
        "NumberCultureID": 1030,
        "TimeFormat": 1,
        "TimeRoundingFormat": 3,
        "BillableHourIsEditable": true,
        "StopwatchTimeTracking": true,
        "SystemCurrencyID": 35,
        "SystemCurrencyRate": 100,
        "SystemCurrencyABB": "DKK",
        "IsAbsenceActive": true
    },
    "Links": [
        {
            "Href": "http://localhost/mobile-api/api/v1/user-setting",
            "Rel": "self"
        }
    ]
}
</pre>
    <span>TAFList</span>
    <pre>
{
    "Properties": {
        "TotalRecord": "41",
        "TotalPage": "5",
        "PageNumber": "1"
    },
    "Entities": [
        {
            "Properties": {
                "CurrencyID": 1,
                "CurrencyABB": "AUD",
                "DescriptiveName": "Australia Dollars",
                "CurrentRate": 477.72,
                "IsActive": true
            }
        },
        {
            "Properties": {
                "CurrencyID": 2,
                "CurrencyABB": "BGN",
                "DescriptiveName": "Bulgaria Leva",
                "CurrentRate": 381.02,
                "IsActive": true
            }
        }
    ],
    "Links": [
        {
            "Href": "http://localhost/mobile-api/api/v1/currency",
            "Rel": "self"
        }
    ]
}
</pre>
    <h3>
        TAFList (Query Options)
    </h3>
    <p>
        All the request with TAFList can be used with extra query options such as $pagesize, $page and $expand. 
        With query options provided to the endpoint, it allows to collapse or expand child entity, or retrieve data by page size.
    </p>
    <pre>http://localhost/timelog/api/v1/task/search-by-customer?userID=3&searchText=Company&$page=1&$pagesize=5&$expand=project</pre>
    <h3>
        API Support Policy
    </h3>
    <p>
        TimeLog guarantees solutions build on a given version of the TimeLog API will work three years
        from the release of that specific version. E.g. TimeRegistration endpoint v1 was released March 2019 and will be
        supported at least until March 2021.
    </p>
    <p>
        If a solution is upgraded from one version of the API to a newer version, no guarantee is given that the
        solution will still work. TimeLog will provide updated documentation for new versions of the API.
    </p>
</article>